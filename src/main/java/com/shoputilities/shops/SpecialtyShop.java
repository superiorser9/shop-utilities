package com.shoputilities.shops;

import com.google.common.collect.ImmutableMap;
import com.shoputilities.ShopItemInfo;
import com.shoputilities.ShopRates;
import com.shoputilities.Shop;
import net.runelite.api.ItemID;

public enum SpecialtyShop implements Shop
{
	AARON_S_ARCHERY_APPENDAGES("Aaron's Archery Appendages.", new ShopRates(1.0, 0.5, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.LEATHER_BODY, new ShopItemInfo(10, 30000, 21, 10))
		.put(ItemID.HARDLEATHER_BODY, new ShopItemInfo(10, 36000, 170, 85))
		.put(ItemID.STUDDED_BODY, new ShopItemInfo(10, 42000, 850, 425))
		.put(ItemID.LEATHER_CHAPS, new ShopItemInfo(20, 30000, 20, 10))
		.put(ItemID.STUDDED_CHAPS, new ShopItemInfo(15, 48000, 750, 375))
		.put(ItemID.COIF, new ShopItemInfo(10, 30000, 200, 100))
		.put(ItemID.LEATHER_COWL, new ShopItemInfo(10, 42000, 24, 12))
		.put(ItemID.LEATHER_VAMBRACES, new ShopItemInfo(10, 90000, 18, 9))
		.build()
	),
	AGMUNDI_QUALITY_CLOTHES("Agmundi Quality Clothes", new ShopRates(1.3, 0.55, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SKIRT_5050, new ShopItemInfo(3, 30000, 715, 302))
		.put(ItemID.SKIRT_5052, new ShopItemInfo(3, 30000, 812, 343))
		.put(ItemID.TROUSERS_5038, new ShopItemInfo(3, 24000, 910, 385))
		.put(ItemID.TROUSERS_5040, new ShopItemInfo(3, 24000, 975, 412))
		.put(ItemID.SHORTS_5044, new ShopItemInfo(3, 21000, 468, 198))
		.put(ItemID.SHORTS_5046, new ShopItemInfo(3, 21000, 507, 214))
		.put(ItemID.WOVEN_TOP_5026, new ShopItemInfo(3, 33000, 812, 343))
		.put(ItemID.WOVEN_TOP_5028, new ShopItemInfo(3, 33000, 845, 357))
		.put(ItemID.SHIRT_5032, new ShopItemInfo(3, 30000, 780, 330))
		.put(ItemID.SHIRT_5034, new ShopItemInfo(3, 30000, 812, 343))
		.build()
	),
	AK_HARANU_S_EXOTIC_SHOP("Ak-Haranu's Exotic Shop.", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BOLT_RACK, new ShopItemInfo(500, 30000, 50, 27))
		.build()
	),
	ALECK_S_HUNTER_EMPORIUM("Aleck's Hunter Emporium.", new ShopRates(1.2, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BUTTERFLY_NET, new ShopItemInfo(5, 6000, 24, 14))
		.put(ItemID.BUTTERFLY_JAR, new ShopItemInfo(100, 6000, 1, 0))
		.put(ItemID.MAGIC_BOX, new ShopItemInfo(30, 30000, 720, 420))
		.put(ItemID.NOOSE_WAND, new ShopItemInfo(50, 3000, 4, 2))
		.put(ItemID.BIRD_SNARE, new ShopItemInfo(50, 3000, 6, 3))
		.put(ItemID.BOX_TRAP, new ShopItemInfo(25, 6000, 38, 22))
		.put(ItemID.TEASING_STICK, new ShopItemInfo(5, 6000, 60, 35))
		.put(ItemID.UNLIT_TORCH, new ShopItemInfo(20, 6000, 4, 2))
		.put(ItemID.RABBIT_SNARE, new ShopItemInfo(10, 6000, 18, 10))
		.put(ItemID.BIRD_SNARE_PACK, new ShopItemInfo(3, 6000, 606, 353))
		.put(ItemID.BOX_TRAP_PACK, new ShopItemInfo(3, 6000, 3840, 2240))
		.put(ItemID.MAGIC_IMP_BOX_PACK, new ShopItemInfo(3, 6000, 72000, 42000))
		.build()
	),
	ALI_S_DISCOUNT_WARES("Ali's Discount Wares.", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.POT, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.JUG, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.EMPTY_JUG_PACK, new ShopItemInfo(4, 15000, 140, 77))
		.put(ItemID.WATERSKIN3, new ShopItemInfo(10, 180000, 27, 14))
		.put(ItemID.DESERT_SHIRT, new ShopItemInfo(3, 7200, 40, 22))
		.put(ItemID.DESERT_BOOTS, new ShopItemInfo(2, 60000, 20, 11))
		.put(ItemID.BUCKET, new ShopItemInfo(19, 240000, 2, 1))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(10, 6000, 500, 275))
		.put(ItemID.FAKE_BEARD, new ShopItemInfo(11, 6000, 1, 0))
		.put(ItemID.KHARIDIAN_HEADPIECE, new ShopItemInfo(12, 6000, 1, 0))
		.put(ItemID.PAPYRUS, new ShopItemInfo(50, 6000, 10, 5))
		.put(ItemID.KNIFE, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.TINDERBOX, new ShopItemInfo(11, 60000, 1, 0))
		.put(ItemID.BRONZE_PICKAXE, new ShopItemInfo(23, 60000, 1, 0))
		.put(ItemID.RAW_CHICKEN, new ShopItemInfo(15, 60000, 1, 0))
		.build()
	),
	ALICE_S_FARMING_SHOP("Alice's Farming shop.", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAKE, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SEED_DIBBER, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SECATEURS, new ShopItemInfo(500, 6000, 5, 3))
		.put(ItemID.SPADE, new ShopItemInfo(500, 6000, 3, 2))
		.put(ItemID.GARDENING_TROWEL, new ShopItemInfo(500, 72000, 12, 8))
		.put(ItemID.WATERING_CAN, new ShopItemInfo(500, 6000, 8, 5))
		.put(ItemID.FILLED_PLANT_POT, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.PLANT_POT_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.COMPOST, new ShopItemInfo(500, 6000, 20, 14))
		.put(ItemID.COMPOST_PACK, new ShopItemInfo(10, 30000, 2000, 1400))
		.put(ItemID.EMPTY_SACK, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.SACK_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BASKET, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.BASKET_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BUCKET, new ShopItemInfo(100, 6000, 2, 1))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(15, 6000, 500, 350))
		.put(ItemID.POTATO, new ShopItemInfo(0, 60000, 1, 0))
		.put(ItemID.ONION, new ShopItemInfo(0, 60000, 3, 2))
		.put(ItemID.CABBAGE, new ShopItemInfo(0, 60000, 1, 0))
		.put(ItemID.TOMATO, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.SWEETCORN, new ShopItemInfo(0, 60000, 9, 6))
		.put(ItemID.STRAWBERRY, new ShopItemInfo(0, 60000, 17, 11))
		.put(ItemID.WATERMELON, new ShopItemInfo(0, 60000, 48, 33))
		.put(ItemID.HAMMERSTONE_HOPS, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.ASGARNIAN_HOPS, new ShopItemInfo(0, 60000, 5, 3))
		.put(ItemID.YANILLIAN_HOPS, new ShopItemInfo(0, 60000, 7, 4))
		.put(ItemID.KRANDORIAN_HOPS, new ShopItemInfo(0, 60000, 10, 7))
		.put(ItemID.WILDBLOOD_HOPS, new ShopItemInfo(0, 60000, 15, 10))
		.put(ItemID.JUTE_FIBRE, new ShopItemInfo(0, 60000, 6, 4))
		.put(ItemID.BARLEY, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.PLANT_CURE, new ShopItemInfo(100, 6000, 40, 28))
		.build()
	),
	ALLANNA_S_FARMING_SHOP("Allanna's Farming Shop", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAKE, new ShopItemInfo(5, 6000, 6, 3))
		.put(ItemID.SEED_DIBBER, new ShopItemInfo(5, 6000, 6, 3))
		.put(ItemID.SECATEURS, new ShopItemInfo(5, 6000, 5, 3))
		.put(ItemID.SPADE, new ShopItemInfo(5, 6000, 3, 1))
		.put(ItemID.GARDENING_TROWEL, new ShopItemInfo(3, 12000, 12, 7))
		.put(ItemID.WATERING_CAN, new ShopItemInfo(30, 3000, 8, 4))
		.put(ItemID.EMPTY_PLANT_POT, new ShopItemInfo(100, 6000, 1, 0))
		.put(ItemID.FILLED_PLANT_POT, new ShopItemInfo(100, 6000, 1, 0))
		.put(ItemID.PLANT_POT_PACK, new ShopItemInfo(10, 3000, 100, 60))
		.put(ItemID.COMPOST, new ShopItemInfo(100, 6000, 20, 12))
		.put(ItemID.COMPOST_PACK, new ShopItemInfo(10, 30000, 2000, 1200))
		.put(ItemID.BUCKET, new ShopItemInfo(100, 6000, 2, 1))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(15, 6000, 500, 300))
		.put(ItemID.EMPTY_SACK, new ShopItemInfo(100, 1200, 1, 0))
		.put(ItemID.SACK_PACK, new ShopItemInfo(30, 1200, 100, 60))
		.put(ItemID.BASKET, new ShopItemInfo(100, 1200, 1, 0))
		.put(ItemID.BASKET_PACK, new ShopItemInfo(30, 1200, 100, 60))
		.put(ItemID.PLANT_CURE, new ShopItemInfo(40, 3000, 40, 24))
		.build()
	),
	AMELIA_S_SEED_SHOP("Amelia's Seed Shop", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.POTATO_SEED, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.ONION_SEED, new ShopItemInfo(10, 60000, 3, 1))
		.put(ItemID.CABBAGE_SEED, new ShopItemInfo(5, 60000, 3, 1))
		.put(ItemID.TOMATO_SEED, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.SWEETCORN_SEED, new ShopItemInfo(0, 60000, 8, 4))
		.put(ItemID.STRAWBERRY_SEED, new ShopItemInfo(0, 60000, 18, 10))
		.put(ItemID.WATERMELON_SEED, new ShopItemInfo(0, 60000, 56, 33))
		.put(ItemID.BARLEY_SEED, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.JUTE_SEED, new ShopItemInfo(5, 60000, 5, 3))
		.put(ItemID.ROSEMARY_SEED, new ShopItemInfo(20, 60000, 4, 2))
		.put(ItemID.MARIGOLD_SEED, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.HAMMERSTONE_SEED, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.ASGARNIAN_SEED, new ShopItemInfo(10, 60000, 3, 1))
		.put(ItemID.YANILLIAN_SEED, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.KRANDORIAN_SEED, new ShopItemInfo(0, 60000, 8, 4))
		.put(ItemID.WILDBLOOD_SEED, new ShopItemInfo(0, 60000, 14, 8))
		.build()
	),
	AMLODD_S_MAGICAL_SUPPLIES("Amlodd's Magical Supplies", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.AIR_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.BODY_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(250, 6000, 90, 49))
		.put(ItemID.NATURE_RUNE, new ShopItemInfo(250, 18000, 180, 99))
		.put(ItemID.COSMIC_RUNE, new ShopItemInfo(250, 18000, 50, 27))
		.put(ItemID.LAW_RUNE, new ShopItemInfo(250, 18000, 240, 132))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(250, 9000, 180, 99))
		.put(ItemID.BLOOD_RUNE, new ShopItemInfo(250, 18000, 400, 220))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 236))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 236))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 236))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 236))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(40, 6000, 330, 181))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(35, 6000, 9950, 5472))
		.build()
	),
	ANEIRIN_S_ARMOUR("Aneirin's Armour", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.MITHRIL_PLATEBODY, new ShopItemInfo(4, 180000, 5200, 3120))
		.put(ItemID.ADAMANT_PLATEBODY, new ShopItemInfo(3, 240000, 16640, 9984))
		.put(ItemID.RUNE_CHAINBODY, new ShopItemInfo(1, 9000000, 50000, 30000))
		.put(ItemID.MITHRIL_PLATELEGS, new ShopItemInfo(4, 180000, 2600, 1560))
		.put(ItemID.ADAMANT_PLATELEGS, new ShopItemInfo(3, 240000, 6400, 3840))
		.put(ItemID.RUNE_PLATELEGS, new ShopItemInfo(1, 9000000, 64000, 38400))
		.put(ItemID.MITHRIL_PLATESKIRT, new ShopItemInfo(4, 180000, 2600, 1560))
		.put(ItemID.ADAMANT_PLATESKIRT, new ShopItemInfo(3, 240000, 6400, 3840))
		.put(ItemID.RUNE_PLATESKIRT, new ShopItemInfo(1, 9000000, 64000, 38400))
		.put(ItemID.MITHRIL_FULL_HELM, new ShopItemInfo(4, 180000, 1430, 858))
		.put(ItemID.ADAMANT_FULL_HELM, new ShopItemInfo(3, 240000, 3520, 2112))
		.put(ItemID.RUNE_FULL_HELM, new ShopItemInfo(1, 9000000, 35200, 21120))
		.build()
	),
	ARDOUGNE_BAKER_S_STALL("Ardougne Baker's Stall.", new ShopRates(1.0, 0.8, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BREAD, new ShopItemInfo(10, 90000, 12, 9))
		.put(ItemID.CAKE, new ShopItemInfo(3, 600000, 50, 40))
		.put(ItemID.CHOCOLATE_SLICE, new ShopItemInfo(6, 240000, 30, 24))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(9, 150000, 10, 8))
		.build()
	),
	ARDOUGNE_FUR_STALL("Ardougne Fur Stall.", new ShopRates(1.2, 0.95, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEAR_FUR, new ShopItemInfo(3, 60000, 12, 9))
		.put(ItemID.GREY_WOLF_FUR, new ShopItemInfo(3, 60000, 60, 47))
		.put(ItemID.POLAR_KEBBIT_FUR, new ShopItemInfo(0, 60000, 12, 9))
		.put(ItemID.COMMON_KEBBIT_FUR, new ShopItemInfo(0, 60000, 14, 11))
		.put(ItemID.FELDIP_WEASEL_FUR, new ShopItemInfo(0, 60000, 16, 13))
		.put(ItemID.DESERT_DEVIL_FUR, new ShopItemInfo(0, 60000, 20, 16))
		.put(ItemID.TATTY_LARUPIA_FUR, new ShopItemInfo(0, 60000, 72, 57))
		.put(ItemID.LARUPIA_FUR, new ShopItemInfo(0, 60000, 96, 76))
		.put(ItemID.TATTY_GRAAHK_FUR, new ShopItemInfo(0, 60000, 108, 85))
		.put(ItemID.GRAAHK_FUR, new ShopItemInfo(0, 60000, 144, 114))
		.put(ItemID.TATTY_KYATT_FUR, new ShopItemInfo(0, 60000, 144, 114))
		.put(ItemID.KYATT_FUR, new ShopItemInfo(0, 60000, 192, 152))
		.build()
	),
	ARDOUGNE_GEM_STALL("Ardougne Gem Stall.", new ShopRates(1.5, 0.8, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SAPPHIRE, new ShopItemInfo(2, 9000000, 375, 200))
		.put(ItemID.EMERALD, new ShopItemInfo(1, 21000000, 750, 400))
		.put(ItemID.RUBY, new ShopItemInfo(1, 36000000, 1500, 800))
		.put(ItemID.DIAMOND, new ShopItemInfo(0, 2400000, 3000, 1600))
		.build()
	),
	ARDOUGNE_SILVER_STALL("Ardougne Silver Stall.", new ShopRates(1.0, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.UNSTRUNG_SYMBOL, new ShopItemInfo(2, 60000, 200, 140))
		.put(ItemID.SILVER_ORE, new ShopItemInfo(1, 1200000, 75, 52))
		.put(ItemID.SILVER_BAR, new ShopItemInfo(1, 600000, 150, 105))
		.build()
	),
	ARDOUGNE_SPICE_STALL("Ardougne Spice Stall.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SPICE, new ShopItemInfo(1, 60000, 230, 138))
		.put(ItemID.KNIFE, new ShopItemInfo(1, 1200, 6, 3))
		.put(ItemID.GARLIC, new ShopItemInfo(2, 3000, 3, 1))
		.build()
	),
	ARMOUR_SHOP__JATIZSO("Armour Shop (Jatizso)", new ShopRates(1.1, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.MITHRIL_CHAINBODY, new ShopItemInfo(4, 60000, 2145, 1365))
		.put(ItemID.MITHRIL_MED_HELM, new ShopItemInfo(4, 60000, 858, 546))
		.put(ItemID.MITHRIL_FULL_HELM, new ShopItemInfo(4, 60000, 1573, 1001))
		.put(ItemID.MITHRIL_SQ_SHIELD, new ShopItemInfo(4, 60000, 1716, 1092))
		.put(ItemID.MITHRIL_KITESHIELD, new ShopItemInfo(4, 60000, 2431, 1547))
		.put(ItemID.MITHRIL_PLATELEGS, new ShopItemInfo(4, 60000, 2860, 1820))
		.put(ItemID.MITHRIL_PLATESKIRT, new ShopItemInfo(4, 60000, 2860, 1820))
		.put(ItemID.MITHRIL_PLATEBODY, new ShopItemInfo(4, 60000, 5720, 3640))
		.build()
	),
	ARMOUR_STORE("Armour store.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RUNE_MED_HELM, new ShopItemInfo(0, 300000, 19200, 11520))
		.put(ItemID.RUNE_FULL_HELM, new ShopItemInfo(0, 300000, 35200, 21120))
		.put(ItemID.RUNE_PLATEBODY, new ShopItemInfo(0, 300000, 65000, 39000))
		.put(ItemID.RUNE_PLATESKIRT, new ShopItemInfo(0, 300000, 64000, 38400))
		.put(ItemID.RUNE_SQ_SHIELD, new ShopItemInfo(0, 300000, 38400, 23040))
		.put(ItemID.RUNE_KITESHIELD, new ShopItemInfo(0, 300000, 54400, 32640))
		.put(ItemID.RUNE_CHAINBODY, new ShopItemInfo(0, 300000, 50000, 30000))
		.put(ItemID.RUNE_PLATELEGS, new ShopItemInfo(0, 300000, 64000, 38400))
		.put(ItemID.ADAMANT_MED_HELM, new ShopItemInfo(0, 300000, 1920, 1152))
		.put(ItemID.ADAMANT_FULL_HELM, new ShopItemInfo(0, 300000, 3520, 2112))
		.put(ItemID.ADAMANT_PLATEBODY, new ShopItemInfo(0, 300000, 16640, 9984))
		.put(ItemID.ADAMANT_PLATESKIRT, new ShopItemInfo(0, 300000, 6400, 3840))
		.put(ItemID.ADAMANT_SQ_SHIELD, new ShopItemInfo(0, 300000, 3840, 2304))
		.put(ItemID.ADAMANT_KITESHIELD, new ShopItemInfo(0, 300000, 5440, 3264))
		.put(ItemID.ADAMANT_CHAINBODY, new ShopItemInfo(0, 300000, 4800, 2880))
		.put(ItemID.ADAMANT_PLATELEGS, new ShopItemInfo(0, 300000, 6400, 3840))
		.put(ItemID.MITHRIL_MED_HELM, new ShopItemInfo(0, 300000, 780, 468))
		.put(ItemID.MITHRIL_FULL_HELM, new ShopItemInfo(0, 300000, 1430, 858))
		.put(ItemID.MITHRIL_PLATEBODY, new ShopItemInfo(0, 300000, 5200, 3120))
		.put(ItemID.MITHRIL_PLATESKIRT, new ShopItemInfo(0, 300000, 2600, 1560))
		.put(ItemID.MITHRIL_SQ_SHIELD, new ShopItemInfo(0, 300000, 1560, 936))
		.put(ItemID.MITHRIL_KITESHIELD, new ShopItemInfo(0, 300000, 2210, 1326))
		.put(ItemID.MITHRIL_CHAINBODY, new ShopItemInfo(0, 300000, 1950, 1170))
		.put(ItemID.MITHRIL_PLATELEGS, new ShopItemInfo(0, 300000, 2600, 1560))
		.build()
	),
	ARMOURY("Armoury", new ShopRates(1.5, 0.5, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_ARROW, new ShopItemInfo(200, 6000, 1, 0))
		.put(ItemID.BRONZE_BOLTS, new ShopItemInfo(200, 6000, 1, 0))
		.put(ItemID.SHORTBOW, new ShopItemInfo(4, 60000, 75, 25))
		.put(ItemID.LONGBOW, new ShopItemInfo(2, 120000, 120, 40))
		.put(ItemID.CROSSBOW, new ShopItemInfo(2, 240000, 105, 35))
		.put(ItemID.BRONZE_ARROWTIPS, new ShopItemInfo(800, 6000, 1, 0))
		.put(ItemID.IRON_ARROWTIPS, new ShopItemInfo(800, 12000, 3, 1))
		.put(ItemID.STEEL_ARROWTIPS, new ShopItemInfo(800, 24000, 9, 3))
		.put(ItemID.MITHRIL_ARROWTIPS, new ShopItemInfo(800, 48000, 24, 8))
		.put(ItemID.IRON_AXE, new ShopItemInfo(5, 120000, 84, 28))
		.put(ItemID.STEEL_AXE, new ShopItemInfo(3, 240000, 300, 100))
		.put(ItemID.IRON_BATTLEAXE, new ShopItemInfo(5, 60000, 273, 91))
		.put(ItemID.STEEL_BATTLEAXE, new ShopItemInfo(2, 120000, 975, 325))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(1, 1800000, 2535, 845))
		.put(ItemID.BRONZE_2H_SWORD, new ShopItemInfo(4, 120000, 120, 40))
		.put(ItemID.IRON_2H_SWORD, new ShopItemInfo(3, 180000, 420, 140))
		.put(ItemID.STEEL_2H_SWORD, new ShopItemInfo(2, 300000, 1500, 500))
		.put(ItemID.BLACK_2H_SWORD, new ShopItemInfo(1, 420000, 2880, 960))
		.put(ItemID.MITHRIL_2H_SWORD, new ShopItemInfo(1, 600000, 3900, 1300))
		.put(ItemID.ADAMANT_2H_SWORD, new ShopItemInfo(1, 9000000, 9600, 3200))
		.build()
	),
	AUTHENTIC_THROWING_WEAPONS("Authentic Throwing Weapons.", new ShopRates(1.3, 0.5, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_JAVELIN, new ShopItemInfo(900, 12000, 5, 2))
		.put(ItemID.IRON_JAVELIN, new ShopItemInfo(800, 12000, 7, 3))
		.put(ItemID.STEEL_JAVELIN, new ShopItemInfo(700, 24000, 31, 12))
		.put(ItemID.MITHRIL_JAVELIN, new ShopItemInfo(600, 36000, 83, 32))
		.put(ItemID.ADAMANT_JAVELIN, new ShopItemInfo(500, 48000, 208, 80))
		.put(ItemID.RUNE_JAVELIN, new ShopItemInfo(400, 60000, 520, 200))
		.put(ItemID.BRONZE_THROWNAXE, new ShopItemInfo(900, 12000, 3, 1))
		.put(ItemID.IRON_THROWNAXE, new ShopItemInfo(800, 12000, 9, 3))
		.put(ItemID.STEEL_THROWNAXE, new ShopItemInfo(700, 24000, 33, 13))
		.put(ItemID.MITHRIL_THROWNAXE, new ShopItemInfo(600, 36000, 91, 35))
		.put(ItemID.ADAMANT_THROWNAXE, new ShopItemInfo(500, 48000, 228, 88))
		.put(ItemID.RUNE_THROWNAXE, new ShopItemInfo(400, 60000, 572, 220))
		.build()
	),
	AVA_S_ODDS_AND_ENDS("Ava's Odds and Ends", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FEATHER, new ShopItemInfo(1000, 60000, 2, 0))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(100, 6000, 260, 80))
		.put(ItemID.IRON_ARROW, new ShopItemInfo(40, 60000, 3, 1))
		.put(ItemID.STEEL_ARROW, new ShopItemInfo(10, 60000, 15, 4))
		.put(ItemID.IRON_ARROWTIPS, new ShopItemInfo(30, 60000, 2, 0))
		.put(ItemID.STEEL_ARROWTIPS, new ShopItemInfo(20, 60000, 7, 2))
		.build()
	),
	AUBURY_S_RUNE_SHOP("Aubury's Rune Shop.", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.AIR_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.BODY_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(250, 6000, 90, 54))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(250, 9000, 180, 108))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(40, 6000, 330, 198))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(35, 6000, 9950, 5970))
		.build()
	),
	BABA_YAGA_S_MAGIC_SHOP("Baba Yaga's Magic Shop.", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.AIR_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.BODY_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(250, 6000, 90, 49))
		.put(ItemID.NATURE_RUNE, new ShopItemInfo(250, 18000, 180, 99))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(250, 9000, 180, 99))
		.put(ItemID.LAW_RUNE, new ShopItemInfo(250, 18000, 240, 132))
		.put(ItemID.BLOOD_RUNE, new ShopItemInfo(250, 18000, 400, 220))
		.put(ItemID.SOUL_RUNE, new ShopItemInfo(250, 6000, 300, 165))
		.put(ItemID.ASTRAL_RUNE, new ShopItemInfo(250, 6000, 50, 27))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 236))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 236))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 236))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 236))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(40, 6000, 330, 181))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(35, 6000, 9950, 5472))
		.put(ItemID.BATTLESTAFF, new ShopItemInfo(5, 54000, 7000, 3850))
		.put(ItemID.STAFF_OF_FIRE, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_WATER, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_AIR, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_EARTH, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.LUNAR_SIGNET, new ShopItemInfo(5, 600, 2, 1))
		.put(ItemID.MOONCLAN_MANUAL, new ShopItemInfo(100, 60000, 1, 0))
		.build()
	),
	BARKERS__HABERDASHERY("Barkers' Haberdashery", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.GREY_BOOTS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.GREY_ROBE_TOP, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.GREY_ROBE_BOTTOMS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.GREY_HAT, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.GREY_GLOVES, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.RED_BOOTS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.RED_ROBE_TOP, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.RED_ROBE_BOTTOMS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.RED_HAT, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.RED_GLOVES, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.YELLOW_BOOTS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.YELLOW_ROBE_TOP, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.YELLOW_ROBE_BOTTOMS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.YELLOW_HAT, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.YELLOW_GLOVES, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.TEAL_BOOTS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.TEAL_ROBE_TOP, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.TEAL_ROBE_BOTTOMS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.TEAL_HAT, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.TEAL_GLOVES, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.PURPLE_BOOTS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.PURPLE_ROBE_TOP, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.PURPLE_ROBE_BOTTOMS, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.PURPLE_HAT, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.PURPLE_GLOVES, new ShopItemInfo(5, 60000, 650, 200))
		.put(ItemID.RED_CAPE, new ShopItemInfo(5, 300000, 2, 0))
		.put(ItemID.BLACK_CAPE, new ShopItemInfo(5, 300000, 9, 2))
		.put(ItemID.BLUE_CAPE, new ShopItemInfo(5, 300000, 41, 12))
		.put(ItemID.YELLOW_CAPE, new ShopItemInfo(5, 300000, 41, 12))
		.put(ItemID.GREEN_CAPE, new ShopItemInfo(5, 300000, 41, 12))
		.build()
	),
	BATTLE_RUNES("Battle Runes", new ShopRates(1.0, 0.55, 0.002), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(1000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(1000, 6000, 4, 2))
		.put(ItemID.AIR_RUNE, new ShopItemInfo(1000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(1000, 6000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(1000, 6000, 3, 1))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(500, 6000, 90, 49))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(500, 6000, 180, 99))
		.put(ItemID.BLOOD_RUNE, new ShopItemInfo(500, 9000, 400, 220))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(50, 1200, 430, 236))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(50, 1200, 430, 236))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(50, 1200, 430, 236))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(50, 1200, 430, 236))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(35, 3000, 330, 181))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(35, 3000, 9950, 5472))
		.build()
	),
	BETTY_S_MAGIC_EMPORIUM("Betty's Magic Emporium.", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.AIR_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.BODY_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(250, 6000, 90, 54))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(250, 9000, 180, 108))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(40, 6000, 330, 198))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(35, 6000, 9950, 5970))
		.put(ItemID.EYE_OF_NEWT, new ShopItemInfo(300, 6000, 3, 1))
		.put(ItemID.EYE_OF_NEWT_PACK, new ShopItemInfo(60, 30000, 300, 180))
		.put(ItemID.BLUE_WIZARD_HAT, new ShopItemInfo(1, 60000, 2, 1))
		.put(ItemID.WIZARD_HAT, new ShopItemInfo(1, 60000, 2, 1))
		.build()
	),
	THE_BIG_HEIST_LODGE("The Big Heist Lodge", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BANDITS_BREW, new ShopItemInfo(10, 60000, 650, 350))
		.build()
	),
	BLADES_BY_URBI("Blades by Urbi.", new ShopRates(1.5, 0.25, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_DAGGER, new ShopItemInfo(1, Double.MAX_EXPONENT, 15, 2))
		.put(ItemID.IRON_DAGGER, new ShopItemInfo(1, Double.MAX_EXPONENT, 52, 8))
		.put(ItemID.STEEL_DAGGER, new ShopItemInfo(1, Double.MAX_EXPONENT, 187, 31))
		.put(ItemID.BLACK_DAGGER, new ShopItemInfo(0, Double.MAX_EXPONENT, 360, 60))
		.put(ItemID.MITHRIL_DAGGER, new ShopItemInfo(1, Double.MAX_EXPONENT, 487, 81))
		.put(ItemID.ADAMANT_DAGGER, new ShopItemInfo(1, Double.MAX_EXPONENT, 1200, 200))
		.put(ItemID.RUNE_DAGGER, new ShopItemInfo(1, Double.MAX_EXPONENT, 12000, 2000))
		.put(ItemID.DRAGON_DAGGER, new ShopItemInfo(0, Double.MAX_EXPONENT, 45000, 7500))
		.put(ItemID.BRONZE_SCIMITAR, new ShopItemInfo(0, Double.MAX_EXPONENT, 48, 8))
		.put(ItemID.IRON_SCIMITAR, new ShopItemInfo(0, Double.MAX_EXPONENT, 168, 28))
		.put(ItemID.STEEL_SCIMITAR, new ShopItemInfo(0, Double.MAX_EXPONENT, 600, 100))
		.build()
	),
	BLURBERRY_BAR("Blurberry Bar", new ShopRates(1.0, 0.25, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PREMADE_BLURB_SP, new ShopItemInfo(10, 60000, 30, 7))
		.put(ItemID.PREMADE_CHOC_SDY, new ShopItemInfo(10, 60000, 30, 7))
		.put(ItemID.PREMADE_DR_DRAGON, new ShopItemInfo(10, 60000, 30, 7))
		.put(ItemID.PREMADE_FR_BLAST, new ShopItemInfo(10, 60000, 30, 7))
		.put(ItemID.PREMADE_P_PUNCH, new ShopItemInfo(10, 60000, 30, 7))
		.put(ItemID.PREMADE_SGG, new ShopItemInfo(10, 60000, 30, 7))
		.put(ItemID.PREMADE_WIZ_BLZD, new ShopItemInfo(10, 60000, 30, 7))
		.build()
	),
	BOB_S_BRILLIANT_AXES("Bob's Brilliant Axes.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_PICKAXE, new ShopItemInfo(5, 60000, 1, 0))
		.put(ItemID.BRONZE_AXE, new ShopItemInfo(10, 60000, 16, 9))
		.put(ItemID.IRON_AXE, new ShopItemInfo(5, 120000, 56, 33))
		.put(ItemID.STEEL_AXE, new ShopItemInfo(3, 240000, 200, 120))
		.put(ItemID.IRON_BATTLEAXE, new ShopItemInfo(5, 60000, 182, 109))
		.put(ItemID.STEEL_BATTLEAXE, new ShopItemInfo(2, 120000, 650, 390))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(1, 1800000, 1690, 1014))
		.build()
	),
	BRANWEN_S_FARMING_SHOP("Branwen's Farming Shop", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAKE, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SEED_DIBBER, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SECATEURS, new ShopItemInfo(500, 6000, 5, 3))
		.put(ItemID.SPADE, new ShopItemInfo(500, 6000, 3, 2))
		.put(ItemID.GARDENING_TROWEL, new ShopItemInfo(500, 72000, 12, 8))
		.put(ItemID.WATERING_CAN, new ShopItemInfo(500, 6000, 8, 5))
		.put(ItemID.EMPTY_PLANT_POT, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.FILLED_PLANT_POT, new ShopItemInfo(500, 60000, 1, 0))
		.put(ItemID.PLANT_POT_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.COMPOST, new ShopItemInfo(500, 6000, 20, 14))
		.put(ItemID.COMPOST_PACK, new ShopItemInfo(10, 30000, 2000, 1400))
		.put(ItemID.EMPTY_SACK, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.SACK_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BASKET, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.BASKET_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BUCKET, new ShopItemInfo(100, 6000, 2, 1))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(15, 6000, 500, 350))
		.build()
	),
	BRIAN_S_ARCHERY_SUPPLIES("Brian's Archery Supplies.", new ShopRates(1.0, 0.65, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.STEEL_ARROW, new ShopItemInfo(1500, 6000, 12, 7))
		.put(ItemID.MITHRIL_ARROW, new ShopItemInfo(1000, 9000, 32, 20))
		.put(ItemID.ADAMANT_ARROW, new ShopItemInfo(800, 12000, 80, 52))
		.put(ItemID.OAK_SHORTBOW, new ShopItemInfo(4, 60000, 100, 65))
		.put(ItemID.OAK_LONGBOW, new ShopItemInfo(4, 60000, 160, 104))
		.put(ItemID.WILLOW_SHORTBOW, new ShopItemInfo(3, 120000, 200, 130))
		.put(ItemID.WILLOW_LONGBOW, new ShopItemInfo(3, 120000, 320, 208))
		.put(ItemID.MAPLE_SHORTBOW, new ShopItemInfo(2, 120000, 400, 260))
		.put(ItemID.MAPLE_LONGBOW, new ShopItemInfo(2, 120000, 640, 416))
		.build()
	),
	BRIAN_S_BATTLEAXE_BAZAAR("Brian's Battleaxe Bazaar.", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_BATTLEAXE, new ShopItemInfo(4, 120000, 52, 28))
		.put(ItemID.IRON_BATTLEAXE, new ShopItemInfo(3, 180000, 182, 100))
		.put(ItemID.STEEL_BATTLEAXE, new ShopItemInfo(2, 300000, 650, 357))
		.put(ItemID.BLACK_BATTLEAXE, new ShopItemInfo(1, 420000, 1248, 686))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(1, 600000, 1690, 929))
		.put(ItemID.ADAMANT_BATTLEAXE, new ShopItemInfo(1, 9000000, 4160, 2288))
		.build()
	),
	BRIGET_S_ARMOUR("Briget's Armour", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_CHAINBODY, new ShopItemInfo(5, 60000, 60, 36))
		.put(ItemID.IRON_CHAINBODY, new ShopItemInfo(3, 120000, 210, 126))
		.put(ItemID.STEEL_CHAINBODY, new ShopItemInfo(3, 240000, 750, 450))
		.put(ItemID.BRONZE_PLATELEGS, new ShopItemInfo(3, 60000, 80, 48))
		.put(ItemID.IRON_PLATELEGS, new ShopItemInfo(2, 120000, 280, 168))
		.put(ItemID.STEEL_PLATELEGS, new ShopItemInfo(2, 240000, 1000, 600))
		.put(ItemID.BRONZE_PLATESKIRT, new ShopItemInfo(3, 60000, 80, 48))
		.put(ItemID.IRON_PLATESKIRT, new ShopItemInfo(2, 120000, 280, 168))
		.put(ItemID.STEEL_PLATESKIRT, new ShopItemInfo(2, 240000, 1000, 600))
		.put(ItemID.BRONZE_MED_HELM, new ShopItemInfo(5, 60000, 24, 14))
		.put(ItemID.IRON_MED_HELM, new ShopItemInfo(3, 120000, 84, 50))
		.put(ItemID.STEEL_MED_HELM, new ShopItemInfo(3, 240000, 300, 180))
		.build()
	),
	BRIGET_S_WEAPONS("Briget's Weapons", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.IRON_BATTLEAXE, new ShopItemInfo(5, 60000, 182, 109))
		.put(ItemID.STEEL_BATTLEAXE, new ShopItemInfo(2, 120000, 650, 390))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(1, 1800000, 1690, 1014))
		.put(ItemID.BRONZE_SWORD, new ShopItemInfo(5, 60000, 26, 15))
		.put(ItemID.IRON_SWORD, new ShopItemInfo(4, 120000, 91, 54))
		.put(ItemID.STEEL_SWORD, new ShopItemInfo(4, 240000, 325, 195))
		.put(ItemID.BLACK_SWORD, new ShopItemInfo(3, 600000, 624, 374))
		.put(ItemID.MITHRIL_SWORD, new ShopItemInfo(3, 1800000, 845, 507))
		.put(ItemID.ADAMANT_SWORD, new ShopItemInfo(2, 7200000, 2080, 1248))
		.put(ItemID.BRONZE_LONGSWORD, new ShopItemInfo(4, 60000, 40, 24))
		.put(ItemID.IRON_LONGSWORD, new ShopItemInfo(3, 120000, 140, 84))
		.put(ItemID.STEEL_LONGSWORD, new ShopItemInfo(3, 240000, 500, 300))
		.put(ItemID.BLACK_LONGSWORD, new ShopItemInfo(2, 600000, 960, 576))
		.put(ItemID.MITHRIL_LONGSWORD, new ShopItemInfo(2, 1800000, 1300, 780))
		.put(ItemID.ADAMANT_LONGSWORD, new ShopItemInfo(1, 7200000, 3200, 1920))
		.put(ItemID.BRONZE_DAGGER, new ShopItemInfo(10, 60000, 10, 6))
		.put(ItemID.IRON_DAGGER, new ShopItemInfo(6, 120000, 35, 21))
		.put(ItemID.STEEL_DAGGER, new ShopItemInfo(5, 240000, 125, 75))
		.put(ItemID.BLACK_DAGGER, new ShopItemInfo(4, 600000, 240, 144))
		.put(ItemID.MITHRIL_DAGGER, new ShopItemInfo(3, 1800000, 325, 195))
		.put(ItemID.ADAMANT_DAGGER, new ShopItemInfo(2, 7200000, 800, 480))
		.put(ItemID.BRONZE_MACE, new ShopItemInfo(5, 60000, 18, 10))
		.put(ItemID.IRON_MACE, new ShopItemInfo(4, 120000, 63, 37))
		.put(ItemID.STEEL_MACE, new ShopItemInfo(4, 240000, 225, 135))
		.put(ItemID.MITHRIL_MACE, new ShopItemInfo(3, 1800000, 585, 351))
		.put(ItemID.ADAMANT_MACE, new ShopItemInfo(2, 7200000, 1440, 864))
		.put(ItemID.BRONZE_2H_SWORD, new ShopItemInfo(4, 120000, 80, 48))
		.put(ItemID.IRON_2H_SWORD, new ShopItemInfo(3, 180000, 280, 168))
		.put(ItemID.STEEL_2H_SWORD, new ShopItemInfo(2, 300000, 1000, 600))
		.put(ItemID.BLACK_2H_SWORD, new ShopItemInfo(1, 420000, 1920, 1152))
		.put(ItemID.MITHRIL_2H_SWORD, new ShopItemInfo(1, 600000, 2600, 1560))
		.put(ItemID.ADAMANT_2H_SWORD, new ShopItemInfo(1, 9000000, 6400, 3840))
		.put(ItemID.BRONZE_SCIMITAR, new ShopItemInfo(5, 60000, 32, 19))
		.put(ItemID.IRON_SCIMITAR, new ShopItemInfo(4, 120000, 112, 67))
		.put(ItemID.STEEL_SCIMITAR, new ShopItemInfo(4, 240000, 400, 240))
		.put(ItemID.BLACK_SCIMITAR, new ShopItemInfo(3, 600000, 768, 460))
		.put(ItemID.MITHRIL_SCIMITAR, new ShopItemInfo(3, 1800000, 1040, 624))
		.build()
	),
	CANDLE_SHOP("Candle Shop", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CANDLE, new ShopItemInfo(10, 60000, 3, 1))
		.build()
	),
	CAREFREE_CRAFTING_STALL("Carefree Crafting Stall", new ShopRates(1.5, 0.8, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CHISEL, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.RING_MOULD, new ShopItemInfo(4, 60000, 7, 4))
		.put(ItemID.NECKLACE_MOULD, new ShopItemInfo(2, 60000, 7, 4))
		.put(ItemID.NEEDLE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.THREAD, new ShopItemInfo(100, 3000, 1, 0))
		.put(ItemID.BALL_OF_WOOL, new ShopItemInfo(100, 3000, 3, 1))
		.build()
	),
	CASSIE_S_SHIELD_SHOP("Cassie's Shield Shop.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.WOODEN_SHIELD, new ShopItemInfo(5, 60000, 20, 12))
		.put(ItemID.BRONZE_SQ_SHIELD, new ShopItemInfo(3, 60000, 48, 28))
		.put(ItemID.BRONZE_KITESHIELD, new ShopItemInfo(3, 180000, 68, 40))
		.put(ItemID.IRON_SQ_SHIELD, new ShopItemInfo(2, 240000, 168, 100))
		.put(ItemID.IRON_KITESHIELD, new ShopItemInfo(0, 900000, 238, 142))
		.put(ItemID.STEEL_SQ_SHIELD, new ShopItemInfo(0, 900000, 600, 360))
		.put(ItemID.STEEL_KITESHIELD, new ShopItemInfo(0, 900000, 850, 510))
		.put(ItemID.MITHRIL_SQ_SHIELD, new ShopItemInfo(0, 900000, 1560, 936))
		.build()
	),
	CONSTRUCTION_SUPPLIES("Construction supplies", new ShopRates(1.3, 0.5, 0.0), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SAW, new ShopItemInfo(1000, 6000, 13, 5))
		.put(ItemID.BOLT_OF_CLOTH, new ShopItemInfo(1000, 60000, 650, 250))
		.put(ItemID.BRONZE_NAILS, new ShopItemInfo(1000, 60000, 2, 1))
		.put(ItemID.IRON_NAILS, new ShopItemInfo(1000, 60000, 5, 2))
		.put(ItemID.STEEL_NAILS, new ShopItemInfo(1000, 60000, 3, 1))
		.build()
	),
	CONTRABAND_YAK_PRODUCE("Contraband yak produce.", new ShopRates(1.1, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.YAKHIDE, new ShopItemInfo(25, 60000, 55, 35))
		.put(ItemID.RAW_YAK_MEAT, new ShopItemInfo(50, 60000, 2, 1))
		.put(ItemID.HAIR, new ShopItemInfo(50, 60000, 2, 1))
		.put(ItemID.CURED_YAKHIDE, new ShopItemInfo(10, 60000, 110, 70))
		.build()
	),
	CROSSBOW_SHOP_DWARVEN_MINE("Crossbow Shop (Dwarven Mine)", new ShopRates(3.6, 0.5, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.WOODEN_STOCK, new ShopItemInfo(5, 60000, 72, 10))
		.put(ItemID.OAK_STOCK, new ShopItemInfo(5, 60000, 97, 13))
		.put(ItemID.WILLOW_STOCK, new ShopItemInfo(5, 60000, 190, 26))
		.put(ItemID.TEAK_STOCK, new ShopItemInfo(5, 60000, 277, 38))
		.put(ItemID.MAPLE_STOCK, new ShopItemInfo(5, 60000, 360, 50))
		.put(ItemID.MAHOGANY_STOCK, new ShopItemInfo(0, 60000, 478, 66))
		.put(ItemID.YEW_STOCK, new ShopItemInfo(0, 60000, 601, 83))
		.put(ItemID.BRONZE_LIMBS, new ShopItemInfo(5, 60000, 72, 10))
		.put(ItemID.IRON_LIMBS, new ShopItemInfo(5, 60000, 252, 35))
		.put(ItemID.STEEL_LIMBS, new ShopItemInfo(5, 60000, 900, 125))
		.put(ItemID.MITHRIL_LIMBS, new ShopItemInfo(5, 60000, 2340, 325))
		.put(ItemID.ADAMANTITE_LIMBS, new ShopItemInfo(0, 60000, 5760, 800))
		.put(ItemID.RUNITE_LIMBS, new ShopItemInfo(0, 60000, 57600, 8000))
		.put(ItemID.BRONZE_CROSSBOW, new ShopItemInfo(0, 60000, 262, 36))
		.put(ItemID.IRON_CROSSBOW, new ShopItemInfo(0, 60000, 565, 78))
		.put(ItemID.STEEL_CROSSBOW, new ShopItemInfo(0, 60000, 1296, 180))
		.put(ItemID.MITHRIL_CROSSBOW, new ShopItemInfo(0, 60000, 2818, 391))
		.put(ItemID.ADAMANT_CROSSBOW, new ShopItemInfo(0, 60000, 6361, 883))
		.put(ItemID.RUNE_CROSSBOW, new ShopItemInfo(0, 60000, 58320, 8100))
		.build()
	),
	CROSSBOW_SHOP_KELDAGRIM("Crossbow Shop (Keldagrim)", new ShopRates(3.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.WOODEN_STOCK, new ShopItemInfo(5, 60000, 60, 12))
		.put(ItemID.OAK_STOCK, new ShopItemInfo(5, 60000, 81, 16))
		.put(ItemID.WILLOW_STOCK, new ShopItemInfo(5, 60000, 159, 31))
		.put(ItemID.TEAK_STOCK, new ShopItemInfo(5, 60000, 231, 46))
		.put(ItemID.MAPLE_STOCK, new ShopItemInfo(5, 60000, 300, 60))
		.put(ItemID.MAHOGANY_STOCK, new ShopItemInfo(5, 60000, 399, 79))
		.put(ItemID.YEW_STOCK, new ShopItemInfo(0, 60000, 501, 100))
		.put(ItemID.BRONZE_LIMBS, new ShopItemInfo(5, 60000, 60, 12))
		.put(ItemID.IRON_LIMBS, new ShopItemInfo(5, 60000, 210, 42))
		.put(ItemID.STEEL_LIMBS, new ShopItemInfo(5, 60000, 750, 150))
		.put(ItemID.MITHRIL_LIMBS, new ShopItemInfo(5, 60000, 1950, 390))
		.put(ItemID.ADAMANTITE_LIMBS, new ShopItemInfo(5, 60000, 4800, 960))
		.put(ItemID.RUNITE_LIMBS, new ShopItemInfo(0, 60000, 48000, 9600))
		.put(ItemID.BRONZE_CROSSBOW, new ShopItemInfo(0, 60000, 219, 43))
		.put(ItemID.IRON_CROSSBOW, new ShopItemInfo(0, 60000, 471, 94))
		.put(ItemID.STEEL_CROSSBOW, new ShopItemInfo(0, 60000, 1080, 216))
		.put(ItemID.MITHRIL_CROSSBOW, new ShopItemInfo(0, 60000, 2349, 469))
		.put(ItemID.ADAMANT_CROSSBOW, new ShopItemInfo(0, 60000, 5301, 1060))
		.put(ItemID.RUNE_CROSSBOW, new ShopItemInfo(0, 60000, 48600, 9720))
		.build()
	),
	CROSSBOW_SHOP_WHITE_WOLF_MOUNTAIN("Crossbow Shop (White Wolf Mountain)", new ShopRates(3.6, 0.5, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.WOODEN_STOCK, new ShopItemInfo(5, 60000, 72, 10))
		.put(ItemID.OAK_STOCK, new ShopItemInfo(5, 60000, 97, 13))
		.put(ItemID.WILLOW_STOCK, new ShopItemInfo(5, 60000, 190, 26))
		.put(ItemID.TEAK_STOCK, new ShopItemInfo(5, 60000, 277, 38))
		.put(ItemID.MAPLE_STOCK, new ShopItemInfo(5, 60000, 360, 50))
		.put(ItemID.MAHOGANY_STOCK, new ShopItemInfo(0, 60000, 478, 66))
		.put(ItemID.YEW_STOCK, new ShopItemInfo(0, 60000, 601, 83))
		.put(ItemID.BRONZE_LIMBS, new ShopItemInfo(5, 60000, 72, 10))
		.put(ItemID.IRON_LIMBS, new ShopItemInfo(5, 60000, 252, 35))
		.put(ItemID.STEEL_LIMBS, new ShopItemInfo(5, 60000, 900, 125))
		.put(ItemID.MITHRIL_LIMBS, new ShopItemInfo(5, 60000, 2340, 325))
		.put(ItemID.ADAMANTITE_LIMBS, new ShopItemInfo(0, 60000, 5760, 800))
		.put(ItemID.RUNITE_LIMBS, new ShopItemInfo(0, 60000, 57600, 8000))
		.put(ItemID.BRONZE_CROSSBOW, new ShopItemInfo(0, 60000, 262, 36))
		.put(ItemID.IRON_CROSSBOW, new ShopItemInfo(0, 60000, 565, 78))
		.put(ItemID.STEEL_CROSSBOW, new ShopItemInfo(0, 60000, 1296, 180))
		.put(ItemID.MITHRIL_CROSSBOW, new ShopItemInfo(0, 60000, 2818, 391))
		.put(ItemID.ADAMANT_CROSSBOW, new ShopItemInfo(0, 60000, 6361, 883))
		.put(ItemID.RUNE_CROSSBOW, new ShopItemInfo(0, 60000, 58320, 8100))
		.build()
	),
	CULINAROMANCER_S_CHEST("Culinaromancer's Chest", new ShopRates(1.3, 0.4, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(50, 60000, 13, 4))
		.put(ItemID.CHEESE, new ShopItemInfo(50, 60000, 5, 1))
		.put(ItemID.TOMATO, new ShopItemInfo(50, 60000, 5, 1))
		.put(ItemID.COOKING_APPLE, new ShopItemInfo(50, 60000, 1, 0))
		.put(ItemID.GRAPES, new ShopItemInfo(10, 360000, 1, 0))
		.put(ItemID.POT_OF_FLOUR, new ShopItemInfo(10, 300000, 13, 4))
		.put(ItemID.PIZZA_BASE, new ShopItemInfo(1, 300000, 5, 1))
		.put(ItemID.EGG, new ShopItemInfo(50, 60000, 5, 1))
		.put(ItemID.BUCKET_OF_MILK, new ShopItemInfo(50, 60000, 7, 2))
		.put(ItemID.POT_OF_CREAM, new ShopItemInfo(50, 60000, 2, 0))
		.put(ItemID.PAT_OF_BUTTER, new ShopItemInfo(10, 60000, 5, 1))
		.put(ItemID.SPICE, new ShopItemInfo(50, 300000, 299, 92))
		.put(ItemID.PIE_DISH, new ShopItemInfo(50, 60000, 3, 1))
		.put(ItemID.CAKE_TIN, new ShopItemInfo(50, 60000, 13, 4))
		.put(ItemID.BOWL, new ShopItemInfo(50, 60000, 5, 1))
		.put(ItemID.JUG, new ShopItemInfo(50, 60000, 1, 0))
		.put(ItemID.EMPTY_JUG_PACK, new ShopItemInfo(8, 15000, 182, 56))
		.put(ItemID.POT, new ShopItemInfo(50, 60000, 1, 0))
		.put(ItemID.EMPTY_CUP, new ShopItemInfo(50, 60000, 2, 0))
		.put(ItemID.BUCKET, new ShopItemInfo(50, 60000, 2, 0))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(50, 60000, 650, 200))
		.build()
	),
	DAGA_S_SCIMITAR_SMITHY("Daga's Scimitar Smithy", new ShopRates(1.0, 0.5, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_SCIMITAR, new ShopItemInfo(10, 60000, 32, 16))
		.put(ItemID.IRON_SCIMITAR, new ShopItemInfo(10, 120000, 112, 56))
		.put(ItemID.STEEL_SCIMITAR, new ShopItemInfo(8, 360000, 400, 200))
		.put(ItemID.MITHRIL_SCIMITAR, new ShopItemInfo(6, 240000, 1040, 520))
		.put(ItemID.DRAGON_SCIMITAR, new ShopItemInfo(4, 180000, 100000, 50000))
		.build()
	),
	DARGAUD_S_BOW_AND_ARROWS("Dargaud's Bow and Arrows.", new ShopRates(1.0, 0.5, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.ARROW_SHAFT, new ShopItemInfo(1000, 30000, 1, 0))
		.put(ItemID.BRONZE_ARROWTIPS, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.IRON_ARROWTIPS, new ShopItemInfo(400, 12000, 2, 1))
		.put(ItemID.STEEL_ARROWTIPS, new ShopItemInfo(300, 18000, 6, 3))
		.put(ItemID.MITHRIL_ARROWTIPS, new ShopItemInfo(200, 24000, 16, 8))
		.put(ItemID.ADAMANT_ARROWTIPS, new ShopItemInfo(200, 30000, 40, 20))
		.put(ItemID.RUNE_ARROWTIPS, new ShopItemInfo(150, 36000, 200, 100))
		.put(ItemID.BRONZE_ARROW, new ShopItemInfo(1000, 6000, 1, 0))
		.put(ItemID.IRON_ARROW, new ShopItemInfo(500, 12000, 3, 1))
		.put(ItemID.STEEL_ARROW, new ShopItemInfo(500, 24000, 12, 6))
		.put(ItemID.MITHRIL_ARROW, new ShopItemInfo(500, 36000, 32, 16))
		.put(ItemID.ADAMANT_ARROW, new ShopItemInfo(450, 72000, 80, 40))
		.put(ItemID.RUNE_ARROW, new ShopItemInfo(400, 78000, 400, 200))
		.put(ItemID.BRONZE_BRUTAL, new ShopItemInfo(0, 600000, 5, 2))
		.put(ItemID.IRON_BRUTAL, new ShopItemInfo(0, 600000, 10, 5))
		.put(ItemID.STEEL_BRUTAL, new ShopItemInfo(0, 600000, 20, 10))
		.put(ItemID.BLACK_BRUTAL, new ShopItemInfo(0, 900000, 35, 17))
		.put(ItemID.MITHRIL_BRUTAL, new ShopItemInfo(0, 1200000, 50, 25))
		.put(ItemID.ADAMANT_BRUTAL, new ShopItemInfo(0, 1800000, 95, 47))
		.put(ItemID.RUNE_BRUTAL, new ShopItemInfo(0, 2400000, 450, 225))
		.put(ItemID.SHORTBOW, new ShopItemInfo(20, 30000, 50, 25))
		.put(ItemID.OAK_SHORTBOW, new ShopItemInfo(20, 36000, 100, 50))
		.put(ItemID.WILLOW_SHORTBOW, new ShopItemInfo(20, 42000, 200, 100))
		.put(ItemID.LONGBOW, new ShopItemInfo(20, 30000, 80, 40))
		.put(ItemID.OAK_LONGBOW, new ShopItemInfo(20, 36000, 160, 80))
		.put(ItemID.COMP_OGRE_BOW, new ShopItemInfo(0, 1200000, 180, 90))
		.put(ItemID.WILLOW_LONGBOW, new ShopItemInfo(20, 42000, 320, 160))
		.build()
	),
	DARKMEYER_LANTERN_SHOP("Darkmeyer Lantern Shop", new ShopRates(1.2, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TINDERBOX, new ShopItemInfo(5, 30000, 1, 0))
		.put(ItemID.CANDLE, new ShopItemInfo(20, 48000, 3, 1))
		.put(ItemID.UNLIT_TORCH, new ShopItemInfo(10, 60000, 4, 1))
		.put(ItemID.EMPTY_OIL_LAMP, new ShopItemInfo(5, 60000, 30, 10))
		.put(ItemID.EMPTY_OIL_LANTERN, new ShopItemInfo(5, 60000, 144, 48))
		.put(ItemID.BULLSEYE_LANTERN_EMPTY, new ShopItemInfo(5, 60000, 480, 160))
		.build()
	),
	DARKMEYER_MEAT_SHOP("Darkmeyer Meat Shop", new ShopRates(1.0, 0.6, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAW_BEEF, new ShopItemInfo(15, 60000, 1, 0))
		.put(ItemID.RAW_CHICKEN, new ShopItemInfo(15, 60000, 1, 0))
		.put(ItemID.RAW_RAT_MEAT, new ShopItemInfo(20, 60000, 1, 0))
		.put(ItemID.RAW_MYSTERY_MEAT, new ShopItemInfo(25, 48000, 1, 0))
		.put(ItemID.RAW_BEAR_MEAT, new ShopItemInfo(10, 72000, 1, 0))
		.build()
	),
	DARREN_S_WILDERNESS_CAPE_SHOP("Darren's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM4_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM14_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM24_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM34_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM44_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	DAVON_S_AMULET_STORE("Davon's Amulet Store.", new ShopRates(1.2, 0.9, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.HOLY_SYMBOL, new ShopItemInfo(0, 120000, 360, 270))
		.put(ItemID.AMULET_OF_MAGIC, new ShopItemInfo(0, 120000, 1080, 810))
		.put(ItemID.AMULET_OF_DEFENCE, new ShopItemInfo(0, 120000, 1530, 1147))
		.put(ItemID.AMULET_OF_STRENGTH, new ShopItemInfo(0, 120000, 2430, 1822))
		.put(ItemID.AMULET_OF_POWER, new ShopItemInfo(0, 120000, 4230, 3172))
		.build()
	),
	DODGY_MIKE_S_SECOND_HAND_CLOTHING("Dodgy Mike's Second Hand Clothing.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PIRATE_BOOTS, new ShopItemInfo(15, 60000, 350, 210))
		.put(ItemID.STRIPY_PIRATE_SHIRT, new ShopItemInfo(10, 60000, 300, 180))
		.put(ItemID.PIRATE_BANDANA, new ShopItemInfo(20, 60000, 100, 60))
		.put(ItemID.PIRATE_LEGGINGS, new ShopItemInfo(10, 60000, 350, 210))
		.put(ItemID.STRIPY_PIRATE_SHIRT_7122, new ShopItemInfo(10, 60000, 300, 180))
		.put(ItemID.PIRATE_BANDANA_7124, new ShopItemInfo(20, 60000, 100, 60))
		.put(ItemID.PIRATE_LEGGINGS_7126, new ShopItemInfo(10, 60000, 350, 210))
		.put(ItemID.STRIPY_PIRATE_SHIRT_7128, new ShopItemInfo(10, 60000, 300, 180))
		.put(ItemID.PIRATE_BANDANA_7130, new ShopItemInfo(20, 60000, 100, 60))
		.put(ItemID.PIRATE_LEGGINGS_7132, new ShopItemInfo(10, 60000, 350, 210))
		.put(ItemID.STRIPY_PIRATE_SHIRT_7134, new ShopItemInfo(10, 60000, 300, 180))
		.put(ItemID.PIRATE_BANDANA_7136, new ShopItemInfo(20, 60000, 100, 60))
		.put(ItemID.PIRATE_LEGGINGS_7138, new ShopItemInfo(10, 60000, 350, 210))
		.build()
	),
	DOMMIK_S_CRAFTING_STORE("Dommik's Crafting Store.", new ShopRates(1.0, 0.65, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CHISEL, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.RING_MOULD, new ShopItemInfo(4, 60000, 5, 3))
		.put(ItemID.NECKLACE_MOULD, new ShopItemInfo(2, 60000, 5, 3))
		.put(ItemID.AMULET_MOULD, new ShopItemInfo(2, 60000, 5, 3))
		.put(ItemID.NEEDLE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.THREAD, new ShopItemInfo(100, 3000, 1, 0))
		.put(ItemID.HOLY_MOULD, new ShopItemInfo(3, 60000, 5, 3))
		.put(ItemID.SICKLE_MOULD, new ShopItemInfo(6, 9000, 10, 6))
		.put(ItemID.TIARA_MOULD, new ShopItemInfo(10, 6000, 100, 65))
		.put(ItemID.BOLT_MOULD, new ShopItemInfo(10, 6000, 25, 16))
		.put(ItemID.BRACELET_MOULD, new ShopItemInfo(5, 60000, 5, 3))
		.build()
	),
	DRAYNOR_SEED_MARKET("Draynor Seed Market", new ShopRates(1.2, 0.6, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.POTATO_SEED, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.ONION_SEED, new ShopItemInfo(10, 60000, 3, 1))
		.put(ItemID.CABBAGE_SEED, new ShopItemInfo(5, 60000, 3, 1))
		.put(ItemID.TOMATO_SEED, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.SWEETCORN_SEED, new ShopItemInfo(0, 60000, 9, 4))
		.put(ItemID.STRAWBERRY_SEED, new ShopItemInfo(0, 60000, 21, 10))
		.put(ItemID.WATERMELON_SEED, new ShopItemInfo(0, 60000, 67, 33))
		.put(ItemID.BARLEY_SEED, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.JUTE_SEED, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.ROSEMARY_SEED, new ShopItemInfo(20, 60000, 4, 2))
		.put(ItemID.MARIGOLD_SEED, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.HAMMERSTONE_SEED, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.ASGARNIAN_SEED, new ShopItemInfo(10, 60000, 3, 1))
		.put(ItemID.YANILLIAN_SEED, new ShopItemInfo(5, 60000, 7, 3))
		.put(ItemID.KRANDORIAN_SEED, new ShopItemInfo(0, 60000, 9, 4))
		.put(ItemID.WILDBLOOD_SEED, new ShopItemInfo(0, 60000, 16, 8))
		.build()
	),
	DROGO_S_MINING_EMPORIUM("Drogo's Mining Emporium.", new ShopRates(1.0, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.HAMMER, new ShopItemInfo(4, 60000, 1, 0))
		.put(ItemID.BRONZE_PICKAXE, new ShopItemInfo(4, 60000, 1, 0))
		.put(ItemID.COPPER_ORE, new ShopItemInfo(0, 9000000, 3, 2))
		.put(ItemID.TIN_ORE, new ShopItemInfo(0, 9000000, 3, 2))
		.put(ItemID.IRON_ORE, new ShopItemInfo(0, 3000000, 17, 11))
		.put(ItemID.COAL, new ShopItemInfo(0, 3000000, 45, 31))
		.put(ItemID.BRONZE_BAR, new ShopItemInfo(0, 2400000, 8, 5))
		.put(ItemID.IRON_BAR, new ShopItemInfo(0, 2400000, 28, 19))
		.put(ItemID.GOLD_BAR, new ShopItemInfo(0, 1800000, 300, 210))
		.build()
	),
	DWARVEN_SHOPPING_STORE("Dwarven shopping store", new ShopRates(1.3, 0.3, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.POT, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.JUG, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.EMPTY_JUG_PACK, new ShopItemInfo(5, 12000, 182, 42))
		.put(ItemID.SHEARS, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.BUCKET, new ShopItemInfo(3, 6000, 2, 0))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(15, 6000, 650, 150))
		.put(ItemID.TINDERBOX, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.CHISEL, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.HAMMER, new ShopItemInfo(5, 60000, 1, 0))
		.build()
	),
	EDMOND_S_WILDERNESS_CAPE_SHOP("Edmond's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM8_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM18_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM28_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM38_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM48_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	EDWARD_S_WILDERNESS_CAPE_SHOP("Edward's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM5_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM15_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM25_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM35_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM45_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	ELGAN_S_EXCEPTIONAL_STAFFS("Elgan's Exceptional Staffs!", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BATTLESTAFF, new ShopItemInfo(5, 60000, 7000, 3850))
		.put(ItemID.STAFF, new ShopItemInfo(5, 60000, 15, 8))
		.put(ItemID.MAGIC_STAFF, new ShopItemInfo(5, 120000, 200, 110))
		.put(ItemID.STAFF_OF_AIR, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_WATER, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_EARTH, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_FIRE, new ShopItemInfo(2, 600000, 1500, 825))
		.build()
	),
	THE_ESOTERICAN_ARMS("The Esoterican Arms", new ShopRates(1.0, 0.55, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEER, new ShopItemInfo(10, 6000, 2, 1))
		.put(ItemID.CIDER, new ShopItemInfo(10, 6000, 2, 1))
		.put(ItemID.JUG_OF_WINE, new ShopItemInfo(5, 3000, 1, 0))
		.put(ItemID.CUP_OF_TEA, new ShopItemInfo(5, 3000, 10, 5))
		.build()
	),
	ETCETERIA_FISH("Etceteria Fish", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SMALL_FISHING_NET, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.FLY_FISHING_ROD, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.HARPOON, new ShopItemInfo(2, 240000, 6, 3))
		.put(ItemID.LOBSTER_POT, new ShopItemInfo(2, 240000, 26, 14))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(1500, 600, 3, 2))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(80, 6000, 390, 210))
		.put(ItemID.FEATHER, new ShopItemInfo(1000, 600, 2, 1))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(100, 1200, 260, 140))
		.put(ItemID.BIG_FISHING_NET, new ShopItemInfo(5, 60000, 26, 14))
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(0, 180000, 6, 3))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(200, 600, 13, 7))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(0, 540000, 13, 7))
		.put(ItemID.RAW_MACKEREL, new ShopItemInfo(0, 600000, 19, 10))
		.put(ItemID.RAW_COD, new ShopItemInfo(0, 660000, 13, 7))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(0, 720000, 19, 10))
		.put(ItemID.RAW_TROUT, new ShopItemInfo(0, 900000, 13, 7))
		.put(ItemID.RAW_PIKE, new ShopItemInfo(0, 1080000, 26, 14))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(0, 1260000, 39, 21))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(0, 1380000, 52, 28))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(0, 1560000, 91, 49))
		.put(ItemID.RAW_BASS, new ShopItemInfo(0, 1620000, 52, 28))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(0, 1740000, 104, 56))
		.put(ItemID.RAW_SHARK, new ShopItemInfo(0, 2100000, 221, 119))
		.build()
	),
	FAIRY_FIXIT_S_FAIRY_ENCHANTMENT("Fairy Fixit's Fairy Enchantment", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FAIRY_ENCHANTMENT, new ShopItemInfo(4, 600, 100, 60))
		.build()
	),
	FANCY_CLOTHES_STORE("Fancy Clothes Store", new ShopRates(1.3, 0.4, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CHEFS_HAT, new ShopItemInfo(0, 60000, 2, 0))
		.put(ItemID.BLUE_WIZARD_HAT, new ShopItemInfo(3, 60000, 2, 0))
		.put(ItemID.YELLOW_CAPE, new ShopItemInfo(1, 60000, 41, 12))
		.put(ItemID.GREY_WOLF_FUR, new ShopItemInfo(3, 60000, 65, 20))
		.put(ItemID.BEAR_FUR, new ShopItemInfo(3, 60000, 13, 4))
		.put(ItemID.NEEDLE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.THREAD, new ShopItemInfo(100, 3000, 1, 0))
		.put(ItemID.LEATHER_GLOVES, new ShopItemInfo(10, 60000, 7, 2))
		.put(ItemID.LEATHER_BOOTS, new ShopItemInfo(10, 60000, 7, 2))
		.put(ItemID.PRIEST_GOWN_428, new ShopItemInfo(3, 60000, 6, 2))
		.put(ItemID.PRIEST_GOWN, new ShopItemInfo(3, 60000, 6, 2))
		.put(ItemID.BROWN_APRON, new ShopItemInfo(1, 60000, 2, 0))
		.put(ItemID.PINK_SKIRT, new ShopItemInfo(5, 60000, 2, 0))
		.put(ItemID.BLACK_SKIRT, new ShopItemInfo(3, 60000, 2, 0))
		.put(ItemID.BLUE_SKIRT, new ShopItemInfo(2, 60000, 2, 0))
		.put(ItemID.RED_CAPE, new ShopItemInfo(4, 60000, 2, 0))
		.put(ItemID.RIGHT_EYE_PATCH, new ShopItemInfo(3, 1200000, 2, 0))
		.put(ItemID.RED_FEATHER, new ShopItemInfo(0, 12000, 13, 4))
		.put(ItemID.YELLOW_FEATHER, new ShopItemInfo(0, 12000, 16, 5))
		.put(ItemID.ORANGE_FEATHER, new ShopItemInfo(0, 12000, 19, 6))
		.put(ItemID.BLUE_FEATHER, new ShopItemInfo(0, 12000, 20, 6))
		.put(ItemID.STRIPY_FEATHER, new ShopItemInfo(0, 12000, 26, 8))
		.build()
	),
	FERNAHEI_S_FISHING_HUT("Fernahei's Fishing Hut.", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 5, 3))
		.put(ItemID.FLY_FISHING_ROD, new ShopItemInfo(5, 60000, 5, 3))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(200, 600, 3, 2))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(30, 3000, 300, 210))
		.put(ItemID.FEATHER, new ShopItemInfo(800, 600, 2, 1))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(50, 1200, 200, 140))
		.put(ItemID.RAW_TROUT, new ShopItemInfo(0, 900000, 10, 7))
		.put(ItemID.RAW_PIKE, new ShopItemInfo(0, 1080000, 20, 14))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(0, 1260000, 30, 21))
		.build()
	),
	FILAMINA_S_WARES("Filamina's Wares", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.STAFF, new ShopItemInfo(5, 60000, 15, 9))
		.put(ItemID.MAGIC_STAFF, new ShopItemInfo(5, 120000, 200, 120))
		.put(ItemID.STAFF_OF_AIR, new ShopItemInfo(2, 600000, 1500, 900))
		.put(ItemID.STAFF_OF_WATER, new ShopItemInfo(2, 600000, 1500, 900))
		.put(ItemID.STAFF_OF_EARTH, new ShopItemInfo(2, 600000, 1500, 900))
		.put(ItemID.STAFF_OF_FIRE, new ShopItemInfo(2, 600000, 1500, 900))
		.build()
	),
	FINE_FASHIONS("Fine Fashions", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PINK_HAT, new ShopItemInfo(5, 120000, 160, 88))
		.put(ItemID.GREEN_HAT, new ShopItemInfo(5, 120000, 160, 88))
		.put(ItemID.BLUE_HAT, new ShopItemInfo(5, 120000, 160, 88))
		.put(ItemID.CREAM_HAT, new ShopItemInfo(5, 120000, 160, 88))
		.put(ItemID.TURQUOISE_HAT, new ShopItemInfo(5, 120000, 160, 88))
		.put(ItemID.PINK_ROBE_TOP, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.GREEN_ROBE_TOP, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.BLUE_ROBE_TOP, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.CREAM_ROBE_TOP, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.TURQUOISE_ROBE_TOP, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.PINK_ROBE_BOTTOMS, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.GREEN_ROBE_BOTTOMS, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.BLUE_ROBE_BOTTOMS, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.CREAM_ROBE_BOTTOMS, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.TURQUOISE_ROBE_BOTTOMS, new ShopItemInfo(5, 120000, 180, 99))
		.put(ItemID.PINK_BOOTS, new ShopItemInfo(5, 120000, 200, 110))
		.put(ItemID.GREEN_BOOTS, new ShopItemInfo(5, 120000, 200, 110))
		.put(ItemID.BLUE_BOOTS, new ShopItemInfo(5, 120000, 200, 110))
		.put(ItemID.CREAM_BOOTS, new ShopItemInfo(5, 120000, 200, 110))
		.put(ItemID.TURQUOISE_BOOTS, new ShopItemInfo(5, 120000, 200, 110))
		.build()
	),
	FISHING_GUILD_SHOP("Fishing Guild Shop.", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(2000, 600, 3, 2))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(150, 3000, 300, 210))
		.put(ItemID.FEATHER, new ShopItemInfo(1500, 600, 2, 1))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(150, 1200, 200, 140))
		.put(ItemID.RAW_COD, new ShopItemInfo(0, 180000, 10, 7))
		.put(ItemID.RAW_MACKEREL, new ShopItemInfo(0, 360000, 15, 10))
		.put(ItemID.RAW_BASS, new ShopItemInfo(0, 540000, 40, 28))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(0, 1380000, 40, 28))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(0, 1560000, 70, 49))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(0, 1740000, 80, 56))
		.put(ItemID.COD, new ShopItemInfo(0, 180000, 10, 7))
		.put(ItemID.MACKEREL, new ShopItemInfo(0, 360000, 15, 10))
		.put(ItemID.BASS, new ShopItemInfo(0, 540000, 40, 28))
		.put(ItemID.TUNA, new ShopItemInfo(0, 1380000, 40, 28))
		.put(ItemID.LOBSTER, new ShopItemInfo(0, 1560000, 70, 49))
		.put(ItemID.SWORDFISH, new ShopItemInfo(0, 1740000, 80, 56))
		.build()
	),
	FLOSI_S_FISHMONGERS("Flosi's Fishmongers", new ShopRates(1.1, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(5, 6000, 77, 49))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(20, 6000, 44, 28))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(20, 6000, 33, 21))
		.put(ItemID.RAW_COD, new ShopItemInfo(20, 6000, 11, 7))
		.put(ItemID.RAW_SHARK, new ShopItemInfo(0, 6000, 187, 119))
		.build()
	),
	FLYNN_S_MACE_MARKET("Flynn's Mace Market.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_MACE, new ShopItemInfo(5, 60000, 18, 10))
		.put(ItemID.IRON_MACE, new ShopItemInfo(4, 120000, 63, 37))
		.put(ItemID.STEEL_MACE, new ShopItemInfo(4, 240000, 225, 135))
		.put(ItemID.MITHRIL_MACE, new ShopItemInfo(3, 1800000, 585, 351))
		.put(ItemID.ADAMANT_MACE, new ShopItemInfo(2, 7200000, 1440, 864))
		.build()
	),
	FOOD_STORE("Food Store", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.POT_OF_FLOUR, new ShopItemInfo(3, 60000, 10, 7))
		.put(ItemID.RAW_BEEF, new ShopItemInfo(1, 60000, 1, 0))
		.put(ItemID.RAW_CHICKEN, new ShopItemInfo(1, 60000, 1, 0))
		.put(ItemID.CABBAGE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.BANANA, new ShopItemInfo(3, 60000, 2, 1))
		.put(ItemID.REDBERRIES, new ShopItemInfo(1, 60000, 3, 2))
		.put(ItemID.BREAD, new ShopItemInfo(0, 60000, 12, 8))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(1, 60000, 10, 7))
		.put(ItemID.CHEESE, new ShopItemInfo(3, 60000, 4, 2))
		.put(ItemID.TOMATO, new ShopItemInfo(3, 60000, 4, 2))
		.put(ItemID.POTATO, new ShopItemInfo(1, 60000, 1, 0))
		.build()
	),
	FRANKIE_S_FISHING_EMPORIUM("Frankie's Fishing Emporium", new ShopRates(1.0, 0.95, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(500, 180000, 5, 4))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(500, 360000, 10, 9))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(250, 540000, 10, 9))
		.put(ItemID.RAW_MACKEREL, new ShopItemInfo(250, 600000, 15, 14))
		.put(ItemID.RAW_COD, new ShopItemInfo(100, 660000, 10, 9))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(100, 720000, 15, 14))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(100, 1380000, 40, 38))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(50, 1560000, 70, 66))
		.put(ItemID.RAW_BASS, new ShopItemInfo(50, 1620000, 40, 38))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(50, 1740000, 80, 76))
		.put(ItemID.RAW_SHARK, new ShopItemInfo(25, 2100000, 170, 161))
		.build()
	),
	FREMENNIK_FISH_MONGER("Fremennik Fish Monger", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SMALL_FISHING_NET, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.FLY_FISHING_ROD, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.HARPOON, new ShopItemInfo(2, 240000, 6, 3))
		.put(ItemID.LOBSTER_POT, new ShopItemInfo(2, 240000, 26, 14))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(1500, 600, 3, 2))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(80, 6000, 390, 210))
		.put(ItemID.FEATHER, new ShopItemInfo(1000, 600, 2, 1))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(50, 1200, 260, 140))
		.put(ItemID.BIG_FISHING_NET, new ShopItemInfo(5, 60000, 26, 14))
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(0, 180000, 6, 3))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(200, 600, 13, 7))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(0, 540000, 13, 7))
		.put(ItemID.RAW_MACKEREL, new ShopItemInfo(0, 600000, 19, 10))
		.put(ItemID.RAW_COD, new ShopItemInfo(0, 660000, 13, 7))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(0, 720000, 19, 10))
		.put(ItemID.RAW_TROUT, new ShopItemInfo(0, 900000, 13, 7))
		.put(ItemID.RAW_PIKE, new ShopItemInfo(0, 1080000, 26, 14))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(0, 1260000, 39, 21))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(0, 1380000, 52, 28))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(0, 1560000, 91, 49))
		.put(ItemID.RAW_BASS, new ShopItemInfo(0, 1620000, 52, 28))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(0, 1740000, 104, 56))
		.put(ItemID.RAW_SHARK, new ShopItemInfo(0, 2100000, 221, 119))
		.build()
	),
	FREMENNIK_FUR_TRADER("Fremennik Fur Trader", new ShopRates(1.2, 0.95, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEAR_FUR, new ShopItemInfo(3, 60000, 12, 9))
		.put(ItemID.GREY_WOLF_FUR, new ShopItemInfo(3, 60000, 60, 47))
		.put(ItemID.POLAR_KEBBIT_FUR, new ShopItemInfo(0, 60000, 12, 9))
		.put(ItemID.COMMON_KEBBIT_FUR, new ShopItemInfo(0, 60000, 14, 11))
		.put(ItemID.FELDIP_WEASEL_FUR, new ShopItemInfo(0, 60000, 16, 13))
		.put(ItemID.DESERT_DEVIL_FUR, new ShopItemInfo(0, 60000, 20, 16))
		.put(ItemID.TATTY_LARUPIA_FUR, new ShopItemInfo(0, 60000, 72, 57))
		.put(ItemID.LARUPIA_FUR, new ShopItemInfo(0, 60000, 96, 76))
		.put(ItemID.TATTY_GRAAHK_FUR, new ShopItemInfo(0, 60000, 108, 85))
		.put(ItemID.GRAAHK_FUR, new ShopItemInfo(0, 60000, 144, 114))
		.put(ItemID.TATTY_KYATT_FUR, new ShopItemInfo(0, 60000, 144, 114))
		.put(ItemID.KYATT_FUR, new ShopItemInfo(0, 60000, 192, 152))
		.build()
	),
	FRENITA_S_COOKERY_SHOP("Frenita's Cookery Shop.", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PIE_DISH, new ShopItemInfo(5, 120000, 3, 1))
		.put(ItemID.COOKING_APPLE, new ShopItemInfo(2, 120000, 1, 0))
		.put(ItemID.CAKE_TIN, new ShopItemInfo(2, 120000, 10, 5))
		.put(ItemID.BOWL, new ShopItemInfo(2, 120000, 4, 2))
		.put(ItemID.POTATO, new ShopItemInfo(5, 120000, 1, 0))
		.put(ItemID.TINDERBOX, new ShopItemInfo(4, 120000, 1, 0))
		.put(ItemID.JUG, new ShopItemInfo(1, 60000, 1, 0))
		.put(ItemID.EMPTY_JUG_PACK, new ShopItemInfo(3, 9000, 140, 77))
		.put(ItemID.POT, new ShopItemInfo(8, 60000, 1, 0))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(2, 60000, 10, 5))
		.put(ItemID.POT_OF_FLOUR, new ShopItemInfo(8, 60000, 10, 5))
		.put(ItemID.EMPTY_CUP, new ShopItemInfo(20, 30000, 2, 1))
		.build()
	),
	FRINCOS__FABULOUS_HERB_STORE("Frincos' Fabulous Herb Store.", new ShopRates(1.0, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.VIAL, new ShopItemInfo(50, 60000, 2, 1))
		.put(ItemID.EMPTY_VIAL_PACK, new ShopItemInfo(10, 30000, 200, 140))
		.put(ItemID.VIAL_OF_WATER, new ShopItemInfo(45, 60000, 2, 1))
		.put(ItemID.WATERFILLED_VIAL_PACK, new ShopItemInfo(8, 30000, 201, 140))
		.put(ItemID.PESTLE_AND_MORTAR, new ShopItemInfo(3, 60000, 4, 2))
		.put(ItemID.EYE_OF_NEWT, new ShopItemInfo(50, 12000, 3, 2))
		.put(ItemID.EYE_OF_NEWT_PACK, new ShopItemInfo(20, 60000, 300, 210))
		.build()
	),
	FUNCH_S_FINE_GROCERIES("Funch's Fine Groceries", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRANDY, new ShopItemInfo(10, 60000, 5, 2))
		.put(ItemID.GIN, new ShopItemInfo(10, 60000, 5, 2))
		.put(ItemID.VODKA, new ShopItemInfo(10, 600, 5, 2))
		.put(ItemID.WHISKY, new ShopItemInfo(10, 60000, 5, 2))
		.put(ItemID.PINEAPPLE, new ShopItemInfo(10, 120000, 2, 1))
		.put(ItemID.EQUA_LEAVES, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.ORANGE, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.LEMON, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.LIME, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.DWELLBERRIES, new ShopItemInfo(5, 60000, 4, 2))
		.put(ItemID.COCKTAIL_SHAKER, new ShopItemInfo(10, 120000, 2, 1))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(20, 60000, 10, 5))
		.put(ItemID.CHOCOLATE_DUST, new ShopItemInfo(10, 60000, 2, 1))
		.put(ItemID.POT_OF_CREAM, new ShopItemInfo(5, 60000, 2, 1))
		.put(ItemID.BUCKET_OF_MILK, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.KNIFE, new ShopItemInfo(5, 120000, 6, 3))
		.put(ItemID.COCKTAIL_GLASS, new ShopItemInfo(20, 6000, 1, 0))
		.build()
	),
	GAIUS__TWO_HANDED_SHOP("Gaius' Two Handed Shop.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_2H_SWORD, new ShopItemInfo(4, 120000, 80, 48))
		.put(ItemID.IRON_2H_SWORD, new ShopItemInfo(3, 180000, 280, 168))
		.put(ItemID.STEEL_2H_SWORD, new ShopItemInfo(2, 300000, 1000, 600))
		.put(ItemID.BLACK_2H_SWORD, new ShopItemInfo(1, 420000, 1920, 1152))
		.put(ItemID.MITHRIL_2H_SWORD, new ShopItemInfo(1, 600000, 2600, 1560))
		.put(ItemID.ADAMANT_2H_SWORD, new ShopItemInfo(1, 9000000, 6400, 3840))
		.build()
	),
	GARDEN_CENTRE("Garden Centre", new ShopRates(1.0, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BAGGED_DEAD_TREE, new ShopItemInfo(20, 60000, 1000, 400))
		.put(ItemID.BAGGED_NICE_TREE, new ShopItemInfo(20, 60000, 2000, 800))
		.put(ItemID.BAGGED_OAK_TREE, new ShopItemInfo(20, 60000, 5000, 2000))
		.put(ItemID.BAGGED_WILLOW_TREE, new ShopItemInfo(20, 60000, 10000, 4000))
		.put(ItemID.BAGGED_MAPLE_TREE, new ShopItemInfo(20, 60000, 15000, 6000))
		.put(ItemID.BAGGED_YEW_TREE, new ShopItemInfo(20, 60000, 20000, 8000))
		.put(ItemID.BAGGED_MAGIC_TREE, new ShopItemInfo(20, 60000, 50000, 20000))
		.put(ItemID.BAGGED_PLANT_1, new ShopItemInfo(20, 60000, 1000, 400))
		.put(ItemID.BAGGED_PLANT_2, new ShopItemInfo(20, 60000, 5000, 2000))
		.put(ItemID.BAGGED_PLANT_3, new ShopItemInfo(20, 60000, 10000, 4000))
		.put(ItemID.THORNY_HEDGE_8437, new ShopItemInfo(20, 60000, 5000, 2000))
		.put(ItemID.NICE_HEDGE_8439, new ShopItemInfo(20, 60000, 10000, 4000))
		.put(ItemID.SMALL_BOX_HEDGE_8441, new ShopItemInfo(20, 60000, 15000, 6000))
		.put(ItemID.TOPIARY_HEDGE_8443, new ShopItemInfo(20, 60000, 20000, 8000))
		.put(ItemID.FANCY_HEDGE_8445, new ShopItemInfo(20, 60000, 25000, 10000))
		.put(ItemID.TALL_FANCY_HEDGE_8447, new ShopItemInfo(20, 60000, 50000, 20000))
		.put(ItemID.TALL_BOX_HEDGE_8449, new ShopItemInfo(20, 60000, 100000, 40000))
		.put(ItemID.BAGGED_FLOWER, new ShopItemInfo(20, 60000, 5000, 2000))
		.put(ItemID.BAGGED_DAFFODILS, new ShopItemInfo(20, 60000, 10000, 4000))
		.put(ItemID.BAGGED_BLUEBELLS, new ShopItemInfo(20, 60000, 15000, 6000))
		.put(ItemID.BAGGED_SUNFLOWER, new ShopItemInfo(20, 60000, 5000, 2000))
		.put(ItemID.BAGGED_MARIGOLDS, new ShopItemInfo(20, 60000, 10000, 4000))
		.put(ItemID.BAGGED_ROSES, new ShopItemInfo(20, 60000, 15000, 6000))
		.build()
	),
	GEM_TRADER("Gem Trader.", new ShopRates(1.0, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.UNCUT_SAPPHIRE, new ShopItemInfo(1, 15000000, 25, 17))
		.put(ItemID.UNCUT_EMERALD, new ShopItemInfo(1, 24000000, 50, 35))
		.put(ItemID.UNCUT_RUBY, new ShopItemInfo(0, 1200000, 100, 70))
		.put(ItemID.UNCUT_DIAMOND, new ShopItemInfo(0, 2400000, 200, 140))
		.put(ItemID.SAPPHIRE, new ShopItemInfo(1, 9000000, 250, 175))
		.put(ItemID.EMERALD, new ShopItemInfo(1, 21000000, 500, 350))
		.put(ItemID.RUBY, new ShopItemInfo(0, 1200000, 1000, 700))
		.put(ItemID.DIAMOND, new ShopItemInfo(0, 2400000, 2000, 1400))
		.build()
	),
	GERRANT_S_FISHY_BUSINESS("Gerrant's Fishy Business.", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SMALL_FISHING_NET, new ShopItemInfo(5, 60000, 5, 3))
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 5, 3))
		.put(ItemID.FLY_FISHING_ROD, new ShopItemInfo(5, 60000, 5, 3))
		.put(ItemID.HARPOON, new ShopItemInfo(2, 240000, 5, 3))
		.put(ItemID.LOBSTER_POT, new ShopItemInfo(2, 240000, 20, 14))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(1500, 600, 3, 2))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(80, 3000, 300, 210))
		.put(ItemID.FEATHER, new ShopItemInfo(1000, 600, 2, 1))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(100, 1200, 200, 140))
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(0, 180000, 5, 3))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(200, 600, 10, 7))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(0, 540000, 10, 7))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(0, 720000, 15, 10))
		.put(ItemID.RAW_TROUT, new ShopItemInfo(0, 900000, 10, 7))
		.put(ItemID.RAW_PIKE, new ShopItemInfo(0, 1080000, 20, 14))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(0, 1260000, 30, 21))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(0, 1380000, 40, 28))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(0, 1560000, 70, 49))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(0, 1740000, 80, 56))
		.build()
	),
	GIANNE_S_RESTAURANT("Gianne's Restaurant", new ShopRates(1.0, 0.25, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PREMADE_VEG_BATTA, new ShopItemInfo(3, 60000, 120, 30))
		.put(ItemID.PREMADE_WM_BATTA, new ShopItemInfo(3, 60000, 120, 30))
		.put(ItemID.PREMADE_TD_BATTA, new ShopItemInfo(3, 60000, 120, 30))
		.put(ItemID.PREMADE_FRT_BATTA, new ShopItemInfo(3, 60000, 120, 30))
		.put(ItemID.PREMADE_CT_BATTA, new ShopItemInfo(3, 60000, 120, 30))
		.put(ItemID.PREMADE_WORM_HOLE, new ShopItemInfo(3, 60000, 150, 37))
		.put(ItemID.PREMADE_TTL, new ShopItemInfo(3, 60000, 160, 40))
		.put(ItemID.PREMADE_VEG_BALL, new ShopItemInfo(3, 60000, 150, 37))
		.put(ItemID.PREMADE_CHOC_BOMB, new ShopItemInfo(3, 60000, 160, 40))
		.put(ItemID.PREMADE_WM_CRUN, new ShopItemInfo(3, 60000, 85, 21))
		.put(ItemID.PREMADE_TD_CRUNCH, new ShopItemInfo(3, 60000, 85, 21))
		.put(ItemID.PREMADE_CH_CRUNCH, new ShopItemInfo(3, 60000, 85, 21))
		.put(ItemID.PREMADE_SY_CRUNCH, new ShopItemInfo(3, 60000, 85, 21))
		.build()
	),
	GRAND_TREE_GROCERIES("Grand Tree Groceries", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.GIANNE_DOUGH, new ShopItemInfo(50, 60000, 2, 1))
		.put(ItemID.EQUA_LEAVES, new ShopItemInfo(20, 60000, 2, 1))
		.put(ItemID.POT_OF_FLOUR, new ShopItemInfo(10, 120000, 10, 5))
		.put(ItemID.GNOME_SPICE, new ShopItemInfo(10, 60000, 2, 1))
		.put(ItemID.ONION, new ShopItemInfo(10, 60000, 3, 1))
		.put(ItemID.POTATO, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.CABBAGE, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.TOMATO, new ShopItemInfo(10, 60000, 4, 2))
		.put(ItemID.CHEESE, new ShopItemInfo(10, 60000, 4, 2))
		.put(ItemID.SPIDER_ON_STICK, new ShopItemInfo(0, 60000, 50, 27))
		.put(ItemID.SPIDER_ON_SHAFT, new ShopItemInfo(0, 60000, 40, 22))
		.put(ItemID.LIME, new ShopItemInfo(10, 60000, 2, 1))
		.put(ItemID.ORANGE, new ShopItemInfo(10, 60000, 2, 1))
		.put(ItemID.LEMON, new ShopItemInfo(10, 60000, 2, 1))
		.put(ItemID.PINEAPPLE, new ShopItemInfo(10, 60000, 2, 1))
		.put(ItemID.DWELLBERRIES, new ShopItemInfo(10, 60000, 4, 2))
		.put(ItemID.COCKTAIL_SHAKER, new ShopItemInfo(10, 120000, 2, 1))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(20, 60000, 10, 5))
		.put(ItemID.CHOCOLATE_DUST, new ShopItemInfo(10, 60000, 2, 1))
		.put(ItemID.POT_OF_CREAM, new ShopItemInfo(5, 60000, 2, 1))
		.put(ItemID.BUCKET_OF_MILK, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.KNIFE, new ShopItemInfo(5, 120000, 6, 3))
		.put(ItemID.GIANNES_COOK_BOOK, new ShopItemInfo(5, 60000, 2, 1))
		.put(ItemID.BATTA_TIN, new ShopItemInfo(5, 120000, 10, 5))
		.put(ItemID.CRUNCHY_TRAY, new ShopItemInfo(5, 120000, 10, 5))
		.put(ItemID.GNOMEBOWL_MOULD, new ShopItemInfo(5, 120000, 10, 5))
		.build()
	),
	GREEN_GEMSTONE_GEMS("Green Gemstone Gems", new ShopRates(1.5, 0.8, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SAPPHIRE, new ShopItemInfo(3, 9000000, 375, 200))
		.put(ItemID.EMERALD, new ShopItemInfo(1, 600000, 750, 400))
		.put(ItemID.RUBY, new ShopItemInfo(1, 1200000, 1500, 800))
		.put(ItemID.DIAMOND, new ShopItemInfo(0, 2400000, 3000, 1600))
		.build()
	),
	GREENGROCER_OF_MISCELLANIA("Greengrocer of Miscellania", new ShopRates(1.2, 0.95, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CABBAGE, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.POTATO, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.ONION, new ShopItemInfo(10, 60000, 3, 2))
		.put(ItemID.TOMATO, new ShopItemInfo(10, 60000, 4, 3))
		.put(ItemID.GARLIC, new ShopItemInfo(2, 240000, 3, 2))
		.build()
	),
	GRUD_S_HERBLORE_STALL("Grud's Herblore Stall.", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.VIAL, new ShopItemInfo(50, 60000, 2, 0))
		.put(ItemID.EMPTY_VIAL_PACK, new ShopItemInfo(10, 30000, 260, 80))
		.put(ItemID.VIAL_OF_WATER, new ShopItemInfo(45, 60000, 2, 0))
		.put(ItemID.WATERFILLED_VIAL_PACK, new ShopItemInfo(8, 30000, 261, 80))
		.put(ItemID.PESTLE_AND_MORTAR, new ShopItemInfo(3, 60000, 5, 1))
		.put(ItemID.EYE_OF_NEWT, new ShopItemInfo(50, 12000, 3, 1))
		.put(ItemID.EYE_OF_NEWT_PACK, new ShopItemInfo(20, 60000, 390, 120))
		.build()
	),
	GRUM_S_GOLD_EXCHANGE("Grum's Gold Exchange.", new ShopRates(1.0, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.GOLD_RING, new ShopItemInfo(0, 600000, 350, 245))
		.put(ItemID.SAPPHIRE_RING, new ShopItemInfo(0, 600000, 900, 630))
		.put(ItemID.EMERALD_RING, new ShopItemInfo(0, 1200000, 1275, 892))
		.put(ItemID.RUBY_RING, new ShopItemInfo(0, 1200000, 2025, 1417))
		.put(ItemID.DIAMOND_RING, new ShopItemInfo(0, 1800000, 3525, 2467))
		.put(ItemID.GOLD_NECKLACE, new ShopItemInfo(0, 600000, 450, 315))
		.put(ItemID.SAPPHIRE_NECKLACE, new ShopItemInfo(0, 1200000, 1050, 735))
		.put(ItemID.EMERALD_NECKLACE, new ShopItemInfo(0, 1200000, 1425, 997))
		.put(ItemID.RUBY_NECKLACE, new ShopItemInfo(0, 1800000, 2175, 1522))
		.put(ItemID.DIAMOND_NECKLACE, new ShopItemInfo(0, 1800000, 3675, 2572))
		.put(ItemID.GOLD_AMULET, new ShopItemInfo(0, 600000, 350, 245))
		.put(ItemID.SAPPHIRE_AMULET, new ShopItemInfo(0, 1200000, 900, 630))
		.put(ItemID.EMERALD_AMULET, new ShopItemInfo(0, 1800000, 1275, 892))
		.put(ItemID.RUBY_AMULET, new ShopItemInfo(0, 2400000, 2025, 1417))
		.put(ItemID.DIAMOND_AMULET, new ShopItemInfo(0, 3000000, 3525, 2467))
		.build()
	),
	GUINEVERE_S_DYES("Guinevere's Dyes", new ShopRates(1.3, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RED_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.YELLOW_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.BLUE_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.ORANGE_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.GREEN_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.PURPLE_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.build()
	),
	GULLUCK_AND_SONS("Gulluck and Sons", new ShopRates(1.0, 0.25, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_ARROW, new ShopItemInfo(200, 6000, 1, 0))
		.put(ItemID.BRONZE_BOLTS, new ShopItemInfo(150, 6000, 1, 0))
		.put(ItemID.PEARL_BOLTS, new ShopItemInfo(1, 900000, 13, 3))
		.put(ItemID.SHORTBOW, new ShopItemInfo(4, 60000, 50, 12))
		.put(ItemID.LONGBOW, new ShopItemInfo(2, 120000, 80, 20))
		.put(ItemID.CROSSBOW, new ShopItemInfo(2, 240000, 70, 17))
		.put(ItemID.BRONZE_ARROWTIPS, new ShopItemInfo(200, 6000, 1, 0))
		.put(ItemID.IRON_ARROWTIPS, new ShopItemInfo(180, 12000, 2, 0))
		.put(ItemID.STEEL_ARROWTIPS, new ShopItemInfo(160, 24000, 6, 1))
		.put(ItemID.MITHRIL_ARROWTIPS, new ShopItemInfo(140, 48000, 16, 4))
		.put(ItemID.IRON_AXE, new ShopItemInfo(5, 120000, 56, 14))
		.put(ItemID.STEEL_AXE, new ShopItemInfo(3, 240000, 200, 50))
		.put(ItemID.IRON_BATTLEAXE, new ShopItemInfo(5, 60000, 182, 45))
		.put(ItemID.STEEL_BATTLEAXE, new ShopItemInfo(2, 120000, 650, 162))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(1, 1800000, 1690, 422))
		.put(ItemID.BRONZE_2H_SWORD, new ShopItemInfo(4, 120000, 80, 20))
		.put(ItemID.IRON_2H_SWORD, new ShopItemInfo(3, 180000, 280, 70))
		.put(ItemID.STEEL_2H_SWORD, new ShopItemInfo(2, 300000, 1000, 250))
		.put(ItemID.BLACK_2H_SWORD, new ShopItemInfo(1, 420000, 1920, 480))
		.put(ItemID.MITHRIL_2H_SWORD, new ShopItemInfo(1, 600000, 2600, 650))
		.put(ItemID.ADAMANT_2H_SWORD, new ShopItemInfo(1, 9000000, 6400, 1600))
		.build()
	),
	GWYN_S_MINING_EMPORIUM("Gwyn's Mining Emporium", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.IRON_PICKAXE, new ShopItemInfo(5, 60000, 140, 84))
		.put(ItemID.STEEL_PICKAXE, new ShopItemInfo(4, 120000, 500, 300))
		.put(ItemID.MITHRIL_PICKAXE, new ShopItemInfo(3, 180000, 1300, 780))
		.put(ItemID.ADAMANT_PICKAXE, new ShopItemInfo(2, 300000, 3200, 1920))
		.put(ItemID.RUNE_PICKAXE, new ShopItemInfo(1, 360000, 32000, 19200))
		.put(ItemID.CHISEL, new ShopItemInfo(10, 60000, 1, 0))
		.build()
	),
	HAMAB_S_CRAFTING_EMPORIUM("Hamab's Crafting Emporium", new ShopRates(1.0, 0.5, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CHISEL, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.RING_MOULD, new ShopItemInfo(4, 60000, 5, 2))
		.put(ItemID.NECKLACE_MOULD, new ShopItemInfo(2, 60000, 5, 2))
		.put(ItemID.MAMULET_MOULD, new ShopItemInfo(2, 60000, 10, 0))
		.put(ItemID.NEEDLE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.THREAD, new ShopItemInfo(100, 3000, 1, 0))
		.put(ItemID.BALL_OF_WOOL, new ShopItemInfo(100, 3000, 2, 1))
		.put(ItemID.BRACELET_MOULD, new ShopItemInfo(2, 60000, 5, 2))
		.build()
	),
	HAPPY_HEROES__H_EMPORIUM("Happy Heroes' H'emporium.", new ShopRates(1.0, 0.55, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.DRAGON_BATTLEAXE, new ShopItemInfo(1, 300000, 200000, 110000))
		.put(ItemID.DRAGON_MACE, new ShopItemInfo(1, 300000, 50000, 27500))
		.build()
	),
	HARRY_S_FISHING_SHOP("Harry's Fishing Shop.", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SMALL_FISHING_NET, new ShopItemInfo(5, 60000, 5, 3))
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 5, 3))
		.put(ItemID.HARPOON, new ShopItemInfo(2, 240000, 5, 3))
		.put(ItemID.LOBSTER_POT, new ShopItemInfo(2, 240000, 20, 14))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(1200, 600, 3, 2))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(80, 3000, 300, 210))
		.put(ItemID.BIG_FISHING_NET, new ShopItemInfo(5, 60000, 20, 14))
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(0, 180000, 5, 3))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(0, 360000, 10, 7))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(0, 540000, 10, 7))
		.put(ItemID.RAW_MACKEREL, new ShopItemInfo(0, 600000, 15, 10))
		.put(ItemID.RAW_COD, new ShopItemInfo(0, 660000, 10, 7))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(0, 720000, 15, 10))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(0, 1380000, 40, 28))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(0, 1560000, 70, 49))
		.put(ItemID.RAW_BASS, new ShopItemInfo(0, 1620000, 40, 28))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(0, 1740000, 80, 56))
		.put(ItemID.RAW_SHARK, new ShopItemInfo(0, 2100000, 170, 119))
		.build()
	),
	HELMET_SHOP("Helmet Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_MED_HELM, new ShopItemInfo(5, 60000, 24, 14))
		.put(ItemID.IRON_MED_HELM, new ShopItemInfo(3, 120000, 84, 50))
		.put(ItemID.STEEL_MED_HELM, new ShopItemInfo(3, 240000, 300, 180))
		.put(ItemID.MITHRIL_MED_HELM, new ShopItemInfo(1, 1800000, 780, 468))
		.put(ItemID.ADAMANT_MED_HELM, new ShopItemInfo(1, 7200000, 1920, 1152))
		.put(ItemID.BRONZE_FULL_HELM, new ShopItemInfo(4, 60000, 44, 26))
		.put(ItemID.IRON_FULL_HELM, new ShopItemInfo(3, 120000, 154, 92))
		.put(ItemID.STEEL_FULL_HELM, new ShopItemInfo(2, 240000, 550, 330))
		.put(ItemID.MITHRIL_FULL_HELM, new ShopItemInfo(1, 1800000, 1430, 858))
		.put(ItemID.ADAMANT_FULL_HELM, new ShopItemInfo(1, 7200000, 3520, 2112))
		.build()
	),
	HENDOR_S_AWESOME_ORES("Hendor's Awesome Ores", new ShopRates(1.0, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.COPPER_ORE, new ShopItemInfo(0, 9000000, 3, 2))
		.put(ItemID.TIN_ORE, new ShopItemInfo(0, 9000000, 3, 2))
		.put(ItemID.IRON_ORE, new ShopItemInfo(0, 3000000, 17, 11))
		.put(ItemID.MITHRIL_ORE, new ShopItemInfo(0, 1200000, 162, 113))
		.put(ItemID.ADAMANTITE_ORE, new ShopItemInfo(0, 480000, 400, 280))
		.put(ItemID.RUNITE_ORE, new ShopItemInfo(0, 120000, 3200, 2240))
		.put(ItemID.COAL, new ShopItemInfo(0, 3000000, 45, 31))
		.build()
	),
	HERQUIN_S_GEMS("Herquin's Gems.", new ShopRates(1.0, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.UNCUT_SAPPHIRE, new ShopItemInfo(1, 15000000, 25, 17))
		.put(ItemID.UNCUT_EMERALD, new ShopItemInfo(0, 600000, 50, 35))
		.put(ItemID.UNCUT_RUBY, new ShopItemInfo(0, 1200000, 100, 70))
		.put(ItemID.UNCUT_DIAMOND, new ShopItemInfo(0, 2400000, 200, 140))
		.put(ItemID.SAPPHIRE, new ShopItemInfo(1, 9000000, 250, 175))
		.put(ItemID.EMERALD, new ShopItemInfo(0, 600000, 500, 350))
		.put(ItemID.RUBY, new ShopItemInfo(0, 1200000, 1000, 700))
		.put(ItemID.DIAMOND, new ShopItemInfo(0, 2400000, 2000, 1400))
		.build()
	),
	HICKTON_S_ARCHERY_EMPORIUM("Hickton's Archery Emporium.", new ShopRates(1.0, 0.5, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_BOLTS, new ShopItemInfo(200, 6000, 1, 0))
		.put(ItemID.BRONZE_ARROW, new ShopItemInfo(1000, 6000, 1, 0))
		.put(ItemID.IRON_ARROW, new ShopItemInfo(800, 12000, 3, 1))
		.put(ItemID.STEEL_ARROW, new ShopItemInfo(0, 600000, 12, 6))
		.put(ItemID.MITHRIL_ARROW, new ShopItemInfo(0, 1200000, 32, 16))
		.put(ItemID.ADAMANT_ARROW, new ShopItemInfo(0, 1800000, 80, 40))
		.put(ItemID.RUNE_ARROW, new ShopItemInfo(0, 2400000, 400, 200))
		.put(ItemID.BRONZE_BRUTAL, new ShopItemInfo(0, 600000, 5, 2))
		.put(ItemID.IRON_BRUTAL, new ShopItemInfo(0, 600000, 10, 5))
		.put(ItemID.STEEL_BRUTAL, new ShopItemInfo(0, 600000, 20, 10))
		.put(ItemID.BLACK_BRUTAL, new ShopItemInfo(0, 900000, 35, 17))
		.put(ItemID.MITHRIL_BRUTAL, new ShopItemInfo(0, 1200000, 50, 25))
		.put(ItemID.ADAMANT_BRUTAL, new ShopItemInfo(0, 1800000, 95, 47))
		.put(ItemID.RUNE_BRUTAL, new ShopItemInfo(0, 2400000, 450, 225))
		.put(ItemID.BRONZE_ARROWTIPS, new ShopItemInfo(1000, 6000, 1, 0))
		.put(ItemID.IRON_ARROWTIPS, new ShopItemInfo(800, 12000, 2, 1))
		.put(ItemID.STEEL_ARROWTIPS, new ShopItemInfo(600, 24000, 6, 3))
		.put(ItemID.MITHRIL_ARROWTIPS, new ShopItemInfo(400, 24000, 16, 8))
		.put(ItemID.ADAMANT_ARROWTIPS, new ShopItemInfo(200, 24000, 40, 20))
		.put(ItemID.RUNE_ARROWTIPS, new ShopItemInfo(100, 24000, 200, 100))
		.put(ItemID.SHORTBOW, new ShopItemInfo(4, 60000, 50, 25))
		.put(ItemID.LONGBOW, new ShopItemInfo(2, 120000, 80, 40))
		.put(ItemID.CROSSBOW, new ShopItemInfo(2, 240000, 70, 35))
		.put(ItemID.OAK_SHORTBOW, new ShopItemInfo(4, 480000, 100, 50))
		.put(ItemID.OAK_LONGBOW, new ShopItemInfo(4, 960000, 160, 80))
		.put(ItemID.COMP_OGRE_BOW, new ShopItemInfo(0, 1200000, 180, 90))
		.put(ItemID.STUDDED_BODY, new ShopItemInfo(2, 600000, 850, 425))
		.put(ItemID.STUDDED_CHAPS, new ShopItemInfo(2, 600000, 750, 375))
		.build()
	),
	IAN_S_WILDERNESS_CAPE_SHOP("Ian's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM2_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM12_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM22_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM32_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM42_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	IORWERTH_S_ARMS("Iorwerth's Arms", new ShopRates(1.5, 0.25, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.ADAMANT_DAGGER, new ShopItemInfo(4, 60000, 1200, 200))
		.put(ItemID.RUNE_DAGGER, new ShopItemInfo(3, 60000, 12000, 2000))
		.put(ItemID.DRAGON_DAGGER, new ShopItemInfo(2, 300000, 45000, 7500))
		.put(ItemID.ADAMANT_SCIMITAR, new ShopItemInfo(2, 300000, 3840, 640))
		.put(ItemID.RUNE_SCIMITAR, new ShopItemInfo(1, 600000, 38400, 6400))
		.put(ItemID.ADAMANT_HALBERD, new ShopItemInfo(7, 60000, 9600, 1600))
		.put(ItemID.RUNE_HALBERD, new ShopItemInfo(7, 60000, 96000, 16000))
		.put(ItemID.DRAGON_HALBERD, new ShopItemInfo(5, 300000, 375000, 62500))
		.build()
	),
	IRKSOL_SHOP("Irksol (shop)", new ShopRates(0.5, 0.3, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RUBY_RING, new ShopItemInfo(5, 300000, 1012, 607))
		.build()
	),
	ISLAND_FISHMONGER("Island Fishmonger", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SMALL_FISHING_NET, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.FLY_FISHING_ROD, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.HARPOON, new ShopItemInfo(2, 240000, 6, 3))
		.put(ItemID.LOBSTER_POT, new ShopItemInfo(2, 240000, 26, 14))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(1500, 600, 3, 2))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(80, 6000, 390, 210))
		.put(ItemID.FEATHER, new ShopItemInfo(1000, 600, 2, 1))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(100, 1200, 260, 140))
		.put(ItemID.BIG_FISHING_NET, new ShopItemInfo(5, 60000, 26, 14))
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(0, 180000, 6, 3))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(200, 600, 13, 7))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(0, 540000, 13, 7))
		.put(ItemID.RAW_MACKEREL, new ShopItemInfo(0, 600000, 19, 10))
		.put(ItemID.RAW_COD, new ShopItemInfo(0, 660000, 13, 7))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(0, 720000, 19, 10))
		.put(ItemID.RAW_TROUT, new ShopItemInfo(0, 900000, 13, 7))
		.put(ItemID.RAW_PIKE, new ShopItemInfo(0, 1080000, 26, 14))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(0, 1260000, 39, 21))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(0, 1380000, 52, 28))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(0, 1560000, 91, 49))
		.put(ItemID.RAW_BASS, new ShopItemInfo(0, 1620000, 52, 28))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(0, 1740000, 104, 56))
		.put(ItemID.RAW_SHARK, new ShopItemInfo(0, 2100000, 221, 119))
		.build()
	),
	ISLAND_GREENGROCER("Island Greengrocer", new ShopRates(1.2, 0.95, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CABBAGE, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.POTATO, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.ONION, new ShopItemInfo(10, 60000, 3, 2))
		.put(ItemID.TOMATO, new ShopItemInfo(10, 60000, 4, 3))
		.put(ItemID.GARLIC, new ShopItemInfo(2, 240000, 3, 2))
		.build()
	),
	IWAN_S_MACES("Iwan's Maces", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.MITHRIL_MACE, new ShopItemInfo(3, 1800000, 585, 351))
		.put(ItemID.ADAMANT_MACE, new ShopItemInfo(2, 3000000, 1440, 864))
		.put(ItemID.RUNE_MACE, new ShopItemInfo(1, 4800000, 14400, 8640))
		.build()
	),
	JAMILA_S_CRAFT_STALL("Jamila's Craft Stall.", new ShopRates(1.5, 0.25, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CHISEL, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.RING_MOULD, new ShopItemInfo(4, 60000, 7, 1))
		.put(ItemID.NECKLACE_MOULD, new ShopItemInfo(2, 60000, 7, 1))
		.put(ItemID.AMULET_MOULD, new ShopItemInfo(2, 60000, 7, 1))
		.put(ItemID.NEEDLE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.THREAD, new ShopItemInfo(100, 3000, 1, 0))
		.put(ItemID.HOLY_MOULD, new ShopItemInfo(3, 60000, 7, 1))
		.put(ItemID.SICKLE_MOULD, new ShopItemInfo(6, 9000, 15, 2))
		.put(ItemID.TIARA_MOULD, new ShopItemInfo(10, 6000, 150, 25))
		.put(ItemID.BRACELET_MOULD, new ShopItemInfo(5, 60000, 7, 1))
		.build()
	),
	JATIX_S_HERBLORE_SHOP("Jatix's Herblore Shop.", new ShopRates(1.0, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.VIAL, new ShopItemInfo(800, 60000, 2, 1))
		.put(ItemID.EMPTY_VIAL_PACK, new ShopItemInfo(800, 30000, 200, 140))
		.put(ItemID.VIAL_OF_WATER, new ShopItemInfo(750, 60000, 2, 1))
		.put(ItemID.WATERFILLED_VIAL_PACK, new ShopItemInfo(750, 30000, 201, 140))
		.put(ItemID.PESTLE_AND_MORTAR, new ShopItemInfo(3, 60000, 4, 2))
		.put(ItemID.EYE_OF_NEWT, new ShopItemInfo(800, 12000, 3, 2))
		.put(ItemID.EYE_OF_NEWT_PACK, new ShopItemInfo(100, 60000, 300, 210))
		.build()
	),
	JUKAT_SHOP("Jukat (shop)", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.DRAGON_LONGSWORD, new ShopItemInfo(2, 300000, 100000, 60000))
		.put(ItemID.DRAGON_DAGGER, new ShopItemInfo(2, 300000, 30000, 18000))
		.build()
	),
	KEEPA_KETTILON_S_STORE("Keepa Kettilon's store", new ShopRates(1.1, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TUNA, new ShopItemInfo(20, 3000, 44, 28))
		.put(ItemID.SALMON, new ShopItemInfo(20, 6000, 33, 21))
		.put(ItemID.COD, new ShopItemInfo(20, 6000, 11, 7))
		.put(ItemID.LOBSTER, new ShopItemInfo(10, 6000, 77, 49))
		.put(ItemID.SWORDFISH, new ShopItemInfo(0, 3000, 88, 56))
		.put(ItemID.SHARK, new ShopItemInfo(0, 600, 187, 119))
		.build()
	),
	KELDAGRIM_STONEMASON("Keldagrim Stonemason", new ShopRates(1.3, 0.5, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.LIMESTONE_BRICK, new ShopItemInfo(1000, 60000, 26, 10))
		.put(ItemID.MARBLE_BLOCK, new ShopItemInfo(20, 60000, 325000, 125000))
		.put(ItemID.GOLD_LEAF, new ShopItemInfo(20, 60000, 130000, 50000))
		.put(ItemID.MAGIC_STONE, new ShopItemInfo(10, 60000, 975000, 375000))
		.build()
	),
	KELDAGRIM_S_BEST_BREAD("Keldagrim's Best Bread", new ShopRates(1.5, 0.8, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BREAD, new ShopItemInfo(10, 60000, 18, 9))
		.put(ItemID.CAKE, new ShopItemInfo(3, 480000, 75, 40))
		.put(ItemID.CHOCOLATE_SLICE, new ShopItemInfo(8, 120000, 45, 24))
		.build()
	),
	KENELME_S_WARES("Kenelme's Wares", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.POT_OF_FLOUR, new ShopItemInfo(3, 60000, 10, 6))
		.put(ItemID.RAW_BEEF, new ShopItemInfo(1, 60000, 1, 0))
		.put(ItemID.CABBAGE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.BANANA, new ShopItemInfo(3, 60000, 2, 1))
		.put(ItemID.REDBERRIES, new ShopItemInfo(1, 60000, 3, 1))
		.put(ItemID.BREAD, new ShopItemInfo(0, 60000, 12, 7))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(1, 57000, 10, 6))
		.put(ItemID.CHEESE, new ShopItemInfo(3, 60000, 4, 2))
		.put(ItemID.TOMATO, new ShopItemInfo(3, 60000, 4, 2))
		.put(ItemID.POTATO, new ShopItemInfo(1, 60000, 1, 0))
		.build()
	),
	KOUREND_CASTLE_BAKER_S_STALL("Kourend Castle Baker's Stall.", new ShopRates(1.0, 0.8, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BREAD, new ShopItemInfo(30, 90000, 12, 9))
		.put(ItemID.CAKE, new ShopItemInfo(10, 600000, 50, 40))
		.put(ItemID.CHOCOLATE_SLICE, new ShopItemInfo(5, 240000, 30, 24))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(15, 150000, 10, 8))
		.build()
	),
	KOUREND_CASTLE_GEM_STALL("Kourend Castle Gem Stall.", new ShopRates(1.0, 0.8, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SAPPHIRE, new ShopItemInfo(2, 9000000, 250, 200))
		.put(ItemID.EMERALD, new ShopItemInfo(1, 21000000, 500, 400))
		.put(ItemID.RUBY, new ShopItemInfo(1, 36000000, 1000, 800))
		.put(ItemID.DIAMOND, new ShopItemInfo(0, 2400000, 2000, 1600))
		.build()
	),
	LARRY_S_WILDERNESS_CAPE_SHOP("Larry's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM3_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM13_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM23_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM33_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM43_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	LEON_S_PROTOTYPE_CROSSBOW("Leon's Prototype Crossbow.", new ShopRates(1.0, 0.2, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.HUNTERS_CROSSBOW, new ShopItemInfo(2, 4800, 1300, 260))
		.build()
	),
	LEPRECHAUN_LARRY_S_FARMING_SUPPLIES("Leprechaun Larry's Farming Supplies.", new ShopRates(1.3, 0.4, 0.1), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAKE, new ShopItemInfo(6, 6000, 7, 2))
		.put(ItemID.SEED_DIBBER, new ShopItemInfo(4, 6000, 7, 2))
		.put(ItemID.SECATEURS, new ShopItemInfo(1, 6000, 6, 2))
		.put(ItemID.SPADE, new ShopItemInfo(3, 6000, 3, 1))
		.put(ItemID.GARDENING_TROWEL, new ShopItemInfo(2, 6000, 15, 4))
		.put(ItemID.WATERING_CAN, new ShopItemInfo(2, 6000, 10, 3))
		.put(ItemID.COMPOST, new ShopItemInfo(2, 6000, 26, 8))
		.put(ItemID.COMPOST_PACK, new ShopItemInfo(10, 30000, 2600, 800))
		.put(ItemID.PLANT_CURE, new ShopItemInfo(5, 1800, 52, 16))
		.put(ItemID.COCKTAIL_GLASS, new ShopItemInfo(523, 6000000, 1, 0))
		.put(ItemID.ROCK_1480, new ShopItemInfo(3, 6000000, 1, 0))
		.build()
	),
	LLETYA_ARCHERY_SHOP("Lletya Archery Shop", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.IRON_ARROW, new ShopItemInfo(2000, 6000, 3, 1))
		.put(ItemID.STEEL_ARROW, new ShopItemInfo(500, 24000, 15, 4))
		.put(ItemID.MITHRIL_ARROW, new ShopItemInfo(500, 36000, 41, 12))
		.put(ItemID.ADAMANT_ARROW, new ShopItemInfo(450, 72000, 104, 32))
		.put(ItemID.RUNE_ARROW, new ShopItemInfo(400, 78000, 520, 160))
		.put(ItemID.BRONZE_BOLTS, new ShopItemInfo(1500, 6000, 1, 0))
		.put(ItemID.OAK_SHORTBOW, new ShopItemInfo(5, 120000, 130, 40))
		.put(ItemID.OAK_LONGBOW, new ShopItemInfo(5, 120000, 208, 64))
		.put(ItemID.CROSSBOW, new ShopItemInfo(5, 240000, 91, 28))
		.put(ItemID.WILLOW_SHORTBOW, new ShopItemInfo(5, 42000, 260, 80))
		.put(ItemID.WILLOW_LONGBOW, new ShopItemInfo(5, 42000, 416, 128))
		.build()
	),
	LLETYA_FOOD_STORE("Lletya Food Store", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BREAD, new ShopItemInfo(10, 120000, 15, 4))
		.put(ItemID.LOBSTER, new ShopItemInfo(15, 120000, 91, 28))
		.put(ItemID.JUG_OF_WINE, new ShopItemInfo(3, 300000, 1, 0))
		.put(ItemID.CHEESE, new ShopItemInfo(10, 120000, 5, 1))
		.put(ItemID.CAKE, new ShopItemInfo(5, 120000, 65, 20))
		.build()
	),
	LLETYA_SEAMSTRESS("Lletya Seamstress", new ShopRates(1.3, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.THREAD, new ShopItemInfo(8, 60000, 1, 0))
		.put(ItemID.NEEDLE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.BALL_OF_WOOL, new ShopItemInfo(5, 60000, 2, 1))
		.put(ItemID.RED_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.YELLOW_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.BLUE_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.ORANGE_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.GREEN_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.PURPLE_DYE, new ShopItemInfo(10, 60000, 6, 2))
		.build()
	),
	LOGAVA_GRICOLLER_S_COOKING_SUPPLIES("Logava Gricoller's Cooking Supplies", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PIE_DISH, new ShopItemInfo(5, 12000, 3, 1))
		.put(ItemID.CAKE_TIN, new ShopItemInfo(5, 12000, 10, 5))
		.put(ItemID.BOWL, new ShopItemInfo(2, 120000, 4, 2))
		.put(ItemID.TINDERBOX, new ShopItemInfo(3, 12000, 1, 0))
		.put(ItemID.JUG, new ShopItemInfo(3, 12000, 1, 0))
		.put(ItemID.EMPTY_JUG_PACK, new ShopItemInfo(4, 6000, 140, 77))
		.put(ItemID.POT, new ShopItemInfo(12, 15000, 1, 0))
		.put(ItemID.EMPTY_CUP, new ShopItemInfo(3, 12000, 2, 1))
		.put(ItemID.KNIFE, new ShopItemInfo(3, 9000, 6, 3))
		.put(ItemID.BALL_OF_WOOL, new ShopItemInfo(30, 3000, 2, 1))
		.put(ItemID.POTATO, new ShopItemInfo(5, 120000, 1, 0))
		.put(ItemID.COOKING_APPLE, new ShopItemInfo(2, 120000, 1, 0))
		.put(ItemID.BREAD, new ShopItemInfo(2, 30000, 12, 6))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(1, 60000, 10, 5))
		.put(ItemID.CHEESE, new ShopItemInfo(3, 60000, 4, 2))
		.put(ItemID.POT_OF_FLOUR, new ShopItemInfo(8, 60000, 10, 5))
		.build()
	),
	LOUIE_S_ARMOURED_LEGS_BAZAAR("Louie's Armoured Legs Bazaar.", new ShopRates(1.0, 0.65, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_PLATELEGS, new ShopItemInfo(5, 60000, 80, 52))
		.put(ItemID.IRON_PLATELEGS, new ShopItemInfo(3, 240000, 280, 182))
		.put(ItemID.STEEL_PLATELEGS, new ShopItemInfo(2, 540000, 1000, 650))
		.put(ItemID.BLACK_PLATELEGS, new ShopItemInfo(1, 720000, 1920, 1248))
		.put(ItemID.MITHRIL_PLATELEGS, new ShopItemInfo(1, 1200000, 2600, 1690))
		.put(ItemID.ADAMANT_PLATELEGS, new ShopItemInfo(1, 7800000, 6400, 4160))
		.build()
	),
	LOVECRAFT_S_TACKLE("Lovecraft's Tackle", new ShopRates(1.0, 0.5, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SMALL_FISHING_NET, new ShopItemInfo(5, 60000, 5, 2))
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 5, 2))
		.put(ItemID.FLY_FISHING_ROD, new ShopItemInfo(5, 60000, 5, 2))
		.put(ItemID.HARPOON, new ShopItemInfo(2, 240000, 5, 2))
		.put(ItemID.LOBSTER_POT, new ShopItemInfo(2, 240000, 20, 10))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(1500, 600, 3, 1))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(80, 3000, 300, 150))
		.put(ItemID.FEATHER, new ShopItemInfo(1000, 600, 2, 1))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(100, 1200, 200, 100))
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(0, 180000, 5, 2))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(200, 600, 10, 5))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(0, 540000, 10, 5))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(0, 720000, 15, 7))
		.put(ItemID.RAW_TROUT, new ShopItemInfo(0, 900000, 10, 5))
		.put(ItemID.RAW_PIKE, new ShopItemInfo(0, 1080000, 20, 10))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(0, 1260000, 30, 15))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(0, 1380000, 40, 20))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(0, 1560000, 70, 35))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(0, 1740000, 80, 40))
		.build()
	),
	LOWE_S_ARCHERY_EMPORIUM("Lowe's Archery Emporium", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_ARROW, new ShopItemInfo(2000, 6000, 1, 0))
		.put(ItemID.IRON_ARROW, new ShopItemInfo(1500, 9000, 3, 1))
		.put(ItemID.STEEL_ARROW, new ShopItemInfo(1000, 12000, 12, 6))
		.put(ItemID.MITHRIL_ARROW, new ShopItemInfo(800, 9000, 32, 17))
		.put(ItemID.ADAMANT_ARROW, new ShopItemInfo(600, 12000, 80, 44))
		.put(ItemID.BRONZE_BOLTS, new ShopItemInfo(1500, 6000, 0, 0))
		.put(ItemID.SHORTBOW, new ShopItemInfo(4, 60000, 50, 27))
		.put(ItemID.LONGBOW, new ShopItemInfo(4, 60000, 80, 44))
		.put(ItemID.OAK_SHORTBOW, new ShopItemInfo(3, 120000, 100, 55))
		.put(ItemID.OAK_LONGBOW, new ShopItemInfo(3, 120000, 160, 88))
		.put(ItemID.WILLOW_SHORTBOW, new ShopItemInfo(2, 120000, 200, 110))
		.put(ItemID.WILLOW_LONGBOW, new ShopItemInfo(2, 120000, 320, 176))
		.put(ItemID.MAPLE_SHORTBOW, new ShopItemInfo(1, 60000, 400, 220))
		.put(ItemID.MAPLE_LONGBOW, new ShopItemInfo(1, 60000, 640, 352))
		.put(ItemID.CROSSBOW, new ShopItemInfo(2, 240000, 70, 38))
		.build()
	),
	LUNDAIL_S_ARENASIDE_RUNE_SHOP("Lundail's Arena-side Rune Shop.", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(200, 30000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(200, 30000, 4, 2))
		.put(ItemID.AIR_RUNE, new ShopItemInfo(200, 30000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(200, 30000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(140, 30000, 3, 1))
		.put(ItemID.BODY_RUNE, new ShopItemInfo(140, 30000, 3, 1))
		.put(ItemID.NATURE_RUNE, new ShopItemInfo(250, 18000, 180, 108))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(250, 6000, 90, 54))
		.put(ItemID.LAW_RUNE, new ShopItemInfo(250, 18000, 240, 144))
		.put(ItemID.COSMIC_RUNE, new ShopItemInfo(20, 60000, 50, 30))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(250, 9000, 180, 108))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(5, 24000, 430, 258))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(5, 24000, 430, 258))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(5, 24000, 430, 258))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(5, 24000, 430, 258))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(4, 24000, 330, 198))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(3, 24000, 9950, 5970))
		.build()
	),
	MAGIC_GUILD_STORE_MYSTIC_ROBES("Magic Guild Store (Mystic Robes)", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.MYSTIC_HAT, new ShopItemInfo(1000, 60000, 15000, 9000))
		.put(ItemID.MYSTIC_ROBE_TOP, new ShopItemInfo(1000, 60000, 120000, 72000))
		.put(ItemID.MYSTIC_ROBE_BOTTOM, new ShopItemInfo(1000, 60000, 80000, 48000))
		.put(ItemID.MYSTIC_GLOVES, new ShopItemInfo(1000, 60000, 10000, 6000))
		.put(ItemID.MYSTIC_BOOTS, new ShopItemInfo(1000, 60000, 10000, 6000))
		.build()
	),
	MAGIC_GUILD_STORE_RUNES_AND_STAVES("Magic Guild Store (Runes and Staves)", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.AIR_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.BODY_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(250, 6000, 90, 54))
		.put(ItemID.NATURE_RUNE, new ShopItemInfo(250, 18000, 180, 108))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(250, 9000, 180, 108))
		.put(ItemID.LAW_RUNE, new ShopItemInfo(250, 18000, 240, 144))
		.put(ItemID.BLOOD_RUNE, new ShopItemInfo(250, 18000, 400, 240))
		.put(ItemID.SOUL_RUNE, new ShopItemInfo(250, 6000, 300, 180))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(40, 6000, 330, 198))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(35, 6000, 9950, 5970))
		.put(ItemID.BATTLESTAFF, new ShopItemInfo(5, 54000, 7000, 4200))
		.put(ItemID.STAFF_OF_FIRE, new ShopItemInfo(2, 600000, 1500, 900))
		.put(ItemID.STAFF_OF_WATER, new ShopItemInfo(2, 600000, 1500, 900))
		.put(ItemID.STAFF_OF_AIR, new ShopItemInfo(2, 600000, 1500, 900))
		.put(ItemID.STAFF_OF_EARTH, new ShopItemInfo(2, 600000, 1500, 900))
		.build()
	),
	MILTOG_S_LAMPS("Miltog's Lamps", new ShopRates(1.5, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.UNLIT_TORCH, new ShopItemInfo(15, 60000, 6, 1))
		.put(ItemID.EMPTY_OIL_LAMP, new ShopItemInfo(4, 60000, 37, 10))
		.put(ItemID.EMPTY_OIL_LANTERN, new ShopItemInfo(2, 60000, 180, 48))
		.put(ItemID.BULLSEYE_LANTERN_EMPTY, new ShopItemInfo(1, 60000, 600, 160))
		.put(ItemID.MINING_HELMET, new ShopItemInfo(1, 60000, 900, 240))
		.put(ItemID.TINDERBOX, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.LIGHT_ORB, new ShopItemInfo(0, 60000, 525, 140))
		.put(ItemID.OIL_LAMP, new ShopItemInfo(0, 60000, 42, 11))
		.put(ItemID.OIL_LANTERN, new ShopItemInfo(0, 60000, 187, 50))
		.put(ItemID.BULLSEYE_LANTERN, new ShopItemInfo(0, 60000, 630, 168))
		.build()
	),
	MISCELLANIAN_CLOTHES_SHOP("Miscellanian Clothes Shop", new ShopRates(1.0, 0.55, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FREMENNIK_BROWN_SHIRT, new ShopItemInfo(5, 60000, 250, 137))
		.put(ItemID.FREMENNIK_GREY_SHIRT, new ShopItemInfo(5, 60000, 250, 137))
		.put(ItemID.FREMENNIK_BEIGE_SHIRT, new ShopItemInfo(5, 60000, 250, 137))
		.put(ItemID.FREMENNIK_RED_SHIRT, new ShopItemInfo(5, 60000, 250, 137))
		.put(ItemID.FREMENNIK_BLUE_SHIRT, new ShopItemInfo(5, 60000, 250, 137))
		.put(ItemID.FREMENNIK_ROBE, new ShopItemInfo(5, 60000, 500, 275))
		.put(ItemID.FREMENNIK_SKIRT, new ShopItemInfo(5, 60000, 500, 275))
		.put(ItemID.SKIRT_5050, new ShopItemInfo(3, 30000, 550, 302))
		.put(ItemID.SKIRT_5052, new ShopItemInfo(3, 30000, 625, 343))
		.put(ItemID.TROUSERS_5038, new ShopItemInfo(3, 24000, 700, 385))
		.put(ItemID.TROUSERS_5040, new ShopItemInfo(3, 24000, 750, 412))
		.put(ItemID.SHORTS_5044, new ShopItemInfo(3, 21000, 360, 198))
		.put(ItemID.SHORTS_5046, new ShopItemInfo(3, 21000, 390, 214))
		.put(ItemID.WOVEN_TOP_5026, new ShopItemInfo(3, 33000, 625, 343))
		.put(ItemID.WOVEN_TOP_5028, new ShopItemInfo(3, 33000, 650, 357))
		.put(ItemID.SHIRT_5032, new ShopItemInfo(3, 30000, 600, 330))
		.put(ItemID.SHIRT_5034, new ShopItemInfo(3, 30000, 625, 343))
		.build()
	),
	MISCELLANIAN_FOOD_SHOP("Miscellanian Food Shop", new ShopRates(1.0, 0.55, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BREAD, new ShopItemInfo(5, 30000, 12, 6))
		.put(ItemID.CHEESE, new ShopItemInfo(5, 60000, 4, 2))
		.put(ItemID.CABBAGE, new ShopItemInfo(5, 60000, 1, 0))
		.put(ItemID.POTATO, new ShopItemInfo(5, 60000, 1, 0))
		.put(ItemID.ONION, new ShopItemInfo(5, 60000, 3, 1))
		.put(ItemID.POT_OF_FLOUR, new ShopItemInfo(5, 60000, 10, 5))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(2, 60000, 10, 5))
		.put(ItemID.BUCKET_OF_MILK, new ShopItemInfo(5, 60000, 6, 3))
		.build()
	),
	MOUNT_KARUULM_WEAPON_SHOP("Mount Karuulm Weapon Shop", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.STEEL_SPEAR, new ShopItemInfo(2, 120000, 325, 195))
		.put(ItemID.MITHRIL_SPEAR, new ShopItemInfo(1, 1800000, 845, 507))
		.put(ItemID.ADAMANT_SPEAR, new ShopItemInfo(1, 3000000, 2080, 1248))
		.put(ItemID.RUNE_SPEAR, new ShopItemInfo(1, 4800000, 20800, 12480))
		.put(ItemID.STEEL_BATTLEAXE, new ShopItemInfo(2, 120000, 650, 390))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(1, 1800000, 1690, 1014))
		.put(ItemID.ADAMANT_BATTLEAXE, new ShopItemInfo(1, 3000000, 4160, 2496))
		.put(ItemID.STEEL_WARHAMMER, new ShopItemInfo(2, 120000, 640, 384))
		.put(ItemID.MITHRIL_WARHAMMER, new ShopItemInfo(1, 1800000, 1660, 996))
		.put(ItemID.ADAMANT_WARHAMMER, new ShopItemInfo(1, 3000000, 4120, 2472))
		.build()
	),
	MYTHS__GUILD_ARMOURY("Myths' Guild Armoury", new ShopRates(1.5, 0.5, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SHIELD_RIGHT_HALF, new ShopItemInfo(1, 300000, 750000, 250000))
		.put(ItemID.DRAGON_METAL_SHARD, new ShopItemInfo(1, 300000, 1800000, 600000))
		.build()
	),
	MYTHS__GUILD_HERBALIST("Myths' Guild Herbalist", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PESTLE_AND_MORTAR, new ShopItemInfo(5, 60000, 4, 2))
		.put(ItemID.VIAL_OF_WATER, new ShopItemInfo(45, 60000, 2, 1))
		.put(ItemID.WATERFILLED_VIAL_PACK, new ShopItemInfo(15, 30000, 201, 140))
		.put(ItemID.VIAL, new ShopItemInfo(50, 60000, 2, 1))
		.put(ItemID.EMPTY_VIAL_PACK, new ShopItemInfo(10, 30000, 200, 140))
		.put(ItemID.EYE_OF_NEWT, new ShopItemInfo(50, 12000, 3, 2))
		.put(ItemID.EYE_OF_NEWT_PACK, new ShopItemInfo(20, 60000, 300, 210))
		.build()
	),
	MYTHS__GUILD_WEAPONRY("Myths' Guild Weaponry", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.DRAGON_DAGGER, new ShopItemInfo(2, 300000, 30000, 18000))
		.put(ItemID.DRAGON_LONGSWORD, new ShopItemInfo(2, 300000, 100000, 60000))
		.put(ItemID.DRAGON_MACE, new ShopItemInfo(2, 300000, 50000, 30000))
		.put(ItemID.DRAGON_BATTLEAXE, new ShopItemInfo(2, 300000, 200000, 120000))
		.build()
	),
	NARDAH_HUNTER_SHOP("Nardah Hunter Shop.", new ShopRates(1.2, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BUTTERFLY_NET, new ShopItemInfo(5, 6000, 24, 14))
		.put(ItemID.BUTTERFLY_JAR, new ShopItemInfo(100, 6000, 1, 0))
		.put(ItemID.MAGIC_BOX, new ShopItemInfo(30, 30000, 720, 420))
		.put(ItemID.NOOSE_WAND, new ShopItemInfo(50, 3000, 4, 2))
		.put(ItemID.BIRD_SNARE, new ShopItemInfo(50, 3000, 6, 3))
		.put(ItemID.BOX_TRAP, new ShopItemInfo(25, 6000, 38, 22))
		.put(ItemID.TEASING_STICK, new ShopItemInfo(5, 6000, 60, 35))
		.put(ItemID.UNLIT_TORCH, new ShopItemInfo(20, 6000, 4, 2))
		.put(ItemID.RABBIT_SNARE, new ShopItemInfo(10, 6000, 18, 10))
		.put(ItemID.BIRD_SNARE_PACK, new ShopItemInfo(3, 6000, 606, 353))
		.put(ItemID.BOX_TRAP_PACK, new ShopItemInfo(3, 6000, 3840, 2240))
		.put(ItemID.MAGIC_IMP_BOX_PACK, new ShopItemInfo(3, 6000, 72000, 42000))
		.build()
	),
	NARDOK_S_BONE_WEAPONS("Nardok's Bone Weapons", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BONE_CLUB, new ShopItemInfo(10, 12000, 600, 360))
		.put(ItemID.BONE_SPEAR, new ShopItemInfo(10, 12000, 600, 360))
		.put(ItemID.BONE_DAGGER, new ShopItemInfo(5, 12000, 2000, 1200))
		.put(ItemID.DORGESHUUN_CROSSBOW, new ShopItemInfo(5, 12000, 2000, 1200))
		.put(ItemID.BONE_BOLTS, new ShopItemInfo(1000, 12000, 3, 1))
		.put(ItemID.BONE_BOLT_PACK, new ShopItemInfo(80, 6000, 350, 210))
		.build()
	),
	NATHIFA_S_BAKE_STALL("Nathifa's Bake Stall.", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BREAD, new ShopItemInfo(10, 60000, 12, 6))
		.put(ItemID.CAKE, new ShopItemInfo(3, 480000, 50, 27))
		.put(ItemID.CHOCOLATE_SLICE, new ShopItemInfo(8, 120000, 30, 16))
		.put(ItemID.WATERSKIN4, new ShopItemInfo(50, 60000, 30, 16))
		.build()
	),
	NED_S_HANDMADE_ROPE_100_WOOL__NOT_YAK_HONEST("Ned's Handmade Rope (100% Wool - not yak, honest!)", new ShopRates(1.0, 0.2, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.ROPE, new ShopItemInfo(30, 1800, 18, 3))
		.build()
	),
	NEIL_S_WILDERNESS_CAPE_SHOP("Neil's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM7_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM17_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM27_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM37_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM47_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	NEITIZNOT_SUPPLIES("Neitiznot supplies.", new ShopRates(1.05, 0.25, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.KNIFE, new ShopItemInfo(10, 6000, 6, 1))
		.put(ItemID.HAMMER, new ShopItemInfo(10, 6000, 1, 0))
		.put(ItemID.THREAD, new ShopItemInfo(10, 6000, 1, 0))
		.put(ItemID.NEEDLE, new ShopItemInfo(10, 6000, 1, 0))
		.put(ItemID.BRONZE_AXE, new ShopItemInfo(10, 6000, 16, 4))
		.put(ItemID.BALL_OF_WOOL, new ShopItemInfo(100, 6000, 2, 0))
		.build()
	),
	NURMOF_S_PICKAXE_SHOP("Nurmof's Pickaxe Shop.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_PICKAXE, new ShopItemInfo(6, 30000, 1, 0))
		.put(ItemID.IRON_PICKAXE, new ShopItemInfo(5, 60000, 140, 84))
		.put(ItemID.STEEL_PICKAXE, new ShopItemInfo(4, 120000, 500, 300))
		.put(ItemID.MITHRIL_PICKAXE, new ShopItemInfo(3, 180000, 1300, 780))
		.put(ItemID.ADAMANT_PICKAXE, new ShopItemInfo(2, 300000, 3200, 1920))
		.put(ItemID.RUNE_PICKAXE, new ShopItemInfo(1, 420000, 32000, 19200))
		.build()
	),
	SHOP_OF_DISTASTE("Shop of Distaste", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.ROTTEN_TOMATO, new ShopItemInfo(2000, 6000, 1, 0))
		.build()
	),
	OOBAPOHK_S_JAVELIN_STORE("Oobapohk's Javelin Store", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_JAVELIN, new ShopItemInfo(500, 12000, 4, 2))
		.put(ItemID.IRON_JAVELIN, new ShopItemInfo(500, 12000, 6, 3))
		.put(ItemID.STEEL_JAVELIN, new ShopItemInfo(500, 24000, 24, 14))
		.put(ItemID.MITHRIL_JAVELIN, new ShopItemInfo(500, 36000, 64, 38))
		.put(ItemID.ADAMANT_JAVELIN, new ShopItemInfo(500, 48000, 160, 96))
		.put(ItemID.RUNE_JAVELIN, new ShopItemInfo(500, 60000, 400, 240))
		.build()
	),
	ORE_SELLER("Ore seller.", new ShopRates(1.5, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.COPPER_ORE, new ShopItemInfo(100, 60000000, 4, 1))
		.put(ItemID.TIN_ORE, new ShopItemInfo(100, 60000000, 4, 1))
		.put(ItemID.IRON_ORE, new ShopItemInfo(100, 60000000, 25, 6))
		.put(ItemID.MITHRIL_ORE, new ShopItemInfo(100, 60000000, 243, 64))
		.put(ItemID.SILVER_ORE, new ShopItemInfo(100, 60000000, 112, 30))
		.put(ItemID.GOLD_ORE, new ShopItemInfo(100, 60000000, 225, 60))
		.put(ItemID.COAL, new ShopItemInfo(100, 60000000, 67, 18))
		.build()
	),
	ORE_STORE("Ore store", new ShopRates(1.1, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.COPPER_ORE, new ShopItemInfo(20, 6000, 3, 2))
		.put(ItemID.TIN_ORE, new ShopItemInfo(10, 6000, 3, 2))
		.put(ItemID.IRON_ORE, new ShopItemInfo(10, 6000, 18, 11))
		.put(ItemID.SILVER_ORE, new ShopItemInfo(5, 6000, 82, 52))
		.put(ItemID.COAL, new ShopItemInfo(10, 6000, 49, 31))
		.put(ItemID.GOLD_ORE, new ShopItemInfo(5, 6000, 165, 105))
		.put(ItemID.MITHRIL_ORE, new ShopItemInfo(0, 6000, 178, 113))
		.put(ItemID.ADAMANTITE_ORE, new ShopItemInfo(0, 6000, 440, 280))
		.build()
	),
	OZIACH_SHOP("Oziach (shop)", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RUNE_PLATEBODY, new ShopItemInfo(2, 300000, 84500, 26000))
		.put(ItemID.GREEN_DHIDE_BODY, new ShopItemInfo(2, 300000, 10140, 3120))
		.put(ItemID.ANTIDRAGON_SHIELD, new ShopItemInfo(35, 600, 26, 8))
		.build()
	),
	PELTERS__VEG_STALL("Pelters' Veg Stall", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.ROTTEN_TOMATO, new ShopItemInfo(2000, 6000, 1, 0))
		.build()
	),
	PERRY_S_CHOPCHOP_SHOP("Perry's Chop-chop Shop", new ShopRates(3.2, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_AXE, new ShopItemInfo(4, 4200, 51, 9))
		.put(ItemID.IRON_AXE, new ShopItemInfo(3, 6000, 179, 33))
		.put(ItemID.STEEL_AXE, new ShopItemInfo(2, 9000, 640, 120))
		.put(ItemID.MITHRIL_AXE, new ShopItemInfo(1, 15000, 1664, 312))
		.put(ItemID.ADAMANT_AXE, new ShopItemInfo(1, 24000, 4096, 768))
		.put(ItemID.RUNE_AXE, new ShopItemInfo(1, 60000, 40960, 7680))
		.put(ItemID.TINDERBOX, new ShopItemInfo(2, 1800, 3, 0))
		.build()
	),
	PICKAXE_IS_MINE("Pickaxe-Is-Mine", new ShopRates(1.3, 0.55, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_PICKAXE, new ShopItemInfo(6, 30000, 1, 0))
		.put(ItemID.STEEL_PICKAXE, new ShopItemInfo(4, 120000, 650, 275))
		.put(ItemID.MITHRIL_PICKAXE, new ShopItemInfo(3, 180000, 1690, 715))
		.put(ItemID.ADAMANT_PICKAXE, new ShopItemInfo(2, 300000, 4160, 1760))
		.put(ItemID.RUNE_PICKAXE, new ShopItemInfo(1, 360000, 41600, 17600))
		.build()
	),
	PIE_SHOP("Pie Shop", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PIE_RECIPE_BOOK, new ShopItemInfo(50, 30000, 5, 2))
		.put(ItemID.REDBERRY_PIE, new ShopItemInfo(5, 60000, 12, 6))
		.put(ItemID.MEAT_PIE, new ShopItemInfo(4, 60000, 15, 8))
		.put(ItemID.MUD_PIE, new ShopItemInfo(0, 60000, 54, 29))
		.put(ItemID.APPLE_PIE, new ShopItemInfo(3, 60000, 30, 16))
		.put(ItemID.GARDEN_PIE, new ShopItemInfo(2, 60000, 24, 13))
		.put(ItemID.FISH_PIE, new ShopItemInfo(1, 60000, 100, 55))
		.put(ItemID.ADMIRAL_PIE, new ShopItemInfo(0, 60000, 310, 170))
		.put(ItemID.WILD_PIE, new ShopItemInfo(0, 60000, 182, 100))
		.put(ItemID.SUMMER_PIE, new ShopItemInfo(0, 60000, 140, 77))
		.build()
	),
	PRIFDDINAS_FOODSTUFFS("Prifddinas Foodstuffs", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.POT_OF_FLOUR, new ShopItemInfo(3, 60000, 10, 7))
		.put(ItemID.BUCKET_OF_MILK, new ShopItemInfo(3, 60000, 6, 4))
		.put(ItemID.COD, new ShopItemInfo(3, 60000, 10, 7))
		.put(ItemID.TROUT, new ShopItemInfo(3, 60000, 10, 7))
		.put(ItemID.BASS, new ShopItemInfo(3, 60000, 40, 28))
		.put(ItemID.STEW, new ShopItemInfo(10, 60000, 20, 14))
		.put(ItemID.BREAD, new ShopItemInfo(10, 60000, 12, 8))
		.put(ItemID.CHEESE, new ShopItemInfo(10, 60000, 4, 2))
		.put(ItemID.POTATO, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.ONION, new ShopItemInfo(10, 60000, 3, 2))
		.put(ItemID.TOMATO, new ShopItemInfo(10, 60000, 4, 2))
		.put(ItemID.CABBAGE, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.BANANA, new ShopItemInfo(10, 60000, 2, 1))
		.put(ItemID.REDBERRIES, new ShopItemInfo(3, 60000, 3, 2))
		.put(ItemID.RAW_BEEF, new ShopItemInfo(5, 60000, 1, 0))
		.put(ItemID.RAW_CHICKEN, new ShopItemInfo(5, 60000, 1, 0))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(10, 60000, 10, 7))
		.put(ItemID.CAKE, new ShopItemInfo(5, 60000, 50, 35))
		.build()
	),
	PRIFDDINAS_GEM_STALL("Prifddinas Gem Stall", new ShopRates(1.0, 0.8, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SAPPHIRE, new ShopItemInfo(2, 9000000, 250, 200))
		.put(ItemID.EMERALD, new ShopItemInfo(1, 21000000, 500, 400))
		.put(ItemID.RUBY, new ShopItemInfo(1, 36000000, 1000, 800))
		.put(ItemID.DIAMOND, new ShopItemInfo(0, 2400000, 2000, 1600))
		.build()
	),
	PRIFDDINAS_HERBAL_SUPPLIES("Prifddinas Herbal Supplies", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PESTLE_AND_MORTAR, new ShopItemInfo(3, 60000, 4, 2))
		.put(ItemID.VIAL, new ShopItemInfo(100, 300000, 2, 1))
		.put(ItemID.VIAL_OF_WATER, new ShopItemInfo(100, 300000, 2, 1))
		.put(ItemID.EYE_OF_NEWT, new ShopItemInfo(50, 6000, 3, 2))
		.put(ItemID.EMPTY_VIAL_PACK, new ShopItemInfo(100, 60000, 200, 140))
		.put(ItemID.WATERFILLED_VIAL_PACK, new ShopItemInfo(100, 60000, 201, 140))
		.put(ItemID.EYE_OF_NEWT_PACK, new ShopItemInfo(50, 60000, 300, 210))
		.build()
	),
	PRIFDDINAS_SILVER_STALL("Prifddinas Silver Stall", new ShopRates(1.0, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.UNSTRUNG_SYMBOL, new ShopItemInfo(2, 60000, 200, 140))
		.put(ItemID.SILVER_ORE, new ShopItemInfo(1, 1200000, 75, 52))
		.put(ItemID.SILVER_BAR, new ShopItemInfo(1, 600000, 150, 105))
		.build()
	),
	PRIFDDINAS_SPICE_STALL("Prifddinas Spice Stall", new ShopRates(1.0, 0.7, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SPICE, new ShopItemInfo(1, 60000, 230, 161))
		.put(ItemID.KNIFE, new ShopItemInfo(1, 1200, 6, 4))
		.put(ItemID.GARLIC, new ShopItemInfo(2, 3000, 3, 2))
		.build()
	),
	PRIFDDINAS__SEAMSTRESS("Prifddinas' Seamstress", new ShopRates(1.3, 0.4, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.THREAD, new ShopItemInfo(100, 3000, 1, 0))
		.put(ItemID.NEEDLE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.BALL_OF_WOOL, new ShopItemInfo(20, 60000, 2, 0))
		.put(ItemID.SILK, new ShopItemInfo(5, 60000, 39, 12))
		.put(ItemID.FUR, new ShopItemInfo(3, 60000, 13, 4))
		.put(ItemID.BEAR_FUR, new ShopItemInfo(3, 6000, 13, 4))
		.put(ItemID.GREY_WOLF_FUR, new ShopItemInfo(3, 60000, 65, 20))
		.put(ItemID.POLAR_KEBBIT_FUR, new ShopItemInfo(0, 60000, 13, 4))
		.put(ItemID.COMMON_KEBBIT_FUR, new ShopItemInfo(0, 60000, 15, 4))
		.put(ItemID.FELDIP_WEASEL_FUR, new ShopItemInfo(0, 60000, 18, 5))
		.put(ItemID.DESERT_DEVIL_FUR, new ShopItemInfo(0, 60000, 22, 6))
		.put(ItemID.TATTY_LARUPIA_FUR, new ShopItemInfo(0, 60000, 78, 24))
		.put(ItemID.LARUPIA_FUR, new ShopItemInfo(0, 60000, 104, 32))
		.put(ItemID.TATTY_GRAAHK_FUR, new ShopItemInfo(0, 60000, 117, 36))
		.put(ItemID.GRAAHK_FUR, new ShopItemInfo(0, 60000, 156, 48))
		.put(ItemID.TATTY_KYATT_FUR, new ShopItemInfo(0, 60000, 156, 48))
		.put(ItemID.KYATT_FUR, new ShopItemInfo(0, 60000, 208, 64))
		.build()
	),
	QUALITY_ARMOUR_SHOP("Quality Armour Shop", new ShopRates(1.3, 0.55, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.STEEL_CHAINBODY, new ShopItemInfo(3, 240000, 975, 412))
		.put(ItemID.MITHRIL_CHAINBODY, new ShopItemInfo(1, 1800000, 2535, 1072))
		.put(ItemID.BLACK_CHAINBODY, new ShopItemInfo(1, 1500000, 1872, 792))
		.put(ItemID.ADAMANT_CHAINBODY, new ShopItemInfo(1, 5400000, 6240, 2640))
		.put(ItemID.STEEL_MED_HELM, new ShopItemInfo(3, 240000, 390, 165))
		.put(ItemID.MITHRIL_MED_HELM, new ShopItemInfo(1, 1800000, 1014, 429))
		.put(ItemID.ADAMANT_MED_HELM, new ShopItemInfo(1, 7200000, 2496, 1056))
		.put(ItemID.STEEL_SQ_SHIELD, new ShopItemInfo(0, 900000, 780, 330))
		.put(ItemID.BLACK_KITESHIELD, new ShopItemInfo(0, 900000, 2121, 897))
		.build()
	),
	QUALITY_WEAPONS_SHOP("Quality Weapons Shop", new ShopRates(1.3, 0.55, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.STEEL_BATTLEAXE, new ShopItemInfo(2, 120000, 845, 357))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(1, 1800000, 2197, 929))
		.put(ItemID.MITHRIL_SWORD, new ShopItemInfo(3, 1800000, 1098, 464))
		.put(ItemID.ADAMANT_SWORD, new ShopItemInfo(2, 7200000, 2704, 1144))
		.put(ItemID.STEEL_SCIMITAR, new ShopItemInfo(2, 360000, 520, 220))
		.put(ItemID.BLACK_LONGSWORD, new ShopItemInfo(2, 900000, 1248, 528))
		.put(ItemID.RUNE_LONGSWORD, new ShopItemInfo(1, 2400000, 41600, 17600))
		.put(ItemID.MAPLE_SHORTBOW, new ShopItemInfo(1, 60000, 520, 220))
		.put(ItemID.MAPLE_LONGBOW, new ShopItemInfo(1, 60000, 832, 352))
		.put(ItemID.MITHRIL_ARROW, new ShopItemInfo(800, 9000, 41, 17))
		.put(ItemID.ADAMANT_ARROW, new ShopItemInfo(600, 12000, 104, 44))
		.build()
	),
	RAETUL_AND_CO_S_CLOTH_STORE("Raetul and Co's Cloth Store.", new ShopRates(1.0, 0.75, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.LINEN, new ShopItemInfo(20, 18000, 30, 22))
		.put(ItemID.DESERT_SHIRT, new ShopItemInfo(20, 30000, 40, 30))
		.put(ItemID.DESERT_ROBE, new ShopItemInfo(20, 30000, 40, 30))
		.put(ItemID.DESERT_BOOTS, new ShopItemInfo(20, 30000, 20, 15))
		.put(ItemID.SILK, new ShopItemInfo(10, 24000, 30, 22))
		.put(ItemID.THREAD, new ShopItemInfo(50, 42000, 1, 0))
		.put(ItemID.NEEDLE, new ShopItemInfo(20, 30000, 1, 0))
		.build()
	),
	RANAEL_S_SUPER_SKIRT_STORE("Ranael's Super Skirt Store.", new ShopRates(1.0, 0.65, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_PLATESKIRT, new ShopItemInfo(5, 60000, 80, 52))
		.put(ItemID.IRON_PLATESKIRT, new ShopItemInfo(3, 240000, 280, 182))
		.put(ItemID.STEEL_PLATESKIRT, new ShopItemInfo(2, 540000, 1000, 650))
		.put(ItemID.BLACK_PLATESKIRT, new ShopItemInfo(1, 720000, 1920, 1248))
		.put(ItemID.MITHRIL_PLATESKIRT, new ShopItemInfo(1, 1200000, 2600, 1690))
		.put(ItemID.ADAMANT_PLATESKIRT, new ShopItemInfo(1, 7800000, 6400, 4160))
		.build()
	),
	RAZMIRE_BUILDERS_MERCHANTS("Razmire Builders Merchants.", new ShopRates(1.05, 0.95, 0.04), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.LIMESTONE, new ShopItemInfo(1000, 6000, 10, 9))
		.put(ItemID.LIMESTONE_BRICK, new ShopItemInfo(1000, 6000, 21, 19))
		.put(ItemID.TIMBER_BEAM, new ShopItemInfo(1000, 6000, 1, 0))
		.put(ItemID.SWAMP_PASTE, new ShopItemInfo(1000, 6000, 31, 28))
		.put(ItemID.PLANK, new ShopItemInfo(10, 600000, 1, 0))
		.build()
	),
	RELDAK_S_LEATHER_ARMOUR("Reldak's Leather Armour", new ShopRates(1.0, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FROGLEATHER_BODY, new ShopItemInfo(50, 60000, 1000, 400))
		.put(ItemID.FROGLEATHER_CHAPS, new ShopItemInfo(50, 60000, 900, 360))
		.put(ItemID.FROGLEATHER_BOOTS, new ShopItemInfo(50, 60000, 200, 80))
		.build()
	),
	RELLEKKA_LONGHALL_BAR("Rellekka Longhall Bar", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEER, new ShopItemInfo(50, 6000, 2, 1))
		.put(ItemID.BEER_TANKARD, new ShopItemInfo(50, 6000, 26, 14))
		.put(ItemID.KEG_OF_BEER, new ShopItemInfo(20, 6000, 325, 175))
		.build()
	),
	RICHARD_S_FARMING_SHOP("Richard's Farming shop.", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAKE, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SEED_DIBBER, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SECATEURS, new ShopItemInfo(500, 6000, 5, 3))
		.put(ItemID.SPADE, new ShopItemInfo(500, 6000, 3, 2))
		.put(ItemID.GARDENING_TROWEL, new ShopItemInfo(500, 72000, 12, 8))
		.put(ItemID.WATERING_CAN, new ShopItemInfo(500, 6000, 8, 5))
		.put(ItemID.FILLED_PLANT_POT, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.PLANT_POT_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.COMPOST, new ShopItemInfo(500, 6000, 20, 14))
		.put(ItemID.COMPOST_PACK, new ShopItemInfo(10, 30000, 2000, 1400))
		.put(ItemID.EMPTY_SACK, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.SACK_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BASKET, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.BASKET_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BUCKET, new ShopItemInfo(100, 6000, 2, 1))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(15, 6000, 500, 350))
		.put(ItemID.POTATO, new ShopItemInfo(0, 60000, 1, 0))
		.put(ItemID.ONION, new ShopItemInfo(0, 60000, 3, 2))
		.put(ItemID.CABBAGE, new ShopItemInfo(0, 60000, 1, 0))
		.put(ItemID.TOMATO, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.SWEETCORN, new ShopItemInfo(0, 60000, 9, 6))
		.put(ItemID.STRAWBERRY, new ShopItemInfo(0, 60000, 17, 11))
		.put(ItemID.WATERMELON, new ShopItemInfo(0, 60000, 48, 33))
		.put(ItemID.HAMMERSTONE_HOPS, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.ASGARNIAN_HOPS, new ShopItemInfo(0, 60000, 5, 3))
		.put(ItemID.YANILLIAN_HOPS, new ShopItemInfo(0, 60000, 7, 4))
		.put(ItemID.KRANDORIAN_HOPS, new ShopItemInfo(0, 60000, 10, 7))
		.put(ItemID.WILDBLOOD_HOPS, new ShopItemInfo(0, 60000, 15, 10))
		.put(ItemID.JUTE_FIBRE, new ShopItemInfo(0, 60000, 6, 4))
		.put(ItemID.BARLEY, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.PLANT_CURE, new ShopItemInfo(100, 6000, 40, 28))
		.build()
	),
	RICHARD_S_WILDERNESS_CAPE_SHOP("Richard's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM6_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM16_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM26_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM36_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM46_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	ROK_S_CHOCS_BOX("Rok's Chocs Box.", new ShopRates(1.0, 0.65, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CHOCICE, new ShopItemInfo(30, 30000, 30, 19))
		.put(ItemID.CHOCOLATE_BAR, new ShopItemInfo(25, 12000, 10, 6))
		.build()
	),
	ROMMIK_S_CRAFTY_SUPPLIES("Rommik's Crafty Supplies.", new ShopRates(1.0, 0.65, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CHISEL, new ShopItemInfo(2, 60000, 1, 0))
		.put(ItemID.RING_MOULD, new ShopItemInfo(4, 60000, 5, 3))
		.put(ItemID.NECKLACE_MOULD, new ShopItemInfo(2, 60000, 5, 3))
		.put(ItemID.AMULET_MOULD, new ShopItemInfo(2, 60000, 5, 3))
		.put(ItemID.NEEDLE, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.THREAD, new ShopItemInfo(100, 3000, 1, 0))
		.put(ItemID.HOLY_MOULD, new ShopItemInfo(3, 60000, 5, 3))
		.put(ItemID.SICKLE_MOULD, new ShopItemInfo(6, 9000, 10, 6))
		.put(ItemID.TIARA_MOULD, new ShopItemInfo(10, 6000, 100, 65))
		.put(ItemID.BOLT_MOULD, new ShopItemInfo(10, 6000, 25, 16))
		.put(ItemID.BRACELET_MOULD, new ShopItemInfo(5, 60000, 5, 3))
		.build()
	),
	RUFUS__MEAT_EMPORIUM("Rufus' Meat Emporium", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAW_BEEF, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.RAW_CHICKEN, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.RAW_RAT_MEAT, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.RAW_BEAR_MEAT, new ShopItemInfo(10, 60000, 1, 0))
		.put(ItemID.RAW_TROUT, new ShopItemInfo(5, 300000, 13, 7))
		.put(ItemID.RAW_PIKE, new ShopItemInfo(5, 300000, 26, 14))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(5, 300000, 39, 21))
		.put(ItemID.RAW_SHARK, new ShopItemInfo(1, 600000, 221, 119))
		.build()
	),
	SAM_S_WILDERNESS_CAPE_SHOP("Sam's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM10_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM20_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM30_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM40_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM50_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	SARAH_S_FARMING_SHOP("Sarah's Farming shop.", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAKE, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SEED_DIBBER, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SECATEURS, new ShopItemInfo(500, 6000, 5, 3))
		.put(ItemID.SPADE, new ShopItemInfo(500, 6000, 3, 2))
		.put(ItemID.GARDENING_TROWEL, new ShopItemInfo(500, 72000, 12, 8))
		.put(ItemID.WATERING_CAN, new ShopItemInfo(500, 6000, 8, 5))
		.put(ItemID.FILLED_PLANT_POT, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.PLANT_POT_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.COMPOST, new ShopItemInfo(500, 6000, 20, 14))
		.put(ItemID.COMPOST_PACK, new ShopItemInfo(10, 30000, 2000, 1400))
		.put(ItemID.EMPTY_SACK, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.SACK_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BASKET, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.BASKET_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BUCKET, new ShopItemInfo(100, 6000, 2, 1))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(15, 6000, 500, 350))
		.put(ItemID.POTATO, new ShopItemInfo(0, 60000, 1, 0))
		.put(ItemID.ONION, new ShopItemInfo(0, 60000, 3, 2))
		.put(ItemID.CABBAGE, new ShopItemInfo(0, 60000, 1, 0))
		.put(ItemID.TOMATO, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.SWEETCORN, new ShopItemInfo(0, 60000, 9, 6))
		.put(ItemID.STRAWBERRY, new ShopItemInfo(0, 60000, 17, 11))
		.put(ItemID.WATERMELON, new ShopItemInfo(0, 60000, 48, 33))
		.put(ItemID.HAMMERSTONE_HOPS, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.ASGARNIAN_HOPS, new ShopItemInfo(0, 60000, 5, 3))
		.put(ItemID.YANILLIAN_HOPS, new ShopItemInfo(0, 60000, 7, 4))
		.put(ItemID.KRANDORIAN_HOPS, new ShopItemInfo(0, 60000, 10, 7))
		.put(ItemID.WILDBLOOD_HOPS, new ShopItemInfo(0, 60000, 15, 10))
		.put(ItemID.JUTE_FIBRE, new ShopItemInfo(0, 60000, 6, 4))
		.put(ItemID.BARLEY, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.PLANT_CURE, new ShopItemInfo(100, 6000, 40, 28))
		.build()
	),
	SAWMILL("Sawmill", new ShopRates(1.3, 0.5, 0.0), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SAW, new ShopItemInfo(1000, 6000, 13, 5))
		.put(ItemID.BOLT_OF_CLOTH, new ShopItemInfo(1000, 60000, 650, 250))
		.put(ItemID.BRONZE_NAILS, new ShopItemInfo(1000, 60000, 2, 1))
		.put(ItemID.IRON_NAILS, new ShopItemInfo(1000, 60000, 5, 2))
		.put(ItemID.STEEL_NAILS, new ShopItemInfo(1000, 60000, 3, 1))
		.build()
	),
	SCAVVO_S_RUNE_STORE("Scavvo's Rune Store.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RUNE_PLATESKIRT, new ShopItemInfo(1, 7200000, 64000, 38400))
		.put(ItemID.RUNE_PLATELEGS, new ShopItemInfo(1, 6900000, 64000, 38400))
		.put(ItemID.RUNE_MACE, new ShopItemInfo(1, 4200000, 14400, 8640))
		.put(ItemID.RUNE_CHAINBODY, new ShopItemInfo(1, 9000000, 50000, 30000))
		.put(ItemID.RUNE_LONGSWORD, new ShopItemInfo(1, 8400000, 32000, 19200))
		.put(ItemID.RUNE_SWORD, new ShopItemInfo(1, 6000000, 20800, 12480))
		.put(ItemID.GREEN_DHIDE_CHAPS, new ShopItemInfo(1, 300000, 3900, 2340))
		.put(ItemID.GREEN_DHIDE_VAMBRACES, new ShopItemInfo(1, 300000, 2500, 1500))
		.put(ItemID.COIF, new ShopItemInfo(2, 600000, 200, 120))
		.build()
	),
	SEDDU_S_ADVENTURER_S_STORE("Seddu's Adventurer's Store.", new ShopRates(0.95, 0.65, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RUNE_PLATESKIRT, new ShopItemInfo(1, 7200000, 60800, 41600))
		.put(ItemID.RUNE_PLATELEGS, new ShopItemInfo(1, 6900000, 60800, 41600))
		.put(ItemID.RUNE_CHAINBODY, new ShopItemInfo(1, 9000000, 47500, 32500))
		.put(ItemID.GREEN_DHIDE_CHAPS, new ShopItemInfo(1, 300000, 3705, 2535))
		.put(ItemID.GREEN_DHIDE_VAMBRACES, new ShopItemInfo(1, 300000, 2375, 1625))
		.put(ItemID.STEEL_KITESHIELD, new ShopItemInfo(1, 300000, 807, 552))
		.put(ItemID.BLACK_MED_HELM, new ShopItemInfo(1, 240000, 547, 374))
		.build()
	),
	THE_SHRIMP_AND_PARROT("The Shrimp and Parrot", new ShopRates(1.3, 0.75, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.HERRING, new ShopItemInfo(5, 540000, 13, 7))
		.put(ItemID.COD, new ShopItemInfo(5, 660000, 13, 7))
		.put(ItemID.TUNA, new ShopItemInfo(5, 1380000, 52, 30))
		.put(ItemID.LOBSTER, new ShopItemInfo(3, 1560000, 91, 52))
		.put(ItemID.SWORDFISH, new ShopItemInfo(2, 1740000, 104, 60))
		.put(ItemID.COOKED_KARAMBWAN, new ShopItemInfo(3, 540000, 325, 187))
		.build()
	),
	SIAN_S_RANGED_WEAPONRY("Sian's Ranged Weaponry", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.MITHRIL_ARROW, new ShopItemInfo(700, 36000, 32, 17))
		.put(ItemID.ADAMANT_ARROW, new ShopItemInfo(600, 72000, 80, 44))
		.put(ItemID.RUNE_ARROW, new ShopItemInfo(500, 78000, 400, 220))
		.put(ItemID.MAPLE_SHORTBOW, new ShopItemInfo(5, 60000, 400, 220))
		.put(ItemID.MAPLE_LONGBOW, new ShopItemInfo(5, 60000, 640, 352))
		.put(ItemID.YEW_SHORTBOW, new ShopItemInfo(5, 90000, 800, 440))
		.put(ItemID.YEW_LONGBOW, new ShopItemInfo(5, 90000, 1280, 704))
		.build()
	),
	SILVER_COG_SILVER_STALL("Silver Cog Silver Stall", new ShopRates(1.5, 0.8, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.UNSTRUNG_SYMBOL, new ShopItemInfo(2, 60000, 300, 160))
		.put(ItemID.SILVER_ORE, new ShopItemInfo(1, 1200000, 112, 60))
		.put(ItemID.SILVER_BAR, new ShopItemInfo(1, 600000, 225, 120))
		.build()
	),
	SIMON_S_WILDERNESS_CAPE_SHOP("Simon's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM9_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM19_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM29_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM39_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM49_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	SKULGRIMEN_S_BATTLE_GEAR("Skulgrimen's Battle Gear", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_WARHAMMER, new ShopItemInfo(5, 60000, 61, 32))
		.put(ItemID.IRON_WARHAMMER, new ShopItemInfo(4, 60000, 224, 121))
		.put(ItemID.STEEL_WARHAMMER, new ShopItemInfo(3, 60000, 832, 448))
		.put(ItemID.BLACK_WARHAMMER, new ShopItemInfo(3, 60000, 1274, 686))
		.put(ItemID.MITHRIL_WARHAMMER, new ShopItemInfo(2, 60000, 2158, 1162))
		.put(ItemID.ADAMANT_WARHAMMER, new ShopItemInfo(1, 60000, 5356, 2884))
		.put(ItemID.RUNE_WARHAMMER, new ShopItemInfo(0, 60000, 53950, 29050))
		.put(ItemID.ARCHER_HELM, new ShopItemInfo(5, 60000, 78000, 42000))
		.put(ItemID.BERSERKER_HELM, new ShopItemInfo(5, 60000, 78000, 42000))
		.put(ItemID.WARRIOR_HELM, new ShopItemInfo(5, 60000, 78000, 42000))
		.put(ItemID.FARSEER_HELM, new ShopItemInfo(5, 60000, 78000, 42000))
		.build()
	),
	SLAYER_EQUIPMENT_SHOP("Slayer Equipment (shop)", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
	.put(ItemID.ENCHANTED_GEM, new ShopItemInfo(50, 60000, 1, 0))
	.put(ItemID.MIRROR_SHIELD, new ShopItemInfo(100, 60000, 5000, 3000))
	.put(ItemID.LEAFBLADED_SPEAR, new ShopItemInfo(50, 60000, 31000, 0))
	.put(ItemID.BROAD_ARROWS, new ShopItemInfo(50000, 3000, 60, 0))
	.put(ItemID.BAG_OF_SALT, new ShopItemInfo(5000, 3000, 10, 6))
	.put(ItemID.ROCK_HAMMER, new ShopItemInfo(50, 60000, 500, 300))
	.put(ItemID.FACEMASK, new ShopItemInfo(50, 60000, 200, 120))
	.put(ItemID.EARMUFFS, new ShopItemInfo(50, 60000, 200, 120))
	.put(ItemID.NOSE_PEG, new ShopItemInfo(50, 60000, 200, 120))
	.put(ItemID.SLAYERS_STAFF, new ShopItemInfo(50, 60000, 21000, 12600))
	.put(ItemID.SPINY_HELMET, new ShopItemInfo(50, 60000, 650, 390))
	.put(ItemID.FISHING_EXPLOSIVE, new ShopItemInfo(5000, 30000, 60, 0))
	.put(ItemID.ICE_COOLER, new ShopItemInfo(5000, 3000, 1, 0))
	.put(ItemID.SLAYER_GLOVES, new ShopItemInfo(50, 9600, 200, 0))
	.put(ItemID.UNLIT_BUG_LANTERN, new ShopItemInfo(50, 60000, 130, 78))
	.put(ItemID.INSULATED_BOOTS, new ShopItemInfo(50, 60000, 200, 120))
	.put(ItemID.FUNGICIDE_SPRAY_10, new ShopItemInfo(50, 60000, 300, 0))
	.put(ItemID.FUNGICIDE, new ShopItemInfo(5000, 3000, 10, 0))
	.put(ItemID.WITCHWOOD_ICON, new ShopItemInfo(50, 60000, 900, 540))
	.put(ItemID.SLAYER_BELL, new ShopItemInfo(50, 60000, 150, 90))
	.put(ItemID.BROAD_ARROWHEADS, new ShopItemInfo(3000, 600, 55, 33))
	.put(ItemID.BROAD_ARROWHEAD_PACK, new ShopItemInfo(800, 600, 5500, 3300))
	.put(ItemID.UNFINISHED_BROAD_BOLTS, new ShopItemInfo(5000, 600, 55, 33))
	.put(ItemID.UNFINISHED_BROAD_BOLT_PACK, new ShopItemInfo(1000, 600, 5500, 3300))
	.put(ItemID.ROCK_THROWNHAMMER, new ShopItemInfo(5000, 3000, 200, 120))
	.put(ItemID.BOOTS_OF_STONE, new ShopItemInfo(50, 600, 200, 120))
	.build()
),
	SMITHING_SMITH_S_SHOP("Smithing Smith's Shop.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_SCIMITAR, new ShopItemInfo(5, 60000, 32, 19))
		.put(ItemID.IRON_SCIMITAR, new ShopItemInfo(3, 120000, 112, 67))
		.put(ItemID.STEEL_SCIMITAR, new ShopItemInfo(2, 360000, 400, 240))
		.put(ItemID.MITHRIL_SCIMITAR, new ShopItemInfo(1, 2400000, 1040, 624))
		.put(ItemID.HAMMER, new ShopItemInfo(5, 60000, 1, 0))
		.build()
	),
	SOLIHIB_S_FOOD_STALL("Solihib's Food Stall", new ShopRates(1.0, 0.5, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.MONKEY_NUTS, new ShopItemInfo(200, 60000, 3, 1))
		.put(ItemID.BANANA, new ShopItemInfo(1000, 600000, 2, 1))
		.put(ItemID.BANANA_STEW, new ShopItemInfo(10, 60000, 300, 150))
		.put(ItemID.MONKEY_BAR, new ShopItemInfo(20, 60000, 50, 25))
		.build()
	),
	THE_SPICE_IS_RIGHT("The Spice Is Right.", new ShopRates(1.5, 0.25, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.POT, new ShopItemInfo(5, 60000, 1, 0))
		.put(ItemID.GNOME_SPICE, new ShopItemInfo(10, 180000, 3, 0))
		.put(ItemID.CURRY_LEAF, new ShopItemInfo(0, 7200, 28, 4))
		.put(ItemID.PILE_OF_SALT, new ShopItemInfo(0, 60000, 30, 5))
		.put(ItemID.BUCKET_OF_SAP, new ShopItemInfo(0, 240000, 45, 7))
		.put(ItemID.ANTIPOISON3, new ShopItemInfo(20, 60000, 432, 72))
		.build()
	),
	TAMAYU_S_SPEAR_STALL("Tamayu's Spear Stall", new ShopRates(1.0, 0.75, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_SPEARKP, new ShopItemInfo(10, 6000, 26, 0))
		.put(ItemID.IRON_SPEARKP, new ShopItemInfo(10, 60000, 91, 0))
		.put(ItemID.STEEL_SPEARKP, new ShopItemInfo(5, 60000, 325, 0))
		.put(ItemID.MITHRIL_SPEARKP, new ShopItemInfo(2, 60000, 845, 0))
		.put(ItemID.ADAMANT_SPEARKP, new ShopItemInfo(0, 60000, 2080, 0))
		.put(ItemID.RUNE_SPEARKP, new ShopItemInfo(0, 60000, 20800, 0))
		.put(ItemID.CLEANING_CLOTH, new ShopItemInfo(10, 3000, 60, 45))
		.build()
	),
	THE_ASP_SNAKE_BAR("The Asp & Snake Bar.", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEER, new ShopItemInfo(83, 6000, 2, 1))
		.put(ItemID.WHISKY, new ShopItemInfo(10, 60000, 5, 2))
		.put(ItemID.JUG_OF_WINE, new ShopItemInfo(13, 90000, 1, 0))
		.put(ItemID.VODKA, new ShopItemInfo(5, 3000, 5, 2))
		.put(ItemID.BRANDY, new ShopItemInfo(4, 900000, 5, 2))
		.put(ItemID.GROG, new ShopItemInfo(12, 1500000, 3, 1))
		.build()
	),
	THE_DEEPER_LODE("The Deeper Lode", new ShopRates(1.4, 0.55, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEER, new ShopItemInfo(10, 30000, 2, 1))
		.put(ItemID.DWARVEN_STOUT, new ShopItemInfo(1, 120000, 2, 1))
		.put(ItemID.DRAGON_BITTER, new ShopItemInfo(3, 30000, 2, 1))
		.put(ItemID.KEBAB, new ShopItemInfo(2, 9000, 4, 1))
		.put(ItemID.BEER_GLASS, new ShopItemInfo(0, 24000, 2, 1))
		.build()
	),
	THE_GOLDEN_FIELD("The Golden Field", new ShopRates(1.0, 0.55, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEER, new ShopItemInfo(10, 6000, 2, 1))
		.put(ItemID.CIDER, new ShopItemInfo(10, 6000, 2, 1))
		.put(ItemID.JUG_OF_WINE, new ShopItemInfo(5, 3000, 1, 0))
		.put(ItemID.CUP_OF_TEA, new ShopItemInfo(5, 3000, 10, 5))
		.build()
	),
	THE_HAYMAKER_S_ARMS("The Haymaker's Arms", new ShopRates(1.0, 0.55, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEER, new ShopItemInfo(10, 6000, 2, 1))
		.put(ItemID.CIDER, new ShopItemInfo(10, 6000, 2, 1))
		.put(ItemID.JUG_OF_WINE, new ShopItemInfo(5, 3000, 1, 0))
		.put(ItemID.CUP_OF_TEA, new ShopItemInfo(5, 3000, 10, 5))
		.build()
	),
	THE_OTHER_INN("The Other Inn.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BEER, new ShopItemInfo(3, 60000, 2, 1))
		.put(ItemID.BRAINDEATH_RUM, new ShopItemInfo(3, 60000, 30, 0))
		.put(ItemID.JUG_OF_WINE, new ShopItemInfo(1, 9000000, 1, 0))
		.put(ItemID.STEW, new ShopItemInfo(5, 90000, 20, 12))
		.build()
	),
	THE_TOAD_AND_CHICKEN("The Toad and Chicken", new ShopRates(1.0, 0.0, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.ASGARNIAN_ALE, new ShopItemInfo(12, 6000, 2, 0))
		.put(ItemID.WIZARDS_MIND_BOMB, new ShopItemInfo(12, 6000, 2, 0))
		.put(ItemID.DWARVEN_STOUT, new ShopItemInfo(12, 6000, 2, 0))
		.build()
	),
	THESSALIA_S_FINE_CLOTHES("Thessalia's Fine Clothes.", new ShopRates(1.0, 0.55, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.WHITE_APRON, new ShopItemInfo(3, 60000, 2, 1))
		.put(ItemID.LEATHER_BODY, new ShopItemInfo(12, 60000, 21, 11))
		.put(ItemID.LEATHER_GLOVES, new ShopItemInfo(10, 60000, 6, 3))
		.put(ItemID.LEATHER_BOOTS, new ShopItemInfo(10, 60000, 6, 3))
		.put(ItemID.BROWN_APRON, new ShopItemInfo(1, 60000, 2, 1))
		.put(ItemID.PINK_SKIRT, new ShopItemInfo(5, 60000, 2, 1))
		.put(ItemID.BLACK_SKIRT, new ShopItemInfo(3, 60000, 2, 1))
		.put(ItemID.BLUE_SKIRT, new ShopItemInfo(2, 60000, 2, 1))
		.put(ItemID.RED_CAPE, new ShopItemInfo(4, 60000, 2, 1))
		.put(ItemID.SILK, new ShopItemInfo(5, 300000, 30, 16))
		.put(ItemID.PRIEST_GOWN_428, new ShopItemInfo(3, 60000, 5, 2))
		.put(ItemID.PRIEST_GOWN, new ShopItemInfo(3, 60000, 5, 2))
		.build()
	),
	THIRUS_URKAR_S_FINE_DYNAMITE_STORE("Thirus Urkar's Fine Dynamite Store", new ShopRates(11.5, 0.5, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.DYNAMITE, new ShopItemInfo(1000, 1500000, 1150, 50))
		.put(ItemID.TINDERBOX, new ShopItemInfo(2, 1800, 11, 0))
		.build()
	),
	THYRIA_S_WARES("Thyria's Wares", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.AIR_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.BODY_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(250, 6000, 90, 54))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(250, 9000, 180, 108))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(40, 6000, 330, 198))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(35, 6000, 9950, 5970))
		.build()
	),
	TIADECHE_S_KARAMBWAN_STALL("Tiadeche's Karambwan Stall", new ShopRates(0.55, 0.45, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAW_KARAMBWAN, new ShopItemInfo(10, 6000, 110, 90))
		.put(ItemID.RAW_KARAMBWANJI, new ShopItemInfo(50, 6000, 10, 0))
		.put(ItemID.KARAMBWAN_VESSEL, new ShopItemInfo(2, 60000, 2, 2))
		.build()
	),
	TONY_S_PIZZA_BASES("Tony's Pizza Bases", new ShopRates(1.0, 0.6, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.PIZZA_BASE, new ShopItemInfo(30, 60000, 4, 2))
		.build()
	),
	TOOTHY_S_PICKAXES("Toothy's Pickaxes", new ShopRates(1.3, 0.55, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_PICKAXE, new ShopItemInfo(5, 6000, 1, 0))
		.put(ItemID.IRON_PICKAXE, new ShopItemInfo(3, 9000, 182, 77))
		.put(ItemID.STEEL_PICKAXE, new ShopItemInfo(3, 9000, 650, 275))
		.put(ItemID.MITHRIL_PICKAXE, new ShopItemInfo(2, 30000, 1690, 715))
		.put(ItemID.ADAMANT_PICKAXE, new ShopItemInfo(1, 30000, 4160, 1760))
		.put(ItemID.RUNE_PICKAXE, new ShopItemInfo(1, 60000, 41600, 17600))
		.put(ItemID.POT, new ShopItemInfo(50000, 600, 1, 0))
		.build()
	),
	TRADER_SVEN_S_BLACKMARKET_GOODS("Trader Sven's Black-market Goods.", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CITIZEN_TOP, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.CITIZEN_TROUSERS, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.CITIZEN_SHOES, new ShopItemInfo(10, 60000, 6, 2))
		.put(ItemID.VYREWATCH_TOP, new ShopItemInfo(10, 60000, 650, 200))
		.put(ItemID.VYREWATCH_LEGS, new ShopItemInfo(10, 60000, 650, 200))
		.put(ItemID.VYREWATCH_SHOES, new ShopItemInfo(10, 60000, 650, 200))
		.build()
	),
	TUTAB_S_MAGICAL_MARKET("Tutab's Magical Market", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(1000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(1000, 6000, 4, 2))
		.put(ItemID.AIR_RUNE, new ShopItemInfo(1000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(1000, 6000, 4, 2))
		.put(ItemID.LAW_RUNE, new ShopItemInfo(250, 6000, 240, 144))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(40, 6000, 430, 258))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(40, 6000, 430, 258))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(40, 6000, 430, 258))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(40, 6000, 430, 258))
		.put(ItemID.EYE_OF_GNOME, new ShopItemInfo(10, 60000, 3, 1))
		.put(ItemID.MONKEY_DENTURES, new ShopItemInfo(100, 60000, 10, 6))
		.put(ItemID.MONKEY_TALISMAN, new ShopItemInfo(50, 60000, 1000, 600))
		.build()
	),
	TWO_FEET_CHARLEY_S_FISH_SHOP("Two Feet Charley's Fish Shop.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(10, 180000, 5, 3))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(10, 360000, 10, 6))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(7, 540000, 10, 6))
		.put(ItemID.RAW_MACKEREL, new ShopItemInfo(7, 600000, 15, 9))
		.put(ItemID.RAW_COD, new ShopItemInfo(6, 660000, 10, 6))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(5, 720000, 15, 9))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(4, 1380000, 40, 24))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(2, 1560000, 70, 42))
		.put(ItemID.RAW_BASS, new ShopItemInfo(2, 1620000, 40, 24))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(1, 1740000, 80, 48))
		.build()
	),
	TYNAN_S_FISHING_SUPPLIES("Tynan's Fishing Supplies", new ShopRates(1.0, 0.85, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BUCKET, new ShopItemInfo(1000, 600, 2, 1))
		.put(ItemID.SMALL_FISHING_NET, new ShopItemInfo(5, 60000, 5, 4))
		.put(ItemID.BIG_FISHING_NET, new ShopItemInfo(5, 60000, 20, 17))
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 5, 4))
		.put(ItemID.HARPOON, new ShopItemInfo(2, 240000, 5, 4))
		.put(ItemID.LOBSTER_POT, new ShopItemInfo(2, 240000, 20, 17))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(1200, 600, 3, 2))
		.put(ItemID.SANDWORMS, new ShopItemInfo(500, 30000, 90, 76))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(80, 3000, 300, 255))
		.put(ItemID.SANDWORMS_PACK, new ShopItemInfo(50, 3000, 9000, 7650))
		.build()
	),
	VALAINE_S_SHOP_OF_CHAMPIONS("Valaine's Shop of Champions.", new ShopRates(1.3, 0.4, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BLUE_CAPE, new ShopItemInfo(2, 600000, 41, 12))
		.put(ItemID.BLACK_FULL_HELM, new ShopItemInfo(1, 600000, 1372, 422))
		.put(ItemID.BLACK_PLATELEGS, new ShopItemInfo(1, 12000000, 2496, 768))
		.put(ItemID.ADAMANT_PLATEBODY, new ShopItemInfo(1, 4800000, 21632, 6656))
		.build()
	),
	VANESSA_S_FARMING_SHOP("Vanessa's Farming shop.", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAKE, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SEED_DIBBER, new ShopItemInfo(500, 6000, 6, 4))
		.put(ItemID.SECATEURS, new ShopItemInfo(500, 6000, 5, 3))
		.put(ItemID.SPADE, new ShopItemInfo(500, 6000, 3, 2))
		.put(ItemID.GARDENING_TROWEL, new ShopItemInfo(500, 72000, 12, 8))
		.put(ItemID.WATERING_CAN, new ShopItemInfo(500, 6000, 8, 5))
		.put(ItemID.FILLED_PLANT_POT, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.PLANT_POT_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.COMPOST, new ShopItemInfo(500, 6000, 20, 14))
		.put(ItemID.COMPOST_PACK, new ShopItemInfo(10, 30000, 2000, 1400))
		.put(ItemID.EMPTY_SACK, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.SACK_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BASKET, new ShopItemInfo(500, 6000, 1, 0))
		.put(ItemID.BASKET_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BUCKET, new ShopItemInfo(100, 6000, 2, 1))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(15, 6000, 500, 350))
		.put(ItemID.POTATO, new ShopItemInfo(0, 60000, 1, 0))
		.put(ItemID.ONION, new ShopItemInfo(0, 60000, 3, 2))
		.put(ItemID.CABBAGE, new ShopItemInfo(0, 60000, 1, 0))
		.put(ItemID.TOMATO, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.SWEETCORN, new ShopItemInfo(0, 60000, 9, 6))
		.put(ItemID.STRAWBERRY, new ShopItemInfo(0, 60000, 17, 11))
		.put(ItemID.WATERMELON, new ShopItemInfo(0, 60000, 48, 33))
		.put(ItemID.HAMMERSTONE_HOPS, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.ASGARNIAN_HOPS, new ShopItemInfo(0, 60000, 5, 3))
		.put(ItemID.YANILLIAN_HOPS, new ShopItemInfo(0, 60000, 7, 4))
		.put(ItemID.KRANDORIAN_HOPS, new ShopItemInfo(0, 60000, 10, 7))
		.put(ItemID.WILDBLOOD_HOPS, new ShopItemInfo(0, 60000, 15, 10))
		.put(ItemID.JUTE_FIBRE, new ShopItemInfo(0, 60000, 6, 4))
		.put(ItemID.BARLEY, new ShopItemInfo(0, 60000, 4, 2))
		.put(ItemID.PLANT_CURE, new ShopItemInfo(100, 6000, 40, 28))
		.build()
	),
	VANNAH_S_FARMING_STALL("Vannah's Farming Stall", new ShopRates(1.0, 0.7, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RAKE, new ShopItemInfo(5, 6000, 6, 4))
		.put(ItemID.SEED_DIBBER, new ShopItemInfo(5, 6000, 6, 4))
		.put(ItemID.SECATEURS, new ShopItemInfo(5, 6000, 5, 3))
		.put(ItemID.SPADE, new ShopItemInfo(5, 6000, 3, 2))
		.put(ItemID.GARDENING_TROWEL, new ShopItemInfo(3, 12000, 12, 8))
		.put(ItemID.WATERING_CAN, new ShopItemInfo(30, 3000, 8, 5))
		.put(ItemID.FILLED_PLANT_POT, new ShopItemInfo(100, 6000, 1, 0))
		.put(ItemID.PLANT_POT_PACK, new ShopItemInfo(10, 3000, 100, 70))
		.put(ItemID.COMPOST, new ShopItemInfo(100, 6000, 20, 14))
		.put(ItemID.COMPOST_PACK, new ShopItemInfo(10, 30000, 2000, 1400))
		.put(ItemID.BUCKET, new ShopItemInfo(100, 6000, 2, 1))
		.put(ItemID.EMPTY_BUCKET_PACK, new ShopItemInfo(15, 6000, 500, 350))
		.put(ItemID.EMPTY_SACK, new ShopItemInfo(100, 1200, 1, 0))
		.put(ItemID.SACK_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.BASKET, new ShopItemInfo(100, 1200, 1, 0))
		.put(ItemID.BASKET_PACK, new ShopItemInfo(30, 1200, 100, 70))
		.put(ItemID.PLANT_CURE, new ShopItemInfo(40, 3000, 40, 28))
		.build()
	),
	VARROCK_SWORDSHOP("Varrock Swordshop", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_SWORD, new ShopItemInfo(5, 60000, 26, 15))
		.put(ItemID.IRON_SWORD, new ShopItemInfo(4, 120000, 91, 54))
		.put(ItemID.STEEL_SWORD, new ShopItemInfo(4, 240000, 325, 195))
		.put(ItemID.BLACK_SWORD, new ShopItemInfo(3, 600000, 624, 374))
		.put(ItemID.MITHRIL_SWORD, new ShopItemInfo(3, 1800000, 845, 507))
		.put(ItemID.ADAMANT_SWORD, new ShopItemInfo(2, 7200000, 2080, 1248))
		.put(ItemID.BRONZE_LONGSWORD, new ShopItemInfo(4, 60000, 40, 24))
		.put(ItemID.IRON_LONGSWORD, new ShopItemInfo(3, 120000, 140, 84))
		.put(ItemID.STEEL_LONGSWORD, new ShopItemInfo(3, 240000, 500, 300))
		.put(ItemID.BLACK_LONGSWORD, new ShopItemInfo(2, 600000, 960, 576))
		.put(ItemID.MITHRIL_LONGSWORD, new ShopItemInfo(2, 1800000, 1300, 780))
		.put(ItemID.ADAMANT_LONGSWORD, new ShopItemInfo(1, 7200000, 3200, 1920))
		.put(ItemID.BRONZE_DAGGER, new ShopItemInfo(10, 60000, 10, 6))
		.put(ItemID.IRON_DAGGER, new ShopItemInfo(6, 120000, 35, 21))
		.put(ItemID.STEEL_DAGGER, new ShopItemInfo(5, 240000, 125, 75))
		.put(ItemID.BLACK_DAGGER, new ShopItemInfo(4, 600000, 240, 144))
		.put(ItemID.MITHRIL_DAGGER, new ShopItemInfo(3, 1800000, 325, 195))
		.put(ItemID.ADAMANT_DAGGER, new ShopItemInfo(2, 7200000, 800, 480))
		.build()
	),
	VERMUNDI_S_CLOTHES_STALL("Vermundi's Clothes Stall", new ShopRates(1.3, 0.55, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SKIRT, new ShopItemInfo(3, 24000, 455, 192))
		.put(ItemID.TROUSERS, new ShopItemInfo(3, 18000, 715, 302))
		.put(ItemID.SHORTS, new ShopItemInfo(3, 15000, 364, 154))
		.put(ItemID.WOVEN_TOP, new ShopItemInfo(3, 27000, 650, 275))
		.put(ItemID.SHIRT, new ShopItemInfo(3, 24000, 585, 247))
		.put(ItemID.SILK, new ShopItemInfo(5, 60000, 39, 16))
		.build()
	),
	VIGR_S_WARHAMMERS("Vigr's Warhammers", new ShopRates(1.3, 0.55, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_WARHAMMER, new ShopItemInfo(5, 60000, 61, 25))
		.put(ItemID.IRON_WARHAMMER, new ShopItemInfo(4, 120000, 224, 95))
		.put(ItemID.STEEL_WARHAMMER, new ShopItemInfo(3, 240000, 832, 352))
		.put(ItemID.BLACK_WARHAMMER, new ShopItemInfo(3, 360000, 1274, 539))
		.put(ItemID.MITHRIL_WARHAMMER, new ShopItemInfo(2, 480000, 2158, 913))
		.put(ItemID.ADAMANT_WARHAMMER, new ShopItemInfo(1, 600000, 5356, 2266))
		.build()
	),
	VOID_KNIGHT_ARCHERY_STORE("Void Knight Archery Store", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_JAVELIN, new ShopItemInfo(10, 12000, 4, 2))
		.put(ItemID.IRON_JAVELIN, new ShopItemInfo(10, 12000, 6, 3))
		.put(ItemID.STEEL_JAVELIN, new ShopItemInfo(10, 24000, 24, 14))
		.put(ItemID.MITHRIL_JAVELIN, new ShopItemInfo(5, 36000, 64, 38))
		.put(ItemID.ADAMANT_JAVELIN, new ShopItemInfo(5, 48000, 160, 96))
		.put(ItemID.RUNE_JAVELIN, new ShopItemInfo(5, 60000, 400, 240))
		.put(ItemID.BRONZE_ARROWTIPS, new ShopItemInfo(10, 6000, 1, 0))
		.put(ItemID.IRON_ARROWTIPS, new ShopItemInfo(10, 12000, 2, 1))
		.put(ItemID.STEEL_ARROWTIPS, new ShopItemInfo(10, 24000, 6, 3))
		.put(ItemID.MITHRIL_ARROWTIPS, new ShopItemInfo(5, 24000, 16, 9))
		.put(ItemID.ADAMANT_ARROWTIPS, new ShopItemInfo(5, 24000, 40, 24))
		.put(ItemID.RUNE_ARROWTIPS, new ShopItemInfo(5, 24000, 200, 120))
		.build()
	),
	VOID_KNIGHT_MAGIC_STORE("Void Knight Magic Store", new ShopRates(1.0, 0.6, 0.001), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FIRE_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.WATER_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.AIR_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.EARTH_RUNE, new ShopItemInfo(5000, 6000, 4, 2))
		.put(ItemID.MIND_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.BODY_RUNE, new ShopItemInfo(5000, 6000, 3, 1))
		.put(ItemID.CHAOS_RUNE, new ShopItemInfo(250, 6000, 90, 54))
		.put(ItemID.DEATH_RUNE, new ShopItemInfo(250, 9000, 180, 108))
		.put(ItemID.FIRE_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.WATER_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.AIR_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.EARTH_RUNE_PACK, new ShopItemInfo(80, 6000, 430, 258))
		.put(ItemID.MIND_RUNE_PACK, new ShopItemInfo(40, 6000, 330, 198))
		.put(ItemID.CHAOS_RUNE_PACK, new ShopItemInfo(35, 6000, 9950, 5970))
		.build()
	),
	WARRENS_FISH_MONGER("Warrens Fish Monger", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.SMALL_FISHING_NET, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.FISHING_ROD, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.FLY_FISHING_ROD, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.HARPOON, new ShopItemInfo(2, 240000, 6, 3))
		.put(ItemID.LOBSTER_POT, new ShopItemInfo(2, 240000, 26, 14))
		.put(ItemID.FISHING_BAIT, new ShopItemInfo(1500, 600, 3, 2))
		.put(ItemID.BAIT_PACK, new ShopItemInfo(80, 6000, 390, 210))
		.put(ItemID.FEATHER, new ShopItemInfo(1000, 600, 2, 1))
		.put(ItemID.FEATHER_PACK, new ShopItemInfo(50, 1200, 260, 140))
		.put(ItemID.BIG_FISHING_NET, new ShopItemInfo(5, 60000, 26, 14))
		.put(ItemID.RAW_SHRIMPS, new ShopItemInfo(0, 180000, 6, 3))
		.put(ItemID.RAW_SARDINE, new ShopItemInfo(200, 600, 13, 7))
		.put(ItemID.RAW_HERRING, new ShopItemInfo(0, 540000, 13, 7))
		.put(ItemID.RAW_MACKEREL, new ShopItemInfo(0, 600000, 19, 10))
		.put(ItemID.RAW_COD, new ShopItemInfo(0, 660000, 13, 7))
		.put(ItemID.RAW_ANCHOVIES, new ShopItemInfo(0, 720000, 19, 10))
		.put(ItemID.RAW_TROUT, new ShopItemInfo(0, 900000, 13, 7))
		.put(ItemID.RAW_PIKE, new ShopItemInfo(0, 1080000, 26, 14))
		.put(ItemID.RAW_SALMON, new ShopItemInfo(0, 1260000, 39, 21))
		.put(ItemID.RAW_TUNA, new ShopItemInfo(0, 1380000, 52, 28))
		.put(ItemID.RAW_LOBSTER, new ShopItemInfo(0, 1560000, 91, 49))
		.put(ItemID.RAW_BASS, new ShopItemInfo(0, 1620000, 52, 28))
		.put(ItemID.RAW_SWORDFISH, new ShopItemInfo(0, 1740000, 104, 56))
		.put(ItemID.RAW_SHARK, new ShopItemInfo(0, 2100000, 221, 119))
		.build()
	),
	WARRIOR_GUILD_ARMOURY("Warrior Guild Armoury", new ShopRates(1.2, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.IRON_BATTLEAXE, new ShopItemInfo(5, 60000, 218, 109))
		.put(ItemID.STEEL_BATTLEAXE, new ShopItemInfo(2, 120000, 780, 390))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(1, 1800000, 2028, 1014))
		.put(ItemID.BRONZE_SWORD, new ShopItemInfo(5, 60000, 31, 15))
		.put(ItemID.IRON_SWORD, new ShopItemInfo(4, 120000, 109, 54))
		.put(ItemID.STEEL_SWORD, new ShopItemInfo(4, 240000, 390, 195))
		.put(ItemID.BLACK_SWORD, new ShopItemInfo(3, 600000, 748, 374))
		.put(ItemID.MITHRIL_SWORD, new ShopItemInfo(3, 1800000, 1014, 507))
		.put(ItemID.ADAMANT_SWORD, new ShopItemInfo(2, 7200000, 2496, 1248))
		.put(ItemID.BRONZE_LONGSWORD, new ShopItemInfo(4, 60000, 48, 24))
		.put(ItemID.IRON_LONGSWORD, new ShopItemInfo(3, 120000, 168, 84))
		.put(ItemID.STEEL_LONGSWORD, new ShopItemInfo(3, 240000, 600, 300))
		.put(ItemID.BLACK_LONGSWORD, new ShopItemInfo(2, 600000, 1152, 576))
		.put(ItemID.MITHRIL_LONGSWORD, new ShopItemInfo(2, 1800000, 1560, 780))
		.put(ItemID.ADAMANT_LONGSWORD, new ShopItemInfo(1, 7200000, 3840, 1920))
		.put(ItemID.BRONZE_DAGGER, new ShopItemInfo(10, 60000, 12, 6))
		.put(ItemID.IRON_DAGGER, new ShopItemInfo(6, 120000, 42, 21))
		.put(ItemID.STEEL_DAGGER, new ShopItemInfo(5, 240000, 150, 75))
		.put(ItemID.BLACK_DAGGER, new ShopItemInfo(4, 600000, 288, 144))
		.put(ItemID.MITHRIL_DAGGER, new ShopItemInfo(3, 1800000, 390, 195))
		.put(ItemID.ADAMANT_DAGGER, new ShopItemInfo(2, 7200000, 960, 480))
		.put(ItemID.BRONZE_MACE, new ShopItemInfo(5, 60000, 21, 10))
		.put(ItemID.IRON_MACE, new ShopItemInfo(4, 120000, 75, 37))
		.put(ItemID.STEEL_MACE, new ShopItemInfo(4, 240000, 270, 135))
		.put(ItemID.MITHRIL_MACE, new ShopItemInfo(3, 1800000, 702, 351))
		.put(ItemID.ADAMANT_MACE, new ShopItemInfo(2, 7200000, 1728, 864))
		.put(ItemID.BRONZE_2H_SWORD, new ShopItemInfo(4, 120000, 96, 48))
		.put(ItemID.IRON_2H_SWORD, new ShopItemInfo(3, 180000, 336, 168))
		.put(ItemID.STEEL_2H_SWORD, new ShopItemInfo(2, 300000, 1200, 600))
		.put(ItemID.BLACK_2H_SWORD, new ShopItemInfo(1, 420000, 2304, 1152))
		.put(ItemID.MITHRIL_2H_SWORD, new ShopItemInfo(1, 600000, 3120, 1560))
		.put(ItemID.ADAMANT_2H_SWORD, new ShopItemInfo(1, 9000000, 7680, 3840))
		.put(ItemID.BRONZE_CHAINBODY, new ShopItemInfo(5, 60000, 72, 36))
		.put(ItemID.IRON_CHAINBODY, new ShopItemInfo(3, 120000, 252, 126))
		.put(ItemID.STEEL_CHAINBODY, new ShopItemInfo(3, 240000, 900, 450))
		.put(ItemID.BRONZE_MED_HELM, new ShopItemInfo(5, 60000, 28, 14))
		.put(ItemID.IRON_MED_HELM, new ShopItemInfo(3, 120000, 100, 50))
		.put(ItemID.STEEL_MED_HELM, new ShopItemInfo(3, 240000, 360, 180))
		.build()
	),
	WARRIOR_GUILD_FOOD_SHOP("Warrior Guild Food Shop", new ShopRates(1.2, 0.15, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TROUT, new ShopItemInfo(10, 60000, 12, 1))
		.put(ItemID.BASS, new ShopItemInfo(10, 60000, 48, 6))
		.put(ItemID.PLAIN_PIZZA, new ShopItemInfo(5, 60000, 48, 6))
		.put(ItemID.POTATO_WITH_CHEESE, new ShopItemInfo(10, 60000, 9, 1))
		.put(ItemID.STEW, new ShopItemInfo(10, 60000, 24, 3))
		.build()
	),
	WARRIOR_GUILD_POTION_SHOP("Warrior Guild Potion Shop", new ShopRates(1.2, 0.15, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.STRENGTH_POTION3, new ShopItemInfo(10, 60000, 15, 1))
		.put(ItemID.ATTACK_POTION3, new ShopItemInfo(10, 60000, 14, 1))
		.put(ItemID.DEFENCE_POTION3, new ShopItemInfo(10, 60000, 144, 18))
		.build()
	),
	WAYNE_S_CHAINS_CHAINMAIL_SPECIALIST("Wayne's Chains! - Chainmail specialist.", new ShopRates(1.0, 0.65, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_CHAINBODY, new ShopItemInfo(3, 120000, 60, 39))
		.put(ItemID.IRON_CHAINBODY, new ShopItemInfo(2, 180000, 210, 136))
		.put(ItemID.STEEL_CHAINBODY, new ShopItemInfo(1, 1200000, 750, 487))
		.put(ItemID.BLACK_CHAINBODY, new ShopItemInfo(1, 1500000, 1440, 936))
		.put(ItemID.MITHRIL_CHAINBODY, new ShopItemInfo(1, 2100000, 1950, 1267))
		.put(ItemID.ADAMANT_CHAINBODY, new ShopItemInfo(1, 5400000, 4800, 3120))
		.build()
	),
	WEAPONS_GALORE("Weapons galore", new ShopRates(1.1, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.MITHRIL_LONGSWORD, new ShopItemInfo(4, 60000, 1430, 910))
		.put(ItemID.MITHRIL_WARHAMMER, new ShopItemInfo(4, 60000, 1826, 1162))
		.put(ItemID.MITHRIL_BATTLEAXE, new ShopItemInfo(4, 60000, 1859, 1183))
		.put(ItemID.MITHRIL_CLAWS, new ShopItemInfo(4, 60000, 522, 332))
		.put(ItemID.MITHRIL_2H_SWORD, new ShopItemInfo(4, 60000, 2860, 1820))
		.build()
	),
	WHITE_KNIGHT_ARMOURY("White Knight Armoury", new ShopRates(1.0, 1.0, 0.0), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.WHITE_CHAINBODY, new ShopItemInfo(20, 60000, 1440, 1440))
		.put(ItemID.WHITE_PLATELEGS, new ShopItemInfo(20, 60000, 1920, 1920))
		.put(ItemID.WHITE_PLATESKIRT, new ShopItemInfo(20, 60000, 1920, 1920))
		.put(ItemID.WHITE_MED_HELM, new ShopItemInfo(20, 60000, 576, 576))
		.put(ItemID.WHITE_SQ_SHIELD, new ShopItemInfo(20, 60000, 1152, 1152))
		.put(ItemID.WHITE_FULL_HELM, new ShopItemInfo(20, 60000, 1056, 1056))
		.put(ItemID.WHITE_KITESHIELD, new ShopItemInfo(20, 60000, 1632, 1632))
		.put(ItemID.WHITE_PLATEBODY, new ShopItemInfo(20, 60000, 3840, 3840))
		.put(ItemID.WHITE_BOOTS, new ShopItemInfo(20, 60000, 576, 576))
		.put(ItemID.WHITE_GLOVES, new ShopItemInfo(20, 60000, 6, 6))
		.put(ItemID.WHITE_DAGGER, new ShopItemInfo(20, 60000, 240, 240))
		.put(ItemID.WHITE_SWORD, new ShopItemInfo(20, 60000, 624, 624))
		.put(ItemID.WHITE_MACE, new ShopItemInfo(20, 60000, 432, 432))
		.put(ItemID.WHITE_MAGIC_STAFF, new ShopItemInfo(20, 60000, 200, 200))
		.put(ItemID.WHITE_LONGSWORD, new ShopItemInfo(20, 60000, 960, 960))
		.put(ItemID.WHITE_WARHAMMER, new ShopItemInfo(20, 60000, 980, 980))
		.put(ItemID.WHITE_BATTLEAXE, new ShopItemInfo(20, 60000, 1248, 1248))
		.put(ItemID.WHITE_SCIMITAR, new ShopItemInfo(20, 60000, 768, 768))
		.put(ItemID.WHITE_CLAWS, new ShopItemInfo(20, 60000, 360, 360))
		.put(ItemID.WHITE_2H_SWORD, new ShopItemInfo(20, 60000, 1920, 1920))
		.put(ItemID.WHITE_HALBERD, new ShopItemInfo(20, 60000, 1920, 1920))
		.build()
	),
	WILLIAM_S_WILDERNESS_CAPE_SHOP("William's Wilderness Cape Shop.", new ShopRates(1.0, 0.6, 0.01), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.TEAM1_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM11_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM21_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM31_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.put(ItemID.TEAM41_CAPE, new ShopItemInfo(100, 60000, 50, 30))
		.build()
	),
	WINE_SHOP("Wine Shop.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.JUG_OF_WINE, new ShopItemInfo(5, 900000, 1, 0))
		.put(ItemID.JUG, new ShopItemInfo(3, 60000, 1, 0))
		.put(ItemID.EMPTY_JUG_PACK, new ShopItemInfo(5, 9000, 140, 84))
		.put(ItemID.BOTTLE_OF_WINE, new ShopItemInfo(2, 900000, 500, 300))
		.put(ItemID.JUG_OF_VINEGAR, new ShopItemInfo(500, 6000, 1, 0))
		.build()
	),
	YARSUL_S_PRODIGIOUS_PICKAXES("Yarsul's Prodigious Pickaxes", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_PICKAXE, new ShopItemInfo(6, 30000, 1, 0))
		.put(ItemID.IRON_PICKAXE, new ShopItemInfo(5, 60000, 140, 84))
		.put(ItemID.STEEL_PICKAXE, new ShopItemInfo(4, 120000, 500, 300))
		.put(ItemID.MITHRIL_PICKAXE, new ShopItemInfo(3, 180000, 1300, 780))
		.put(ItemID.ADAMANT_PICKAXE, new ShopItemInfo(2, 300000, 3200, 1920))
		.put(ItemID.RUNE_PICKAXE, new ShopItemInfo(1, 420000, 32000, 19200))
		.build()
	),
	YE_OLDE_TEA_SHOPPE("Ye olde Tea Shoppe.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.CUP_OF_TEA, new ShopItemInfo(20, 30000, 10, 6))
		.build()
	),
	YRSA_S_ACCOUTREMENTS("Yrsa's Accoutrements", new ShopRates(1.3, 0.7, 0.03), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.FREMENNIK_BLUE_SHIRT, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_RED_SHIRT, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_BROWN_SHIRT, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_GREY_SHIRT, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_BEIGE_SHIRT, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_ROBE, new ShopItemInfo(5, 60000, 650, 350))
		.put(ItemID.FREMENNIK_SKIRT, new ShopItemInfo(5, 60000, 650, 350))
		.put(ItemID.FREMENNIK_HAT, new ShopItemInfo(5, 60000, 650, 350))
		.put(ItemID.FREMENNIK_BOOTS, new ShopItemInfo(5, 60000, 650, 350))
		.put(ItemID.FREMENNIK_GLOVES, new ShopItemInfo(5, 60000, 650, 350))
		.put(ItemID.FREMENNIK_GREEN_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_BLUE_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_BROWN_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_CYAN_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_RED_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_GREY_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_YELLOW_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_TEAL_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_PURPLE_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_PINK_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.put(ItemID.FREMENNIK_BLACK_CLOAK, new ShopItemInfo(5, 60000, 325, 175))
		.build()
	),
	ZAFF_S_SUPERIOR_STAFFS("Zaff's Superior Staffs!", new ShopRates(1.0, 0.55, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BATTLESTAFF, new ShopItemInfo(5, 60000, 7000, 3850))
		.put(ItemID.STAFF, new ShopItemInfo(5, 60000, 15, 8))
		.put(ItemID.MAGIC_STAFF, new ShopItemInfo(5, 120000, 200, 110))
		.put(ItemID.STAFF_OF_AIR, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_WATER, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_EARTH, new ShopItemInfo(2, 600000, 1500, 825))
		.put(ItemID.STAFF_OF_FIRE, new ShopItemInfo(2, 600000, 1500, 825))
		.build()
	),
	ZEKE_S_SUPERIOR_SCIMITARS("Zeke's Superior Scimitars.", new ShopRates(1.0, 0.55, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_SCIMITAR, new ShopItemInfo(5, 60000, 32, 17))
		.put(ItemID.IRON_SCIMITAR, new ShopItemInfo(3, 120000, 112, 61))
		.put(ItemID.STEEL_SCIMITAR, new ShopItemInfo(2, 360000, 400, 220))
		.put(ItemID.MITHRIL_SCIMITAR, new ShopItemInfo(1, 2400000, 1040, 572))
		.build()
	),
	ZENESHA_S_PLATE_MAIL_BODY_SHOP("Zenesha's Plate Mail Body Shop.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_PLATEBODY, new ShopItemInfo(3, 60000, 160, 96))
		.put(ItemID.IRON_PLATEBODY, new ShopItemInfo(1, 120000, 560, 336))
		.put(ItemID.STEEL_PLATEBODY, new ShopItemInfo(1, 240000, 2000, 1200))
		.put(ItemID.BLACK_PLATEBODY, new ShopItemInfo(1, 1800000, 3840, 2304))
		.put(ItemID.MITHRIL_PLATEBODY, new ShopItemInfo(1, 1800000, 5200, 3120))
		.build()
	),
	UGLUG_S_STUFFSIES("~ Uglug's stuffsies ~", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.RELICYMS_BALM3, new ShopItemInfo(100, 6000, 200, 120))
		.put(ItemID.SANFEW_SERUM3, new ShopItemInfo(0, 60000, 240, 144))
		.put(ItemID.ACHEY_TREE_LOGS, new ShopItemInfo(100, 60000, 4, 2))
		.put(ItemID.BOW_STRING, new ShopItemInfo(10, 120000, 10, 6))
		.put(ItemID.RAW_CHOMPY, new ShopItemInfo(0, 300000, 85, 51))
		.put(ItemID.COOKED_CHOMPY, new ShopItemInfo(10, 60000, 130, 78))
		.put(ItemID.OGRE_COFFIN_KEY, new ShopItemInfo(0, 60000, 100, 60))
		.put(ItemID.KNIFE, new ShopItemInfo(5, 60000, 6, 3))
		.put(ItemID.BRONZE_BRUTAL, new ShopItemInfo(0, 600000, 5, 3))
		.put(ItemID.IRON_BRUTAL, new ShopItemInfo(0, 600000, 10, 6))
		.put(ItemID.STEEL_BRUTAL, new ShopItemInfo(0, 600000, 20, 12))
		.put(ItemID.BLACK_BRUTAL, new ShopItemInfo(0, 900000, 35, 21))
		.put(ItemID.MITHRIL_BRUTAL, new ShopItemInfo(0, 1200000, 50, 30))
		.put(ItemID.ADAMANT_BRUTAL, new ShopItemInfo(0, 1800000, 95, 57))
		.put(ItemID.RUNE_BRUTAL, new ShopItemInfo(0, 2400000, 450, 270))
		.put(ItemID.COMP_OGRE_BOW, new ShopItemInfo(0, 1200000, 180, 108))
		.build()
	),
	HORVIK_S_ARMOUR_SHOP("Horvik's Armour Shop.", new ShopRates(1.0, 0.6, 0.02), ImmutableMap.<Integer, ShopItemInfo>builder()
		.put(ItemID.BRONZE_CHAINBODY, new ShopItemInfo(5, 60000, 60, 36))
		.put(ItemID.IRON_CHAINBODY, new ShopItemInfo(3, 120000, 210, 126))
		.put(ItemID.STEEL_CHAINBODY, new ShopItemInfo(3, 240000, 750, 450))
		.put(ItemID.MITHRIL_CHAINBODY, new ShopItemInfo(1, 1800000, 1950, 1170))
		.put(ItemID.BRONZE_PLATEBODY, new ShopItemInfo(3, 60000, 160, 96))
		.put(ItemID.IRON_PLATEBODY, new ShopItemInfo(1, 120000, 560, 336))
		.put(ItemID.STEEL_PLATEBODY, new ShopItemInfo(1, 240000, 2000, 1200))
		.put(ItemID.BLACK_PLATEBODY, new ShopItemInfo(1, 1800000, 3840, 2304))
		.put(ItemID.MITHRIL_PLATEBODY, new ShopItemInfo(1, 1800000, 5200, 3120))
		.put(ItemID.IRON_PLATELEGS, new ShopItemInfo(1, 60000, 280, 168))
		.put(ItemID.STUDDED_BODY, new ShopItemInfo(1, 420000, 850, 510))
		.put(ItemID.STUDDED_CHAPS, new ShopItemInfo(1, 420000, 750, 450))
		.build()
	);

	private final String shopName;
	private final ImmutableMap<Integer, ShopItemInfo> shopItems;
	private final ShopRates shopRates;

	SpecialtyShop(String shopName, ShopRates shopRates, ImmutableMap<Integer, ShopItemInfo> shopItems)
	{
		this.shopName = shopName;
		this.shopRates = shopRates;
		this.shopItems = shopItems;
	}

	public static SpecialtyShop getData(String shopName)
	{
		for (SpecialtyShop specialtyShop : SpecialtyShop.values())
		{
			if (specialtyShop.shopName.equalsIgnoreCase(shopName))
			{
				return specialtyShop;
			}
		}
		return null;
	}

	@Override
	public ImmutableMap<Integer, ShopItemInfo> getShopItems()
	{
		return shopItems;
	}

	@Override
	public ShopRates getShopRates()
	{
		return shopRates;
	}

}